item.ingot_copper.name=铜锭
item.ingot_tin.name=锡锭
item.gem_ruby.name=红宝石
item.nugget_copper.name=铜粒
item.nugget_tin.name=锡粒
tile.block_copper.name=铜块
tile.block_tin.name=锡块
tile.block_ruby.name=红宝石块
tile.ore_copper.name=铜矿
tile.ore_tin.name=锡矿
tile.ore_ruby.name=红宝石矿
tile.ore_native_copper.name=自然铜矿
item.nugget_bronze.name=青铜粒
item.ingot_bronze.name=青铜锭
tile.block_bronze.name=青铜块
tile.sided_gear_holder.name=小型齿轮方块
item.gear_copper.name=铜齿轮
item.gear_tin.name=锡齿轮
item.gear_bronze.name=青铜齿轮
item.gear_iron.name=铁齿轮
item.gear_gold.name=金齿轮
item.gear_lead.name=铅齿轮
item.gear_electrum.name=琥珀金齿轮
item.gear_invar.name=殷钢齿轮
item.gear_nickel.name=镍齿轮
item.gear_silver.name=银齿轮
item.gear_platinum.name=铂齿轮
item.hand_crank.name=手摇曲柄
tile.master_axis.name=主轴
tile.grindstone.name=磨石
tile.heat_cable_copper_wool.name=羊毛绝热热导管
tile.heat_cable_copper_dirt.name=泥土“绝热”热导管
tile.heat_cable_copper_slime.name=史莱姆绝热热导管
tile.heat_cable_copper_ice.name=冰绝热热导管
tile.heat_cable_copper_obsidian.name=黑曜石绝热热导管
tile.heat_cable_copper_densus.name=密素绝热热导管
itemGroup.crossroads=十字路口
container.grindstone=磨石
item.dust_copper.name=铜粉
item.dust_salt.name=盐
tile.fluid_tube.name=流体管
tile.steam_boiler.name=蒸汽锅炉
tile.heating_crucible.name=加热坩埚
tile.rotary_pump.name=旋转泵
fluid.steam=蒸汽
fluid.distilledwater=蒸馏水
fluid.copper=熔融铜
tile.blockMoltenCopper.name=熔融铜源
tile.blockDistilledWater.name=蒸馏水源
tile.blockSteam.name=蒸汽源
tile.blockLiquidFat.name=液态脂肪源
item.debug_heat_writer.name=Debug用热写入器
item.debug_gear_writer.name=Debug用齿轮写入器
mysterious_journal=神秘日志
tile.block_salt.name=盐块
tile.steam_turbine.name=蒸汽轮机
tile.fluid_void.name=流体虚空
tile.axle.name=传动轴
tile.heat_exchanger.name=热交换器
tile.insulated_heat_exchanger.name=绝热热交换器
item.mashed_potato.name=马铃薯泥
item.thermometer.name=温度计
item.fluid_gauge.name=流体计
item.speedometer.name=速度计
item.omnimeter.name=万用表
tile.fluid_tank.name=流体储罐
fluid.tile.water=水
fluid.tile.lava=熔岩
tile.coal_heater.name=燃料加热器
tile.heating_chamber.name=加热室
container.heating_chamber=加热室
container.fuel_heater=燃料加热器
tile.salt_reactor.name=盐反应堆
tile.fluid_cooling_chamber.name=流体冷却室
item.vacuum.name=真空吸尘器
item.magenta_bread.name=品红面包
item.large_gear_copper.name=大型铜齿轮
item.large_gear_tin.name=大型锡齿轮
item.large_gear_bronze.name=大型青铜齿轮
item.large_gear_iron.name=大型铁齿轮
item.large_gear_gold.name=大型金齿轮
item.large_gear_lead.name=大型铅齿轮
item.large_gear_electrum.name=大型琥珀金齿轮
item.large_gear_invar.name=大型殷钢齿轮
item.large_gear_nickel.name=大型镍齿轮
item.large_gear_silver.name=大型银齿轮
item.large_gear_platinum.name=大型铂齿轮
item.chicken_boots.name=鸡靴子
tile.radiator.name=散热器
tile.rotary_drill.name=旋转钻头
item.edible_blob.name=食物团
tile.fat_collector.name=脂肪收集器
fluid.liquidfat=液态脂肪
tile.fat_congealer.name=脂肪冷却器
tile.redstone_heat_cable_copper_wool.name=红石羊毛绝热热导管
tile.redstone_heat_cable_copper_dirt.name=红石泥土“绝热”热导管
tile.redstone_heat_cable_copper_slime.name=红石史莱姆绝热热导管
tile.redstone_heat_cable_copper_ice.name=红石冰绝热热导管
tile.redstone_heat_cable_copper_obsidian.name=红石黑曜石绝热热导管
tile.redstone_heat_cable_copper_densus.name=红石密素绝热热导管
tile.toggle_gear_bronze.name=青铜可切换齿轮
tile.toggle_gear_copper.name=铜可切换齿轮
tile.toggle_gear_tin.name=锡可切换齿轮
tile.toggle_gear_gold.name=金可切换齿轮
tile.toggle_gear_iron.name=铁可切换齿轮
tile.toggle_gear_lead.name=铅可切换齿轮
tile.toggle_gear_electrum.name=琥珀金可切换齿轮
tile.toggle_gear_invar.name=殷钢可切换齿轮
tile.toggle_gear_nickel.name=镍可切换齿轮
tile.toggle_gear_silver.name=银可切换齿轮
tile.toggle_gear_platinum.name=铂可切换齿轮
death.attack.drill=%1$s有个很棒的牙医！
death.attack.drill.player=%2$s强迫了%1$s去看牙医！
item.rain_idol.name=雨之神像
tile.redstone_fluid_tube.name=红石流体管
tile.water_centrifuge.name=水离心机
tile.arcane_extractor.name=奥术提取器
item.pure_quartz.name=纯石英
item.luminescent_quartz.name=荧光石英
item.lens_array.name=结晶透镜阵列
tile.small_quartz_stabilizer.name=小型石英稳定器
tile.large_quartz_stabilizer.name=大型石英稳定器
tile.crystalline_prism.name=结晶棱镜
tile.arcane_reflector.name=奥术反射器
tile.lens_holder.name=透镜支架
tile.block_pure_quartz.name=纯石英块
tile.beam_splitter.name=红石光束分路器
tile.beam_splitter_basic.name=基础光束分路器
item.invis_item.name=隐形物品
tile.color_chart.name=色板
technician_manual=技术员的手册
item.squid_helmet.name=鱿鱼头盔
item.pig_zombie_chestplate.name=僵尸猪人胸甲
item.cow_leggings.name=牛护腿
tile.multi_piston_sticky.name=粘性长活塞
tile.multi_piston.name=长活塞
tile.multi_piston_extend_sticky.name=粘性长活塞延伸
tile.multi_piston_extend.name=长活塞延伸
tile.master_axis_crystal.name=结晶主轴
item.chaos_rod.name=混沌传送杖
item.void_crystal.name=虚空水晶
tile.ratiator.name=求比器
tile.beacon_harness.name=信标利用器
itemGroup.heatCable=十字路口热导管
tile.fat_feeder.name=脂肪喂食器
item.module_goggles.name=模块化护目镜
tile.toggle_gear_copshowium.name=钶可切换齿轮
item.large_gear_copshowium.name=大型钶齿轮
item.gear_copshowium.name=钶齿轮
tile.chunk_unlocker.name=区块解锁器
tile.rate_manipulator.name=速率操作器
tile.flux_manipulator.name=通量操作器
tile.flux_reader_axis.name=通量调节主轴
tile.multiplication_axis.name=乘法轴
itemGroup.gear=十字路口齿轮
tile.addition_axis.name=加法轴
tile.equals_axis.name=等于轴
tile.greater_than_axis.name=大于轴
tile.less_than_axis.name=小于轴
tile.redstone_axis.name=红石轴
tile.square_root_axis.name=平方根轴
tile.mechanical_beam_splitter.name=机械光束分路器
crossroads=十字路口
controlEnergy.name=物品能量控制
controlPotential.name=物品潜能控制
controlStability.name=物品稳定性控制
controlVoid.name=物品虚空控制
item.staff_technomancy.name=光束杖
tile.cage_charger.name=光束笼充能器
death.attack.potentialvoid=%1$s没有了潜能。
death.attack.potentialvoid.player=%2$s偷了%1$s的潜能。
tile.hamster_wheel.name=仓鼠轮
tile.fluid_splitter.name=红石流体分路器
tile.basic_fluid_splitter.name=基础流体分路器
tile.copshowium_creation_chamber.name=钶生产室
fluid.copshowium=熔融钶
tile.block_copshowium.name=钶块
item.ingot_copshowium.name=钶锭
item.nugget_copshowium.name=钶粒
tile.sin_axis.name=Sin轴
tile.cos_axis.name=Cos轴
tile.arcsin_axis.name=ArcSin轴
tile.arccos_axis.name=ArcCos轴
tile.gateway_frame.name=传送门框架
tile.redstone_keyboard.name=红石键盘
tile.detailed_crafter.name=精细合成器
container.detailed_crafting=精细合成
tile.prototyping_table.name=原型设计台
tile.prototype_port.name=原型端口
tile.prototype.name=原型
item.beam_cage.name=光束笼
item.prototype_pistol.name=原型手枪
tile.molten_copshowium.name=熔融钶源
item.prototype_watch.name=原型表
tile.mechanical_arm.name=机械臂
tile.redstone_registry.name=红石注册表
death.attack.chemical=%1$s死于化学品泄漏。
death.attack.chemical.player=%2$s向%1$s倒出了化学品。
item.adamant.name=精金
item.sulfur.name=硫
item.vanadium.name=钒
item.vanadium_5_oxide.name=氧化钒
item.phil_stone.name=哲人之石
item.prac_stone.name=实践者之石
item.alch_crystal.name=炼金术水晶
item.waste_salt.name=炼金术盐
tile.alch_tube.name=炼金术导管
tile.alch_tube_glass.name=玻璃导管
tile.alch_tube_cryst.name=水晶导管
tile.fluid_injector_glass.name=玻璃流体注入器
tile.fluid_injector_cryst.name=水晶流体注入器
tile.flow_limiter_glass.name=玻璃限流导管
tile.flow_limiter_cryst.name=水晶限流导管
tile.heated_tube_glass.name=玻璃热力导管
tile.heated_tube_cryst.name=水晶热力导管
tile.cooling_coil_glass.name=玻璃冷却线圈
tile.cooling_coil_cryst.name=水晶冷却线圈
tile.chemical_vent.name=化学气体排放口
tile.reaction_chamber_glass.name=玻璃反应釜
tile.reaction_chamber_cryst.name=水晶反应釜
fluid.tin=熔融锡
fluid.gold=熔融金
fluid.iron=熔融铁
item.liech_wrench.name=列支敦斯登军扳手
item.leyden_jar.name=莱顿瓶
tile.tesla_coil.name=特斯拉线圈
tile.tesla_coil_top.name=特斯拉线圈顶部
tile.heat_limiter.name=热限制器
tile.dynamo.name=手摇发电机
tile.reagent_tank_glass.name=玻璃存储皿
tile.reagent_tank_cryst.name=水晶存储皿
tile.reagent_pump_glass.name=玻璃泵
tile.reagent_pump_cryst.name=水晶泵
tile.maxwell_demon.name=麦克斯韦妖
item.phial.name=试剂瓶
item.phial_glass.name=玻璃试管
item.phial_cryst.name=水晶试管
tile.phial_holder.name=试管架
item.florence_glass.name=玻璃平底烧瓶
item.florence_cryst.name=水晶平底烧瓶
item.shell_glass.name=玻璃壳
item.shell_cryst.name=水晶壳
item.nitroglycerin.name=瓶装硝化甘油
tile.reds_alch_tube_glass.name=玻璃红石导管
tile.reds_alch_tube_cryst.name=水晶红石导管
tile.glassware_holder.name=玻璃器皿架
tile.alembic.name=蒸馏器
item.solid_quicksilver.name=冰冻水银
item.custom_material.name=结晶炼金块
item.custom_tool_sword.name=炼金术剑
item.custom_tool_pickaxe.name=炼金术十字镐
item.custom_tool_shovel.name=炼金术铲
item.custom_tool_axe.name=炼金术斧
container.sampling_bench=取样台
tile.sampling_bench.name=取样台
tile.alchemy_chart.name=炼金术图表
tile.densus_plate.name=密度板
tile.anti_densus_plate.name=反密度板
item.solid_eldrine.name=固化奥秘
item.solid_stasisol.name=固化静滞
item.solid_fusas.name=固化融合
item.solid_densus.name=密素块
item.solid_anti_densus.name=反密素块
item.solid_fortis.name=硝酸盐
item.solid_vitriol.name=硫酸油盐
item.solid_muriatic.name=盐酸盐
item.solid_regia.name=王水盐
tile.charging_stand.name=电解器
tile.atmos_charger.name=大气衰减器
item.flying_machine.name=飞行机器
entity.flying_machine.name=飞行机器
tile.reactive_spot.name=反应点（内部）
tile.copshowium_axle.name=钶轴
tile.clock_stabilizer.name=发条稳定器
item.tesla_ray.name=特斯拉射线

#GuideAPI documentation
#Useful characters for the lazy: §, °, ω, π, θ, √, ², Δ

#Mysterious Journal

#The Basics
lore.title=主菜单
lore.header=欢迎来到十字路口
lore.category.basic=基础
lore.first_read.name=§l请先读我
lore.first_read=§r§r这本指导书有两个版本。它们都包含相同的信息，任一个都应该足以作为指导书。这两个版本分别是神秘日志和技术员的手册。神秘日志里有许多背景故事和多个人物。技术员的手册没有背景故事，并且只包含技术信息。这两个版本可以在合成栏里相互合成。技术员的手册推荐给那些只想了解技术信息的人，神秘日志则更有趣（也更幽默），仍然能提供信息。需要注意的是，技术</n>员的手册中没有提到一些关键信息。具体来说，有一些秘密特性是通过书中的一个角色暗示的，而技术员的手册中没有提到这些特性。技术员的手册将经常为十字路口使用的概念提供现实生活的科学背景（并说明十字路口与现实生活的区别）。
lore.intro.name=简介
lore.intro.start=§r§o你确定这东西已经开了？§r§r当然确定，我才开我们说的话就都录下来了。§r§n那就别说话了，你这白痴，开始介绍吧！§r§r好吧，那就安静点！你好，读者，我相信你想知道你刚刚找到的这本书是什么。让我解释一下。我们是这本日志的三位作者。§r§n很明显。§r§r保持安静。无论如何，当你读到这篇文章的时候，我们已经离开很久了。我们每个人都知道不同手艺的秘密，我们一起努力记录我们的知</n>识，为那些将来有能力继续我们手艺的人服务。这本日志将教你魔法和科学的基础知识，这样你就可以决定走哪条路。我与另外两位作者合作，创造了一个奇妙的装置，把我们在这个房间里说的话记录在这本日记里，并通过对现实的微小改变，把这本日记的副本送给未来有能力的人。如果你需要这本书的另一个副本，只要遵循这个合成配方：
lore.intro.end=§r§r我知道科技魔法和操纵时间的秘密。我们所说的每句话都将根据不同的人以不同的文本格式记录下来。它曾经是分成不同的颜色而不是格式，但炼金术士担心读者会是色盲。§r§o等等，如果读者不能区分不同的字体呢?§r§n这叫做全盲。§r§r做自我介绍就行了。§r§o好吧，我是个炼金术士。炼金术是对现实的操纵。§r§n剩下我了。我是个女巫。巫术是对虚空的操纵。不要把真正的巫术和戴着尖顶帽子的愚</n>蠢村民混为一谈，他们做的没有一点真正的巫术。§r§r我们不会告诉你我们的名字，因为……各种各样的原因。基本上，我们三个会教你一些世俗的科学和魔法，然后让你选择：巫术、炼金术或科技魔法。到那时候，这本书会有一节讲解你选择的那种艺术。你只能选一个，在你做决定之前，你应该等到从我们这学到更多。§r§n那么，这一节就圆满结束了，我只要按一下这个开关，机器就会停</n>止，对吗?§r§r对。§r§l泥好我似bObo！窝似傻子的诺亚方粥！会焦泥像我依样蠢！弟一课似一订药找到土豆！窝会焦泥做东西的配方！窝汇说怎羊在伙盆里用配方！债见！§r§r我们刚吃完午饭回来，发现有个白痴不知怎么进来了，用拼写糟糕的胡言乱语和糟糕的语法填满了介绍。不管怎样，不要相信这个“bobo”人说的任何话，他看起来像个白痴。由于机器的特性，我们不能删除这个</n>白痴的贡献。§r§n你说“不能移除”是什么意思？当然可以。看，那里。§r§r你只是在这个副本上把它划掉了，这并不能把它从所有副本中删除。§r§n什么意思，所有的副本？我很确定这台机器只在这本书里写字。我也没有看到其他的书，你看见了？§r§r机器不会把这一份发给人的，别傻了。我的意思是，如果很多人同时需要一份呢?然后，如果只有一个副本呢？§r§o他，他们可以分，分享那个副本。§r§r别</n>瞎说了。假设一个人先拿到了这本书，他有什么动机去和别人“分享”呢？不得不与人分享，将违背他们自己的最大利益。§r§o可能因，因为这是对，对的事？§r§r我看不出来。§r§n这就是为什么没人喜欢你。§r§o我，我，我想那有点粗鲁。先不说共，共享，必须有多份副本，因为，那一本，如果有人，比如说，在书上洒了酸，该怎么办?§r§r谁会蠢到把酸洒出来呢?§r§o好，好吧，呃……§r§n我一直想知道炼金术士</n>衬衫上那些洞是从哪儿来的。§r§r破衬衫和洒酸有什么关系？§r§n我等下再解释。§r§r难道你不是已经知道这机器已经可以制造副本了吗？我是说，你帮助建造了这个东西，你却告诉我你甚至不知道它应该如何工作？我给了你们两个详细的设计方案。§r§n我只是略读了一下，只是跳过了那些无聊的部分，比如所有不是我负责的部分。§r§r先不管设计文档，致读者：如果他还写其他东西，就忽略他吧。§r§n你</n>怎么知道是他而不是她?§r§r我不知道，大家都默认用他。§r§n有道理。
lore.ores.name=矿物
lore.ores.start=§r§r在你开始制作机器进行发展之前，你需要一些你可能不习惯使用的矿石。有4种你会感兴趣的矿石。§r§n不包括普通的那些，比如金子和红石。§r§o红石怎么普通了？红石到底是什么？§r§n不知道，不关心。§r§r不管怎样，要注意的是锡、铜、自然铜和红宝石。自然铜很常见，但只在y=50和y=70之间发现。当它被打碎时，它会变成3块铜粒。
lore.ores.copper=§r§r普通的铜矿也很常见，只有y=30以下才有。然而，你需要基础设施使它成为锭。
lore.ores.tin=§r§r锡矿和金一样稀有，只有在y=30以下才能找到。它可以被熔炼成锡锭。挖掉任何你找到的锡。
lore.ores.ruby=§r§r红宝石矿石非常稀有，只在下界与石英矿石混合的发现。它只有在你进入魔法领域时才有用。
lore.ores.bronze=§r§r铜和锡可以用通常的配方制成方块和粒，红宝石可以用2x2制作成方块。而且，铜和锡可以合成青铜，一种有用的合金。
lore.ores.salt=§r§o别忘了盐!它不是自然形成的，而是后面制作的。它可以变成像沙子一样落下的方块。盐块会杀死附近的植物，把草变成粗糙的泥土，把植物变成死灌木。§r§n顺便说一下，爬行者也是一种植物。盐也会让史莱姆枯萎成史莱姆球。
lore.energy.name=能量概述
lore.energy=§r§r在开始使用技术之前，你需要了解供能系统。有三种主要的能源传输方式：热、旋转和蒸汽。在某些机器中，能量可以在这三种形式之间转换。热可以通过锅炉转化为蒸汽，蒸汽可以通过散热器转化为热，或者通过蒸汽轮机转化为旋转能。正如你所看到的，一旦能量被转化成旋转能的形式，你就不能再把它转化回热了。能量转换的具体方式将在后面的条目中讨论。每一种能量的快</n>速概述如下：</n>热能简单、低效、昂贵地传输，是你产生能量的主要形式。</n>蒸汽能简单、无损、快速地传输（使它成为传输能量的理想选择）。</n>旋转能昂贵、即时、复杂地传输，而且取决于你如何设计你的系统可能是损耗巨大或几乎无损。旋转也是你将用于机器的主要能量类型。</n>万用表是一种测量仪器。用万用表右击一个十字路口设备将显示与之相关的信息。建议你制作并使用一个。
lore.heat.name=热量系统
lore.heat.start=§r§r能量最基本的形式是热。注意，在这个模组中，现实主义被换成了可玩性。热是通过热导管传递的。热导管与周围的东西平均分配其温度。有几种类型的绝热体可用于热导管。
lore.heat.insulator=绝热体的不同决定了三件事：热流失率、导管的熔点和熔化时导管发生的事。0.2的流失率意味着导管温度每刻向环境温度变化0.2°C。绝热体有：羊毛，在300°C时燃烧，有0.25的流失率；史莱姆，在500°C时变成活史</n>莱姆，有0.2的流失率；冰，熔点0°C，放置时是-10°C，但有0.001的最小流失率。最后是黑曜石，在2000°C熔化，流失率为0.015。
lore.heat.insulator_effect_disable=The insulator determines 2 things: the rate of heat loss & melting temperature of the cable. A loss of 0.2 means the cable temperature changes by 0.2°C towards the ambient temperature each tick. The insulators are Wool, which overheats at 300°C, and has a loss of .25, Slime, which overheats at 500°C, and has a loss of .2, Ice overheats at 0°C, and is at -10°C when first placed, but has the smallest loss off .001. Finally, there is Obsidian, which overheats at 2000°C, and has a loss of .015. When a cable overheats it turns to fire. 
lore.heat.end=§r§r需要注意的是冰导管不是很用浮冰制作，而不是普通冰。手持一个铁锭、一块下界石英或一个钻石右击任何热导管会改变导管的贴图。这一改变纯粹是视觉上的，也不会消耗物品。手持铜锭右击会把贴图改回来。</n>只要高于一定的温度，大多数用热机器也会以恒定的速度流失热量，不管它们是否在工作。大多数产热设备在运行时产生的热量是恒定的。有许多方法来调节温度,以使热导管不熔化，但早期游戏的一个简单方法是设计一个机器温度不足时产热比消耗多，机器温度足够时消耗比生产多的。这设计将导致温度上升，直到系统足够热，机器可以运行，在这时候，系统将保持在正确的温度</n>附近。但这样有一些缺点，不过可以被更先进的，后期的系统纠正。
lore.heat.bobo=</n>§r§l泥好，似我，bobo！我枝道热的祭巧！泥土似更好的觉热体！热放粗泥土的能量！热让傻子籽油！
lore.steam.name=蒸汽系统
lore.steam=§r§n一般来说，蒸汽是通过包括流体来解释的。大多数需要流体的机器不能直接把液体放进去，需要你用管道把流体放进去。流体显然是通过管道流动的。这些管道可以处理任何热或冷的流体，并平衡管道间和周围连接到的东西间的压力。压力指的是容器内液体的量除以它能储存的量。大多数机器只能接受或输出流体，这时管道只会插入或提取液体，而不是试图平衡压力。扳手右击流</n>体管上的连接器，可以将其设置为只输入、只输出或断开。当通过扳手重新连接两根已经断开的管子时，在最初断开，面向另一只管道的那一侧使用扳手。</n>还有流体储罐，能存放20桶流体，还能用桶直接倒入倒出。储罐会与管道平衡压力，并在被破坏后保持内部存储。将一个储罐直接合成可以清空内部流体。§r§r配方里的金是干嘛的？青铜肯定够了嘛？你还漏了比较器能检测里面有多满。§r§n我以为我应该在蒸汽部分解释那个。金子是用来加固的。§r§r金子？加固？你知道黄金比青铜要软，对吧？§r§n安静点！你要打破第四面墙了！§r§r我的错，我这就</n>走开然后让你继续误人子弟。</n>蒸汽只是另一种流体，它的特殊之处在于它很适于传输能量。热能可以通过锅炉转化为蒸汽（稍后详细介绍），蒸汽可以转化为热能或旋转能。而且，它流动得很快，没有损耗，管道也不会熔化、燃烧什么的。</n>蒸汽锅炉比听起来要复杂一点。热从底部进去，蒸汽从顶部出来，水从侧面进去。锅炉一达到110°C就把水变成蒸汽。一桶蒸汽使用了%1$f°C的热和1000mB的水来产生，并且产生了10块盐。盐可以从锅底取出，如果锅里满是盐，它就会停止工作。因为盐需要从底部取出来，而热量需要从底部进入，所以暂时还不能实现锅炉的自动化。当你用蒸汽产生旋转能或热能时，你得到的是蒸馏水，而不是</n>普通的水。蒸馏水也可以用来制造蒸汽，如果你使用蒸馏水则不会产生盐，并使锅炉能自动化。此外，用蒸馏水的锅炉只需要加热到100°C，并且使用每桶蒸汽只使用%2$f°C，这也恰恰是你能从一桶蒸汽中得到的热量。
lore.rotary.name=旋转能系统
lore.rotary=§r§r旋转是最复杂的能量系统。旋转能由齿轮和轴传送。有两种齿轮，小齿轮占一个单独的方块空间，大齿轮占一个3*3的面积。6个小齿轮可以装在一个方块的空间里，每面一个。小齿轮需要贴在固体方块表面上。他们可以在角落或相连的齿轮连接。它们还可以轴向地连接到轴所连接的对象。大齿轮不需要固体方块的支撑，一个方块的空间只能装下一个。它们连接的方式与小齿轮相同。轴能在轴</n>的方向上连接两个东西，例如一端的小齿轮连接到另一端的大齿轮、机器或另一端的轴。每一个旋转动力系统需要一个主轴。确保每个系统至少有一个齿轮连接到主轴的前面。额外的主轴则无效。后期将有特殊的主轴变体。大多数（但不是所有）旋转机械都有一个必须轴向连接的内部齿轮。</n>一个旋转网络的每一部分（除了主轴），都有一个“I”值。I是质量在旋转中的体现。更大或密度更高的齿轮一般有更高的I值。下面的公式会使用弧度（θ），是一种角大小的衡量方式，像角度一样。一个圆有2π弧度。ω代表齿轮的速度，用每秒转动的弧度表示。E代表齿轮的能量，且E=Iω²/2。每一刻，齿轮网络中的能量都会被重新分配。如果你造了一个有两个或更多R值的齿轮网络（转动</n>方向冲突或使用轴的坏设计），可以猜到，什么都转不起来，所有能量都会消失。随着时间的推移，所有齿轮网络的能量也会损失。（来自mod作者的提示：十字路口损失方程与真实世界的损失完全不同，后者要复杂得多。）每一刻，每一个齿轮都会损失一定百分比的能量。而且速度越高，损失越大。</n>手摇曲柄能让你右击齿轮给其添加动能。右击会往逆时针充能，潜行右击则是顺时针。按住右键不放则更好。但这方法不是很高效，所以推荐尽快切换到自动化供能。
lore.copper.name=铜矿处理
lore.copper=§r§r为了使正确处理铜的步骤不会分散到各个条目中，所以我将在这里解释铜处理的基础知识。我还将给出一个示例的自动化设置，虽然肯定不是最好的，但可以正常工作。天然铜矿石通常在地表附近发现，开采时可掉落3粒铜粒。普通的铜矿也很常见，不过只在更深的地方发现。因为你需要大量的铜，所以你必须学会加工普通的铜矿石，但它不能在普通的熔炉里熔炼。普通铜矿必须在</n>加热的坩埚中熔化成熔融铜。然后，熔融铜必须经过一个流体冷却室，把它冷却成铜锭。做到这一步，一个铜矿石就够做一个铜锭了。然而，首先将矿石输入磨石会将其变成2个铜粉（和一块沙子）。每一份铜粉都可以熔化成一锭的熔融金属。一个示例的自动化设置是让一个锅炉被一个绝热热交换器加热（热交换器直接放锅炉下面）。锅炉产生蒸汽，为制造旋转能的蒸汽轮机提供动</n>力。汽轮机产生蒸汽和蒸馏水，蒸馏水回到锅炉，多余的蒸汽再回到到汽轮机。热交换器是通过下面流动的熔岩来加热的，每当热量产生，流动的熔岩就会变成鹅卵石。由蒸汽轮机驱动的钻头将鹅卵石打碎，为更多的熔岩腾出空间。蒸汽轮机还为产生铜粉和沙子的磨石提供动力，并使用分类漏斗将沙子分离出来。铜粉进入加热坩埚，熔化成熔融铜。坩埚被前面提到的绝热热交换器连上</n>黑曜石绝热热导管，但为了使导管不会过热，示例中坩埚也连上一个正常的热交换器来散热。熔融铜进入一个流体冷却室，并在那里变成锭。流体冷却室通过导管将热量导入普通的热交换器中。下面是这样一个设置的图片。
lore.intro_path=道途入门
lore.intro_path.start=§r§r在阅读本节之前，你应该已经深入了解了魔法。有三个方向你可以前进：科技魔法、炼金术和巫术。（巫术的内容仍未实现，所以目前你只能走2条道途）。要选择一条道途走下去，你需要解锁它。这将在日记解锁一个新的章节，这章节由我们中的一个人讲述，并且包含新物品的配方。
lore.intro_path.locked=然而，你只能在一条道途上走下去，所以请小心选择。§r§n为啥不能多走几条路，我看不出他们为啥-</n>§r§r看，它在配置里，好吧?§r§n这到底是什么意思？§r§r不·要·问。§r§n好吧，好吧，继续。§r§r
lore.intro_path.continue=我们每个人都要给出一个关于自己道途的解释。我先来。§r§n我想先来-§r§r我先来。不管怎样，按字母顺序，科技魔法是在巫术前面。§r§n那炼金术应该在最前。§r§o请，请让，让我排第三，我，我很高兴在最，最后。§r§n好吧，你先来，看我是不是真的在乎。§r§r科技魔法是最难的道途§r§n你这么说。§r§r嘘。如果你不能想出复杂的设计，你</n>就不可能成功。科技魔法里最简单的任务比你迄今为止所面临的一些最复杂的任务要复杂得多。然而，它提供的工具和设备使自动化容易得多，并将允许你极大地改进以前的设置。同时，科技魔法也是最强大的§r§n说谎！§r§o别，别这样。此，此外，没有最强大的道路，每一条都有它的优点和缺点。我不能让时间慢下来，但是科，科技魔法师不能做最简单的嬗，嬗变。§r§r明白了。正如我所</n>说，科技魔法是基于对时间的控制。有了技术它，时间可以加快、放慢、甚至暂时停止。§r§o如，如果时间停，停止了，哪，哪里来的暂时？§r§r看，它和宇宙时间流有关，有多个数学计算出的时间层次。§r§n我才不信。你现在只是在瞎编。§r§r你有12个博士学位吗?§r§n没，但是-§r§r我也觉得没。 §r§n但你也没有！你没有任何PhZ！§r§rPhD，不是PhZ。听着，他们不提供科技魔法的博士学位。§r§n也许是因为你造了这个词？</n>§r§r正如我所说的，通过操纵时间，通常是以一种不明显的方式，一些所谓的物理定律可以被扭曲或忽略。§r§n你说完了没？§r§r说完了。§r§n到我了。巫术（未实现）将围绕操纵虚空这个主题。§r§o我，我猜到我了？炼金术是对现实的操纵，通过产生新的物质形式来实现。利用炼金术，可以生产出具有不同寻常特性的新材料，从反重力到液化火焰，无所不包。只要几滴正确的化学物质，整座山都可以</n>变成沙漠或湖泊。简单的，通常不可再生的材料，如红宝石，可以无限生产。炼金术虽然不像科技魔法那么复杂，但需要非常小心和精确才能正确地进行。§r§r要为了解锁一条道途然后制作相关物品，你需要制作一个精细合成器。它的功能和普通的合成台一样，只是它可以解锁道途和合成物品。要解锁科技魔法，请发现时间元素。然后在任意精细合成器的9个格里各放一个青铜齿轮（消</n>耗齿轮）。要解锁炼金术，发现所有元素（除了时间和虚空，这两个是可选的），并在任意精细合成器的9个格中各放一个空瓶子（消耗瓶子）。一旦解锁了任意道途，精细合成器会有一个更便宜的配方。

#Heat Machines
lore.category.heat=热能机器
lore.fuel_heater=燃料加热器
lore.fuel_heater.text=§r§n有几种制造热能的方法，但最简单的是使用燃料加热器。§r§r我不会说它是最简单的，虽然早期也许是最便宜的，但它不像热交换器那样容易自动化。§r§o我个，个人喜，喜欢别的方法。§r§n又是你们两个和你们的自动化。并不是所有的事情都要自动化。§r§r但至少有的事情应该。你所认为足够的自动化是用火把来快速破坏沙子。§r§n听着，每样东西都有它属于的位置，不是所有事情都是自动化。用更</n>辛苦的办法做事更合适。§r§r但辛苦的办法，按定义来说，是更难的。§r§n和值得的。现在让我继续说。它燃烧任何熔炉燃料的时间与熔炉相同，在燃烧过程中产生1°C/t的热量。在顶部有一个热连接口，可以把热能直接输送到它上面的方块而不需要导管，不过热导管也可以连接到顶部。§r§o你可以看到在顶部的铜补丁。</n>§r§l是我，BOBO！如果泥变得太热，汇很兽伤！BOBO不要伤！BOBO停止伤！用着个做停止伤的东西！粉火焰，生培根，棕色长毛平布！用毒土豆修理！
lore.heating_chamber=加热室
lore.heating_chamber.text=§r§r加热室是最明显和最简单的热能应用。它基本上就像一个热能供能的熔炉，但比普通熔炉要快。当温度超过200°C或正在加热物品时，它以-2°C/t的速度消耗热量。在200°C以上时（不需要连续）加热一个物品需要50刻。现在，显然，由于产生热量的方式多种多样，很难将加热室的效率与熔炉的效率进行比较，但是假设没有损失并且加热室已经被预热，则燃料加热器中的1块煤将有足够的热</n>量来加热16个物品，而在熔炉中则只有8个。
lore.heat_exchanger=热交换器
lore.heat_exchanger.text=§r§r热交换器有两个作用：充当热同步器并提供一种产生热量（或降低环境温度）的方法。换交热器的热损失为10°C/t。此外，热交换器可以对其下方的方块执行某些“配方”，其中一些在热交换器低于特定温度时发生，这种热交换产生热量；而另一些则消耗热量，此时热交换器高于特定温度。这些“配方”的目的不是为了制作新方块，而是为了改变温度。温度变化不是即使的，而是以</n>25°C/t的速度进行，直到温度改变完成为止。这意味着对于一个热交换器，保持供应特定方块，会是一个恒定的25°C/t热源或冷却器。可用的转换有熔岩->圆石，交换器低于3000°C时产生1000°C（熔岩可以是流动熔岩）；火焰->空气，2000°C以下产生300°C；岩浆块->地狱岩，2000°C下产生500°C；雪块->水，在-20°C以上时冷却50°C；冰->水，在-50°C以上时冷却70°C；浮冰->水，-100°C以上时冷却140°C。绝热热</n>交换器是不向周围环境散失热量的热交换器的一种变体。§r§n不交换热量的热交换器有什么意义？§r§r关键是它仍然可以与下方的方块交换热量。因此，如果你想用它来产生热量，它是更有效的。
lore.heating_crucible=加热坩埚
lore.heating_crucible.text=§r§r加热坩埚加热到1000℃以上时，可将圆石加热成熔岩，或将磨碎的铜/铜矿石加热成熔融铜。需要通过漏斗或其他自动化方法将物品插入顶部。用管子可以把液体从侧面抽出来。从底部可以加热。不论是否在运行，当温度高于1000℃时，它以恒定10℃/t消耗热量。虽然它可以在1000°C以上的任意温度下运行，但在1500°C以上时速度会变成5倍。每一次操作都会产生200mB的熔岩或144mB的熔融铜。
lore.fluid_cooling=流体冷却室
lore.fluid_cooling.text=§r§n流体冷却室是一种有着烦人的长名字的机器。§r§o这很重要。§r§n也许吧。它类似于加热坩埚。它可以冷却流体并生产物品。物品需从冷却室底部取出，流体从侧面注入，热导管连接到顶部。当流体冷却室冷却流体时，它就会产生热量，如果机器超过一定的温度，它就会停止工作。冷却室可以在低于1000°C时把一桶熔岩变成黑曜石，每次合成上升500°C；在低于1000°C时把144mB熔融铜变成一个铜</n>锭，每次合成上升100°C；在低于-10°C时把水变成冰，每次合成上升1°C；在低于-20°C时把蒸馏水变成冰，每次合成上升2°C。
lore.redstone_cable=红石热导管
lore.redstone_cable.text=§r§r红石热导管允许红石与热互动。它们可由8个红石在合成栏围着一个热导管制作。红石热导管的功能与普通的热导管一样，不过只在有红石信号时连接到其他热导管或机器。比较器也可以用在红石热导管上来测量温度。将°C转换为红石信号强度的公式如下：红石信号 = 15 * (273 +°C) / (273 + 绝热体熔点)。这个方程会向下取整。因此，信号强度将永远不会达到15，因为那时候</n>电缆会融化。
lore.salt_reactor=盐反应堆
lore.salt_reactor.text=§r§r如果你需要将机器冷却到低于环境生物群系的温度，比如想造浮冰而刚好有一个流体冷却室，§r§n我还是觉得这是一个太长的蠢名字。§r§r我不在乎。正如我所说的，如果你需要在低于环境温度的情况下冷却某物，我建议使用盐反应堆。有了一块盐和200mB蒸馏水，盐反应堆的温度会降低5°C，并产生200mB的普通水。反应堆最高可冷却5°C/t。蒸馏水需从反应堆顶部注入，水从侧面抽出，盐可以</n>在任何一面插入。§r§n就这？§r§r为什么说就这？§r§n当你说我们需要在一个叫做盐反应堆的东西上做点什么的时候，我还以为会涉及发出绿光的辐射。另外，5°C冷却也不是很多。§r§r你知道辐射发绿光的整个概念是错的，对吧?然后如果你使用好的绝热热导管，例如冰，5°C可不少。§r§n真的吗？用盐冷却。很无聊。不管怎样，这东西的原理是什么？§r§o我可以回答这个问题。把某些盐溶解在水中是吸热的。</n>使用蒸馏水是为了能够溶解更多盐。

#Rotary Machines
lore.category.rotary=旋转机器
lore.grindstone.name=磨石
lore.grindstone.pre_recipe=§r§r磨石是你应该合成的第一个旋转供能的机器。像这样合成一个：
lore.grindstone.post_recipe=§r§r磨石有一个I=1的内部齿轮。磨石在运行时每刻都使用来自内部齿轮的全部能量，因此它在更高的速度下运行得更快（每刻中齿轮里的能量更多）。齿轮可以从顶部连接到磨石。磨碎一个物品需要消耗100能量。物品可以从除了底部的任何面插入。早期，一个手摇曲柄就足以运行磨石，尽管很慢。磨石的可用配方如下：铜矿石->2个铜粉+沙子；沙砾->燧石；骨头->5个骨粉，煤炭块->火药；地狱疣块->9个地狱疣，小麦->3粒种子，南瓜->8粒南瓜种子，西瓜（片）->3粒西瓜种子，红石块->9红石粉，圆石->沙子，石头->沙砾。注意，磨石唯一适用的矿石是铜。§r§l泥好窝是BOBO！一定邀捣碎土豆！
lore.drill.name=旋转钻头
lore.drill.pre_recipe=§r§r旋转钻头是一种方块，当它被放下并提供旋转动力时，会打碎方块并伤害它前面的生物。像这样合成两个：
lore.drill.post_recipe=§r§r旋转钻头有一个I=50的内部齿轮。无论它是否在工作，每一刻都会消耗0.5能量。这个钻头工作时不需要任何额外的能量。它破坏方块需要的速度至少是方块硬度的0.1倍。例如，圆石的硬度为3，所以速度必须至少为0.3。另一方面，黑曜石的硬度为50，因此，要破坏黑曜石，钻头的最低速度为5。当伤害生物时，没有所需最低速度，但是更多的速度意味着更多的伤害。钻头会造成(10*速度)伤害，所以速度5会造成50伤害。它每半秒就会造成伤害或者破坏方块。
lore.toggle_gear.name=可切换齿轮
lore.toggle_gear.pre_recipe=§r§r能够用红石控制齿轮往往很有用。可切换齿轮允许你用红石连接或断开它与其他齿轮的接触。可切换齿轮能用所有的齿轮材料制成，合成方式如下：
lore.toggle_gear.post_recipe=§r§r它们只会在有红石信号的时候连接，所以它们可以用来把齿轮系统分成两个部分（尽管为了让两个部分都能工作，两边都需要一个主轴）或断开系统与机器的连接。由于该机制的性质，一个方块的空间内只能放一个可切换齿轮，而且它只能放在地面上，不能放在墙壁或天花板。但是，它不需要在一个固体方块上。另外，比较器可以用来测量可切换齿轮的能量。输出信号强度的公式为(信号=15*齿轮速度^2/2)向下取整，最高15。一个求比器则使用不同的公式：信号强度=|速度|/2

#Fluid Machines
lore.category.fluid=流体机器
lore.rotary_pump.name=旋转泵
lore.rotary_pump.pre_recipe=§r§o将水收集到管道中的一种方式是旋转泵，合成方式如下：
lore.rotary_pump.post_recipe=§r§o旋转泵有一个I=8的内部齿轮。利用来自内部齿轮的50单位能量，它将吸取下方的一个流体源到内部，流体可以通过管道从侧面流出。旋转泵只有顺时针旋转才能正常运行。由于它只能直接从它下面的源方块吸水，所以它只对水有用。
lore.steam_turbine.name=蒸汽轮机
lore.steam_turbine.pre_recipe=§r§r蒸气轮机实际上只是稍稍修改的旋转泵。它能转换为旋转泵，也能从旋转泵合成，像这样：
lore.steam_turbine.post_recipe=§r§r与利用旋转能来泵送流体不同，汽轮机会在蒸汽通过时产生旋转能。蒸汽通过底部进入汽轮机，转化为蒸馏水和旋转能。如果输出蒸馏水的储罐满了，汽轮机就停止工作。蒸馏水从侧面流出来。旋转能被输出到涡轮机顶部的齿轮上。一桶蒸汽，完全转化成旋转能量，会产生%1$f单位的能量。
lore.radiator.name=散热器
lore.radiator=§r§r当汽轮机将蒸汽转化为旋转能时，散热器将蒸汽转化为热。它的使用也比蒸汽轮机简单得多。通过底部插入蒸汽，它将完全转化为蒸馏水和热量。一桶蒸汽产生%1$f°C的热量。蒸馏水从顶部流出，热导管可以连接到侧面。散热器是这样合成的：
lore.radiator.bobo_rain_idol=§r§l泥好我是BOBO！b0Bo现在焦泥求雨舞！邀求雨泥需药一个偶像！窝给你的话窝的就没了！泥像这样造新偶像！魔法的蓝色东西、园石投、一点幸运金色！拿着它做衣个桶滚！或者做求雨舞！如果泥需要舞导课，记柱：跳舞的关键似粘滞！返过来做可以让雨消失！BOBO完毕！
lore.liquid_fat.name=液态脂肪基础
lore.liquid_fat.pre_recipe=§r§r通常食物并不像它应有的那样方便。它可能没有你想要的饥饿或饱和值，而拥有一个种植多种作物的农场作为你的食物来源意味着你必须携带多种类型的食物。把食物变成液体溶-§r§o我想我说过我一点也不想知道。§r§r怎么了，有什么问题吗？§r§n我从没听你说过。§r§o我没说吗？我本想这么说的。因为这很恶心。讲这部分的时候别叫我。§r§r但你是我们当中唯一知道它原理的人。我知道怎么用它，但</n>不知道它为什么能用。而且这东西确实是你发明的。§r§o而且这是一个恶心的发明。再见。§r§n下一个设备到底是什么?§r§r让我来继续说，你会知道的。正如我所说，液化食物解决了这些问题。第一部分是用脂肪收集器将食物变成液体脂肪，收集器制作方法如下：
lore.liquid_fat.mid_recipe=§r§r当从底部加热并从顶部插入食物时，脂肪收集器会产生液态脂肪，这些脂肪可以通过管道从侧面排出。食物的价值(饱和+饥饿)转化为液态脂肪的比例是一单位价值=%1$fmb的液态脂肪。然而，脂肪收集器的精确温度很重要。在100°C以下它什么也不做，在200°C以上它燃烧掉所有产生的脂肪，在140°C到160°C之间是最佳温度，从食物中产生的液体脂肪是正常转换的1.2倍。从100°C到140°C和从160°C到</n>200°C，它的效率较低，从食物中产生的脂肪是正常转换的0.8倍。§r§n等等，这一切的目的是制造液态脂肪？这东西能吃吗？§r§r可以。§r§n听起来不太好吃。§r§r确实，但效率很高。§r§n是什么让炼金术士这么觉得恶心？§r§r可能是因为最后吃的是纯脂肪。就像我说的，脂肪收集器将每单位食物价值转化成液体脂肪所需的温度是0.8°C。一旦你得到了一些液态脂肪，就会需要一台机器将其转化为具有可控饱和度</n>和饥饿值的食物。这台机器是脂冷却器，它是这样合成的：
lore.liquid_fat.post_recipe=§r§r这台机器使用来自其顶部齿轮的旋转能量，并使用侧面管道注入的液体脂肪。齿轮的准确速度和旋转能对这台机器很重要，因为它们控制着创造出的食物的饥饿值和饱和度。所创造的食物价值将等于(齿轮能量/10)。食物的饱和度将等于(价值*速度/2)。恢复的饥饿值则当然是(价值-饱和度)。生产的食物的饥饿值和饱和度都被限制在20以内。冷却器每生产一个食物要消耗一单位旋转能量。生</n>产出来的食物作为一个物品从机器的底部落下。你可以用一个漏斗来接住它。§r§n它生产的到底是什么食物？是某种肉或者是……§r§r纯脂肪构成的食物团。§r§n合理。§r§r脂肪冷却器使用的液态脂肪量会基于食物价值和之前提到的转换率不同而变化。一个例子是顶部齿轮有着80能量和1速度，产生的食物饥饿值和饱和度为4，消耗800mb液态脂肪。§r§l窝是BOBO，万物的傻子！窝喜欢吃很多！次太多然后</n>得病！布要病！亭止病的配方！牛的全布三样东西！用绿薯改善！
lore.fat_feeder.name=脂肪喂食器
lore.fat_feeder.pre_recipe=§r§r脂肪喂食器使用液态脂肪喂养一定范围内的玩家。它是这样制作的：
lore.fat_feeder.post_recipe=§r§r要操作机器，需要各有一个齿轮（或轴，当然）放在脂肪喂食器的顶部和底部。两个齿轮都需要非零速度。脂肪喂食器的工作半径等于(上齿轮速度)/(下齿轮速度)，向下取整。两个齿轮的方向无关紧要。脂肪喂食器消耗液态脂肪(通过侧面插入)来补充范围内玩家的饥饿感和饱和度。与其他机器一样，%1$fmB的脂肪等于1个食物价值。对于喂食器喂给附近玩家的每一个价值，1单位能量将从上</n>方齿轮移动到下方齿轮，并总是朝着降低上方速度和增加下方速度的方向移动。虽然有许多方法来自动化这台机器，一个合适的方法是使用轴。当然，这只是一个建议。
lore.redstone_tube.name=集成红石的流体控制
lore.redstone_tube=§r§r用红石控制液体流动是一种有用的能力。红石流体管只在收到红石信号时允许流体通过它。这样可以合成：
lore.fluid_splitter.name=流体分路器
lore.fluid_splitter=§r§r流体分路器有两种变体：基础流体分路器和红石流体分路器。这两个都从侧面接收流体，从顶部和底部输出。基础流体分路器将输入流体的1/2分离到顶部，1/2到底部。红石流体分路器根据红石信号来分离流体。(信号强度)/15的液体流向底部，其余的从顶部流出。分辨红石信号会将流体导向何处有一个经验法则，如果你在红石流体分路器上放置一个拉杆，那么流体就会沿着拉杆指向的</n>方向流动。
lore.water_centrifuge.name=水离心机
lore.water_centrifuge.pre_recipe=§r§r蒸馏水和盐经常供应不足。考虑到蒸汽锅炉生产不能自动化的，需要一种专门的机器来生产。因此，有了水离心机。它是这样生产的：
lore.water_centrifuge.post_recipe=§r§r它有四个流体接口，侧面每面一个。红色接口输出蒸馏水，橙色接口输入普通水。盐可以从底部排出。机器顶部需要放一个齿轮。离心机本身运行不需要能量，但这并不是说它没有别的要求。顶部的齿轮需要达到0.5速度，机器才能产生一批盐和蒸馏水。对于下一批，速度需要反方向的0.5。基本上，顶部齿轮的方向需要不断反转，每次需要达到至少0.5的速度。§r§o一批有多少？§r§r一批会消</n>耗100mB普通水，产生100mB蒸馏水和一单位的盐。§r§o鉴于需要不停变换方向，一批的量感觉不多啊。§r§r如果实现完全自动化，生产速度其实很快。§r§l泥好我似B0BO！窝知道水的技巧！撒马掉的东西+海里的鱼和黑化的东西！扔土逗来维修它！

#Miscellanous
lore.category.misc=杂项
lore.brazier.name=火盆
lore.brazier.normal=§r§n有了火盆，许多不同的事情可以完成。可以通过右击添加或删除物品。§r§r也能自动化。§r§n没人关心你讨厌的自动化。§r§o我喜欢自动-好吧我不说了。§r§n用水桶往里加水可以让你从高处安全的落在火盆上，而且如果你加水后站在火盆上，它会让你身上的火熄灭。添加熔岩反而会让东西着火，所以它可以作为一个不会让附近着火的垃圾桶。煤块使它燃烧并放出光。它不会用完这块煤。类似地，</n>一块荧石也会使它发光。§r§r严格来说是光照等级15的光。§r§n这是什么测量系统?15个什么，蜡烛？§r§r不是15个蜡烛，是15单位。§r§n这毫无意义。另外，比其他效果更有趣的是，如果你放一块盐在里面，它可以在大范围内防止虚假女巫的产生。它的半径为%1$f左右。§r§o呃……为，为啥这么确定？§r§n因为盐能净化东西，像是假女巫。§r§r如果15个光单位没有意义，这个就更没有意义了。§r§n这就是管用，行吧。</n>§r§l泥好我似BOBO！烧的方快似做东西的技巧！嚎东西！BOBO东西！烧的烧的毒土豆做炒强东西！扔3个东西到有土豆烧的方块做bobo东西！窝现在就焦你合成！做炒强零食对人太强，没人能控祭季挤。用毒土豆在烧方块上三样东西似条面包、羊红染和下jie的发光粉！能亮超过了8074！BOBO完毕！
lore.brazier.no_witch=§r§n有了火盆，许多不同的事情可以完成。可以通过右击添加或删除物品。§r§r也能自动化。§r§n没人关心你讨厌的自动化。§r§o我喜欢自动-好吧我不说了。§r§n用水桶往里加水可以让你从高处安全的落在火盆上，而且如果你加水后站在火盆上，它会让你身上的火熄灭。添加熔岩反而会让东西着火，所以它可以作为一个不会让附近着火的垃圾桶。煤块使它燃烧并放出光。它不会用完这块煤。类似地，</n>一块荧石也会使它发光。§r§r严格来说是光照等级15的光。§r§n这是什么测量系统?15个什么，蜡烛？§r§r不是15个蜡烛，是15单位。§r§n这毫无意义。§r§l泥好我似BOBO！烧的方快似做东西的技巧！嚎东西！BOBO东西！烧的烧的毒土豆做炒强东西！扔3个东西到有土豆烧的方块做bobo东西！窝现在就焦你合成！做炒强零食对人太强，没人能控祭季挤。用毒土豆在烧方块上三样东西似条面包、羊红染和下jie的发光粉！能亮超过了8074！BOBO完毕！
lore.item_sorting.name=分类设备
lore.item_sorting=§r§r本节将介绍两种设备：分类漏斗和带槽箱子。就其本身而言，这两个物品都不是那么惊人，但当它们结合在一起时会变得非常方便了。分类漏斗的功能几乎与普通漏斗相同，但它的一种微妙的差别会产生巨大的差异。普通的漏斗在插入物品后进行抽出，而分类漏斗在插入物品之前进行抽出。这差别很重要的原因是，如果你将分类漏斗叠成柱子，它们都侧面对着容器，那么物品会先</n>进入最高的容器，然后进入第二个容器，等等。普通漏斗不会发生这种事。这意味着你可以过滤物品。如果上面的容器只能接受沙子，中间一个只接受泥土，底部容器接受任何物品，然后把泥土、沙子和沙砾放进最高的漏斗将导致所有的沙子进入最高的容器，所有泥土进入中间的容器，所有沙砾进入底部容器。</n>带槽箱子是一个双重箱子大小的箱子，它有一个非常有趣的古怪之处。你可能会注意到当你使用它时不能shift点击物品移到它里面，然后当你从带槽箱子里移出物品的时候，它会留下一种幽灵物品？其实你可以shift点击物品移动到带槽箱子里，但是只有在物品要放的格子已经有了匹配的物品的时候。若要清除幽灵物品，直接用鼠标shift单击它。此外，自动化将尊重幽灵物品，只有</n>在已经有一个匹配物品时才把新物品插入到箱子里，而且在抽出物品时，总是会留下一个幽灵物品。这使你可以格式化您的存储箱，而不必担心shift单击或自动化会把它弄乱。我想你现在看到带槽箱子和分类漏斗是如何相辅相成的了吧？因此，你现在可以有自动分类系统，能把石头放在方块箱里，钻石放在贵重物品箱里，木头放在方块箱里，等等。§r§o等等。木头不是应该放进植物箱</n>子里吗?§r§r不，当然不是，如果我把原木放在那里，那么我就不得不把木板放在那里，箱子放在那里，很快我就会不得不把绊线钩放在植物箱子里。§r§o不，绊线钩会放进技术箱。§r§r你真的在植物箱里放了木头？下一步是什么，把煤放进植物箱里，因为那是1亿年前的植物？§r§o别傻了，煤会进可燃物箱的。§r§r你做了可燃物箱？那你为什么不放些木头进去呢？§r§o因为木头不是用来做燃料的，而是用来做</n>其他东西的。你会因为仙人掌是方块就把它放进方块箱子里吗？§r§r现在你只是在嘲笑我。女巫，你自己决定吧。木头到底是进方块箱还是植物箱？§r§n我懒得分类，我只是把东西随便塞进箱子里以后用。§r§o啥？那你是怎么找到东西的？§r§n我只是记得东西放在哪里。没必要像你们俩一样有强迫症。§r§r至少我们不用花一半的时间去找东西。</n>§r§l泥好我是BOBO！人门不停地谈论着铜copper和漏斗hopper！copper和hopper押韵！COPPER HOPPER COPPER HOPPER COPPPER HOPPPER！窝知道漏斗的技巧。虽然不铜漏斗。窝做真空漏斗，对所有东西都有用！拿东西，飞，牧猫，一切！只要一个漏斗，一件羊的大衣，或者夹克，一个管子！BOBO完毕！
lore.wrench.name=扳手
lore.wrench=§r§r任何标准工具包都应该包含某种形式的扳手，一种旋转和调整装置。扳手比其他任何工具都更方便。
lore.ob_cutting.name=黑曜石切割套装
lore.ob_cutting=§r§n因为开采黑曜石是宇宙中最痛苦的事情，所以我将告诉你怎样用黑曜石切割套装使之变得更简单。只需在某个黑曜石上右键单击它即可破坏黑曜石并破坏切割套装。我发现这样获得大量黑曜石非常方便。
lore.decorative.name=蜡烛睡莲
lore.decorative=§r§n有时候，在一天的辛苦工作和建造技术之后，你只想在一个漂亮的地方放松一下。这里有一些用来装饰的好东西，有着-§r§r一些？这只有一个东西。§r§n我以后会拿出更多的东西！不管怎样，我想出的非常好的装饰是蜡烛睡莲。这是一个很好看的睡莲，上面有蜡烛，还能发光。
lore.decorative.bobo=</n>§r§l泥好我是BOBO！我知道东西！睡连是植物然后鸡吃植物所以鸡+植物等于LUMINATI！哦耶！混盒这两个和一点牛做大东西！和伙盆里的吐豆一起修复！
lore.fertile_soil.name=沃土
lore.fertile_soil=§r§n沃土是我所创造的农业好帮手。它有10个版本，包括小麦、胡萝卜、土豆、甜菜根和6种树苗。§r§r为什么有个甜菜根版？§r§n你什么意思，甜菜根怎么了？§r§r不是甜菜根有什么不对，而是甜菜根没有什么对。它恢复的饥饿值几乎没有，甜菜根汤不能堆叠，红色染料已经在花卉中很常见。真是一种恶心的根菜。§r§n我喜欢甜菜根，所以安静点。沃土可以用你所选择的作物制成-§r§r哪怕是甜菜根？§r§n是的！哪</n>怕是甜菜根！§r§r肯定不是我来选的作物……§r§n嘘！</n>作物可以种植在肥沃的土地上，就像耕地一样，即使没有水，它们也能像在湿润的耕地里一样生长。它们也不能被践踏。沃土的主要特征是：在随机的时间间隔内，如果土壤上没有任何东西生长，它就会免费地在自己身上种植与其类型相匹配的作物。因此，你不再需要重新种植。
lore.item_chute.name=物品管槽
lore.item_chute.start=§r§r物品管槽简化了垂直传输物品的过程。管槽由两部分组成：管槽本身和管槽端口。
lore.item_chute.default=§r§r如果顶端管槽端口指向的方块是一个容器，物品会直接插入进去，一旦容器满了还会停止输出。
lore.item_chute.cr=§r§r旋转能需要连接到底部管槽端口有一个轴大小的小孔的一面。对于每个升高的物品，管槽端口需要少量的旋转能量。如果顶端管槽端口指向的方块是一个容器，物品会直接插入进去，一旦容器满了还会停止输出。
lore.multi_piston.name=长活塞
lore.multi_piston.pre_recipe=§r§r标准活塞足够日常使用，但有时需要一个更高级的版本。为了满足这种需要，我提出了长活塞。它工作起来像一个正常的活塞，但有一些差异。最大的区别是，它不是延伸一个方块，而是延伸与它所接收的红石信号强度相等数量的方块（最多15个块）。它还可以一次推动64个方块，而不是12个，而且它可以立刻延伸和收缩。当用黏液块推实体时，一次推更远会使效果倍增。§r§o所以如果一</n>次推15个方块，会不会把你发射得非常高？§r§r没错。§r§o你可以用它来发射别的东西吗？比如，我不知道……会在满月的午夜点燃炸药的什么？§r§r可以……但是……为什么？你不会想要炸掉月亮吧？§r§o我在自己的时间里干什么不关你的事。§r§r那根本没用，我是说……爆炸会很高，但没有那么高。§r§n对不起，你为什么又要炸掉月亮？月亮对你做了什么？§r§r你说“月亮对你做了什么”是什么意思？你需要一个炸掉月</n>亮的理由吗？比如：不是因为它容易，而是因为它很难。也因为它是一块没用的石头。§r§n那不是去月球的理由吗？§r§r和这没关系。§r§n我们回到原来的话题……§r§r另外，长活塞也没有准连接性。§r§n准啥玩意儿？§r§r准连接性。在你问之前，如果你不知道这是什么那你大概不会在乎。就像我之前说的，红石能直接放在长活塞上面。长活塞有普通和粘性两种变体，合成如下：
lore.multi_piston.post_recipe=§r§r对于普通的活塞，也有一种无形状的简单配方，像这样：
lore.ratiator.name=求比器
lore.ratiator.pre_recipe=§r§r求比器是一种更高级的比较器。需要这样合成：
lore.ratiator.post_recipe=§r§r需要注意，它需要来自魔法系统的材料。它不是比较两个值或减去它们，而是进行乘和除。它的两种模式（右击切换）是乘法模式和除法模式。求比器板上的符号会根据模式而变化。它将后面的值乘以（或除以）两边的最大输入。值得注意的是，它可以处理小数或大于15的数。然而，当它输出到红石信号的那一刻，输出值就会四舍五入为整数并将最大值限制在15。为了利用这种使用其</n>他值的能力，求比器可以直接从另一个求比器获取输入，避免封顶和四舍五入。它可以像一个比较器一样测量后方的东西，但不是通过一个固体方块。在十字路口中，大多数比较器可读的东西将能够向求比器输出小数和大于15的数字。手持万用表右击求比器将显示输出。
lore.port_extender.name=端口拓展器
lore.port_extender=端口扩展器允许将更多的物品输入/输出口附加到一个方块上。通过将它连接到一个方块，比如一个箱子，并确定端口扩展器的方向，使正面的灰色正方形面对该方块，任何连接到端口扩展器的东西将像是连接到方块本身。设备连接拓展器时扩展器会模拟原来方块连接拓展器的那一面，所以如果一个漏斗指向端口扩展器，拓展器指向熔炉，漏斗可以将物品插入熔炉的顶面。注意，这</n>个连接是单向的，端口扩展器不能被连锁使用，并且这只适用于物品传输，而不适用于任何其他类型的连接（例如流体）。
lore.redstone_keyboard.name=红石键盘
lore.redstone_keyboard=红石键盘是产生恒定的有特定强度的红石信号的一个方便办法。右击红石键盘将打开一个可以设置数字的GUI。界面上有各种方便的按钮。π键将值设置为π，e键将值设置为欧拉数，C按钮清除设置，x按钮是乘法，然后在按下x时输入一个数然后松开会将原来的值乘上新的值。/按钮有类似的功能，不过是除法。当被求比器测量时，它会发出有GUI中设置的强度的信号。它也可以由比较器进行</n>测量，但在这种情况下，它将所包含的值四舍五入并设置上限为15。它不能设为负数。

#Magic
lore.basic_magic.pre_recipe=§r§rAt this point, you should have built up a decent infrastructure of machines and have a good amount of resources. The next topic is magic. §r§oHold on, magic? There's no such thing as magic, you should know that. §r§nFor once I'm siding with the Technomancer, magic is real. §r§rMagic is real, depending on your definition of magic. §r§oHow could magic possibly be real? Heat is real, dirt is real, creepers are real, §r§rWell actually, I'm not so sure about that last one, on an absolute scale. §r§oI'm not interested in your theories about our universe being fictional right now, I'm trying to argue magic doesn't exist. The idea that stuff happens because someone waves a magic wand and says some gibberish is ridiculous. §r§rOh I see, you thought I was talking about fantasy magic. I was talking about magic in a 'Sufficiently advanced technology' kind of way. What I'm talking about is beams. §r§oThen why didn't you just say beams. They aren't magical. §r§nWhat are beams? Because I'm talking about magic in a wands and spells kind of way. §r§rWands and spells don't exist, don't be ridiculous. §r§nYou just think that because you don't know witchcraft. §r§rNonsense. Anyway, we are getting diverted. I'll get to how exactly you create and manage magic seperately, this section is just about the concepts. What I'm calling magic is actually a form of energy similer to light. I differentiate it from light because it doesn't obey the same rules that light does. Its speed is non-constant, it can't pass through glass or other clear objects, it reacts with certain crystals in specific ways, and the beams can have different effects based on color. Not to mention the color of all magic is in the visible spectrum. Let me elaborate. There are 4 basic elements. §r§o3, not four. Void doesn't count. §r§rI'm counting void. Semantics aside, each of the elements is assigned to a different color: Energy is red, Potential is green, Stability is blue, and Void is black. Energy is obviously a measure of how much energy an object has. Potential is a little subtle, while the element of energy refers to energy that is currently expressed, such as heat or motion, potential is the energy something might have eventually. Such as a piece of coal potentially having a lot of energy if you burn it, but not until then. Stability is how stable something is, obviously. Uranium or TNT isn't very stable, but lead or a brick is. Void is an odd one though, and it is an advanced topic that will be covered separately. Magic is measured in discrete units. §r§nWhat? §r§rI mean magic is measured in whole numbers only. Specifically 4 whole numbers, each number referring to a different element. The interesting thing about elements is what happens when you mix them. A beam could be 3 parts energy and 3 parts potential, which would make a yellow beam. The entire RGB chart is possible. Beams are assigned an element based on the color. There are a lot of elements, so we'll only mention the important ones as needed and leave the rest for you to discover. Magic travels in beams, analogous to beams of light. If a beam collides with any block that isn't specially designed to handle magic, or it goes 16 blocks without hitting something, then it does an effect at the end of the point. The effect changes based on the element. Pure energy beams heat machines up, potential beams make things grow incredibly fast, and stability beams do nothing at all, due to being so stable. Many effects, but not all, are made stronger the more total magic is in the beam, but stop getting stronger at and above power = 64. The main purpose of using magic is the different beam effects. Beams become visually thicker at higher powers, until power 64 where they collapse into a thin beam. All of the devices involving magic will need a crystal of some kind, and most of them will need some Pure Quartz. Pure quartz can be made like so:
lore.basic_magic.mid_recipe=§r§rThe other crystals of interest are rubies, for interacting with energy, emeralds, for interacting with potential, and diamonds, for interacting with stability. Sometimes a machine will need a lens array to manage beams of magic. Lens arrays are very expensive though, so use them sparingly. Make some like so:
lore.basic_magic.post_recipe=§r§rI should note that when a beam passes through a magical device, it is delayed for 5 ticks before it exits the machine. This includes things like Arcane Reflectors and Beam Splitters.
lore.elements.name=Magical Elements
lore.elements.preamble=Information about the various elements will be added to this entry as you discover them. 
lore.elements.charge=CHARGE: Turns any rock materials into redstone blocks. If power is >= to 8, creates lightning wherever it hits. In a Crystalline Master Axis it adds 10 energy/tick in the + direction.
lore.elements.enchantment=ENCHANTMENT: Enchants nearby items on the ground randomly. Higher power beams increase enchanting level. Can create treasure enchants with power >= 32. 
lore.elements.energy=ENERGY: Adds (power)°C/5 ticks to whatever heat devices it hits. In a Crystalline Master Axis it adds 10 energy/tick in the direction gears are currently spinning.
lore.elements.equalibrium=EQUALIBRIUM: The force of a stalemate, where equal powers fight against each other leading to no net change. It prevents any explosions around it while the beam is maintained, with higher powers increasing radius of effect. In a Crystalline Master Axis it reduces the change in energy each tick by 75%%.
lore.elements.expansion=EXPANSION: Expands items within a range of (power) into full blocks.
lore.elements.fusion=FUSION: Fuses the molecules of certain blocks into other blocks. Turns Sand -> Pure Quartz Block when power >= 16, Water -> Ice, Snow -> Ice, Distilled Water -> Packed Ice when power >= 4, Netherrack -> Nether Brick when power >= 8, Gravel -> Prismarine when power >= 8, Prismarine -> Prismarine Bricks when power >= 12, Prismarine Bricks -> Dark Prismarine when power >= 16, Cobblestone -> Stone, Stone -> Stone Bricks.
lore.elements.light=LIGHT: All magic is similar to light, but this element is closer than most. Converts rock materials into glowstone, and glass materials into sea lanterns. 
lore.elements.no_match=NO_MATCH: This element should not be obtainable. Report to mod author. 
lore.elements.potential=POTENTIAL: Brings out the potential in living things, growing crops faster based on power & healing mobs within a radius of √power by power/2. 
lore.elements.rift=RIFT: A form of energy that makes things more stable. Such a thing is not possible in our universe, so it opens a rift into a neighboring universe where such a thing is possible. This universe is where mobs come from. Spawns hostile mobs (up to cap) at a rate based on (power). When power >= 64, spawns 1 mob every 5 ticks. Converts purpur blocks -> shulkers, skulls -> wither skeleton skulls, & stone -> silverfish stone. 
lore.elements.stability=STABILITY: Does nothing on its own. In a Crystalline Master Axis it prevents power loss. 
lore.elements.time=TIME: Speeds up tile entities and random block updates based on power. DO NOT MIX WITH VOID!
lore.elements.time.dis=TIME: This has been disabled via config. DO NOT MIX WITH VOID!
lore.elements.void=VOID: A paradoxical element, the essence of nothingness that forms the barrier between worlds. If anything, this is what holes are made of. Destroys anything it touches. 
lore.color_chart.pre_recipe=§r§rThe main use for magic is the effects of the different elements. You will have to discover the colors of the different elements yourself for the most part, but there are several things that can help you. First of all, using an Omnimeter on any block that emits beams will tell you the color and elemental makeup of the last beam that block fired. If the element is one you haven't scanned this way before, you will 'Discover' that element. That is useful for the Color Chart, made like so:
lore.color_chart.post_recipe=§r§rThe Color Chart has an informative GUI. The GUI is, unsurprisingly, a color chart, and mousing over a point on the color chart tells you the RGB value of that point and the element of that point, IF you have already discovered that element with an Omnimeter. Any spots on the chart that are black and white has an element you haven't discovered yet on it, so you should try to create a beam of that color and discover it. There is also a search bar that will gray-out any element that doesn't match the search.
lore.arcane_extractor.pre_recipe=§r§rBefore you can start harnessing magic, you need to obtain some. The Arcane Extractor is the crudest way to obtain magic. Make one like so:
lore.arcane_extractor.post_recipe=§r§rIt has a front which can only be on the horizontal plane, and items can be inserted into any side with a hopper. The extractor destroys any item inserted almost instantly, and produces a beam out the front side based on the item used. Most items don't make any beam, and just get consumed. The beam exists for 5 ticks, then vanishes. Feeding it items with a hopper would make a pulsating beam. The items it can use are redstone dust to produce a beam with 24 energy and 36 potential, glowstone dust to produce a beam with 1 energy, 1 potential, and 1 stability, salt to produce a beam with 24 potential and 36 stability, and coal (OR charcoal) to produce a beam with 36 energy and 24 potential.
lore.quartz_stabilizer.pre_recipe=§r§rThe Quartz Stabilizer is a way of turning pulsating beams into constant ones. There are two varieties, made like so:
lore.quartz_stabilizer.mid_recipe=§r§rYou might notice that the Small Stabilizer needs a lens array, making it quite expensive. Once you get your hands on some luminescent quartz, which will be covered later, stabilizers can be made much more cheaply like so:
lore.quartz_stabilizer.post_recipe=§r§rQuartz stabilizers can face any direction when placed, and when it receives a beam from any direction other than the front it stores the magic of the beam within itself. The stabilizer will emit a constant beam out the front, draining the stored magic to do so. The stabilizer has a capacity of 30 magic for the small version and 150 magic for the large one. Please note that is 30 units of magic (energy + potential + stability + void) not 30 beams. Any excess magic is lost. The emitted beam has 6 magic for the small version and 15 magic for the large version, and has the same color as the stored magic. The problem is that due to magic being measured in whole numbers and there is a limit on the output of the stabilizer, the outputted color might not exactly match the stored color. Therefore, the stabilizer is most reliable for beams that only contain one basic element, not a blended color. To recap, the stabilizer takes large pulses of magic in, and emits a constant small beam of magic out the front. There is no way to make a stabilizer hold onto its stored magic without emitting it, so it can't be used for long term magic storage.
lore.lens_holder.pre_recipe=§r§rThe Lens Holder is a very simple but useful tool for manipulating beams. Make one like so:
lore.lens_holder.post_recipe=§r§rWhen placed down, the lens holder can hold certain gemstones. They can be inserted/removed either with automation or a right click. The Lens Holder can hold either a diamond, ruby, emerald, or pure quartz. When a beam passes through a Lens Holder with a gem in it, the lens holder acts as a filter, with the magic that isn't allowed to pass through simply being lost. A diamond allows stability, a ruby energy, and an emerald potential. Pure quartz does not act as a filter, and allows any element to pass through. A word of warning, none of the gemstones can block void and if a beam passes through the Lens Holder with any void in it, the lens will be destroyed. If a beam of the LIGHT element passes through and the lens holder has pure quartz in it, the pure quartz turns into luminescent quartz, which is a crafting ingredient. The light element is the white color, and any color relatively close to white. The Lens Holder also interacts with comparators, emitting a signal based on the power of the beam it is outputting. The equation is redstone = (power / 3) rounded down, but Ratiators use redstone = (power). Also, the Lens Holder is one of the few devices that will NOT add a 5 tick delay to beams passing through it.
lore.arcane_reflector=§r§rAn Arcane Reflector is one of the basic tools for manipulating beams. It can face any direction, and when given a beam in a side that isn't the front, it outputs the beam through the front. It can also blend beams by putting multiple beams into it at once. Make one like so:
lore.beam_splitter=§r§rYou know how to combine beams, with an Arcane Reflector, but you still need to know how to split beams. The Beam Splitter takes any beam and splits it into 2 beams. Beams go in the sides, and come out the top and bottom. The two outward beams aren't the same size, but they are the same color as the input (with a margin of error, dividing whole numbers again, but no magic is lost in the end). There are two versions of the Beam Splitter, the Basic Beam Splitter and the Redstone Beam Splitter. With the Basic Beam Splitter, the two output beams are the same power. The distribution of magic between the top and bottom beams with a Redstone Beam Splitter depends on the incoming redstone signal strength. The bottom beam has (redstone strength) / 15 of the magic, and the top gets the rest. Make Beam Splitters like so:
lore.crystalline_prism=§r§rThe Crystalline Prism has a front that can only be placed on the horizontal plane, and is another version of the Beam Splitter. Instead of making two beams of identical colors, it takes a beam in the back (opposite of front), top, or bottom, and outputs up to three beams made from the input beam(s). A pure energy beam from the left of the front, a pure potential beam from the front, and a pure stability beam from the right of the front. Any void in the original beam is lost. Crystalline Prisms are expensive, so use them sparingly. You can make one like so:
lore.crystal_master_axis.pre_recipe=§r§rThe Crystalline Master Axis is an alternative to a normal Master Axis, made like so:
lore.crystal_master_axis.post_recipe=§r§rIt functions identically, but for one key difference. It can accept magical beams and alter its behavior based on the element. It can only have the effect from one element active at a time. Every time it receives a beam (limit one beam/side/5 ticks), it acts differently based on the element for the next (beam power * 5) ticks. The timer does not get reset each time it receives a beam, but instead increased. Each time it receives an element different from the previous one, it resets the timer and switches to the new element. Not all elements have an effect, but for example energy increases the total energy of the gear system by 10/tick if there is any energy to begin with, and equilibrium decreases the change in energy each tick by 75%%. An Omnimeter can measure the current element and duration in a Crystal Master Axis.
lore.void.pre_recipe=§r§nFinally, something related to witchcraft: Void. Void is the fourth element, and very powerful. At this point, you should have gone to the End and killed the dragon. Void is pure black, the essence of nothingness. To create void beams, fire a beam of Rift through a Lens Holder with a Void Crystal, made like so:
lore.void.post_recipe=§r§nThis will emit a beam of pure Void, of the same power of the Rift beam. On its own, the Void beam isn't so interesting, it just destroys blocks it touches. Although... It can destroy any block, even things normally indestructible. Mixing even a tiny bit of void with any other element will change the effect. Usually the new effect is the opposite of the original effect, though not always. I'll let you work out the exact effects on your own, but they are usually pretty easy to guess. For example, Void-Energy cools things down instead of heating them up, while Void-Stability makes explosions based on the power of the beam. §r§rI should cut in here, and deliver a warning. If you have discovered the Time element, DO NOT COMBINE IT WITH VOID. Time and Void are opposing forces, and the results of mixing them can't be good. Also, the Crystalline Master Axis acts differently with beams containing Void than with beams free of Void. §r§lh3ll0! 1s m3 B0BO! mE hearded tingy 'bout drahgin. mE gots trick 4 U! Bobo smoogle it owt of deferent dementchion! Da bit of drahgone dey mentun b4, da prize dat started dat war with that wuden hoarse, and a hot rod! Hop to It! So U kan blink! BOBO 0UT!
lore.beacon_harness.name=Beacon Harness
lore.beacon_harness.pre_recipe=§r§rA much stronger source of magic than the Arcane Extractor is available in the form of the Beacon Harness, made like so:
lore.beacon_harness.post_recipe=§r§rWhen running, it produces a constant beam of about power 512. The color of the beam is not constant, however, and changes over time. If you look at a Color Chart, the color of the beam produced follows the rim of the chart in a circle. It goes in a complete loop once every 30 seconds. While it can produce very powerful beams, it has a stringent set of requirements. It must be placed 2 blocks above a beacon with no obstruction in between (so beacon then airspace then harness). In the pattern the color follows, the beam emitted will always contain 2 or fewer basic elements. In order to keep it running, it needs to be supplied with the 1 basic element it isn't emitting (so if it's emitting a mixture of STABILITY and POTENTIAL, it requires pure ENERGY). Supplying it with an element it is emitting will cause it to shut down. It runs regardless of the inputted beam for the next 2 seconds after and while emitting a pure element, giving any system built to supply it a time margin to adjust. The Beacon Harness starts in the shut down position. To turn it on, trigger it with redstone (it will keep running after the redstone turns off) and it will run after a 2 second cooldown. 
lore.beacon_harness.bobo=§r§lsChlerpety sklurp, mE no a1veys drane flew-id, bUtt wen iy du, m3 uyse dis ting! vA((ewm tueb, bl^ck gemm, dRie mEhga lAser fYsh pRyze! b0Bo, AWAY!

#Technomancy
lore.cat_technomancy.name=Technomancy
lore.copshowium_chamber.name=Copshowium Creation Chamber
lore.copshowium_chamber=The basic material for Technomancy is copshowium, an orange metal that can be made into blocks, nuggets, gears, and axles. Copshowium is a unique material in that while most materials extend in the three dimensions of space, copshowium extends in the three dimensions of space, as well as time. When copshowium moves in certain ways, it causes the fabric of time to shift with it, making it ideal for technomancy. Although I dislike using the phrase 'fabric of time', it brings literal fabric to mind making me always end up getting distracted trying to decide if time acts more like denim or linen. Sorry, getting sidetracked again. Copshowium gears have 0 mass (and 0 moment of inertia), so they won't contain any energy while spinning, and have no loss. Their speed is determined by the Rotation Ratio and the speed of other gears. With a normal Master Axis, you can not create a gear network entirely of 0 moment of inertia gears, because there is nothing to set the speed. There are special Master Axes in Technomancy that do allow it, however (allowing for energy free networks). Copshowium is made by cooling molten copshowium in a Fluid Cooling Chamber. Molten copshowium can be made in 2 ways. Both require a Copshowium Creation Chamber, and one of the ways requires progressing farther into Technomancy. A Copshowium Creation Chamber can store 1296mB of fluid. Liquid can be both inserted and extracted through the top & bottom (so Fluid Tubes use the pressure system if not made one way). The first way to make copshowium is to insert %1$s into the chamber and hit it with a time beam. This will turn the %1$s into Molten Copshowium, with each 5mB of copper into 9mB of copshowium. Overfilling the chamber (creating > 1296mB of Molten Copshowium) will break the chamber. Mixing metals in the chamber will destroy the contained copshowium. §r§nHey, quick question. §r§rI am busy doing the Technomancy section. Alone. What do you want? §r§nWhy is there a bear trap in the fridge? Because I didn't put it there, and the Alchemist says they didn't put it there, so that leaves you. §r§rIt is a trap- §r§nFor bears? Because I haven't seen any. §r§rFor 'Bobo'. Somehow, some idiot has gotten past the best security system in the world, entering a laboratory in a different dimension, and getting past defenses that can kill intruders in 83 different ways. §r§nA: What makes you security system 'The best in the world'? and B: So you thought you could catch someone who can get past your fancy defenses with a beartrap. §r§rA: The fact that I made it, and B: yes. §r§nA beartrap in a fridge. §r§rYes. §r§nDo you normally see people climb into fridges? Because I don't. §r§r'Bobo' has gone into my fridge at least twice before. He ate my sandwich. So I put in a second sandwich with poison in it. And then that one vanished too. §r§nWait, that sandwich was poisoned? Is this a quick acting poison or... §r§rA very fast acting poison I had the Alchemist make for me. The only cure is an obscure chemical, which... come to think of it, is in mayonnaise, which the sandwich had on it. Blast! §r§nthat's a relief. §r§rYou were muttering there. What was that? §r§nNever you mind. Do me a favor, next time you poison a sandwich, put in a sign. §r§rThen the person eating the sandwich would know it was poisoned, which kind of ruins the whole idea. §r§nJust stop poisoning food in the fridge. §r§rWait, what were you doing looking in the fridge? I never said you could go in my fridge. §r§nOh wow, look at the time, I've got to go do a thing. §r§rI'll deal with that later. Anyway: The second way to create copshowium is the same process, but uses %2$s instead of %1$s & requires using fields (later Technomancy concept). In order to turn %2$s into molten copshowium, when the time beam hits the chamber the chunk the chamber is in must be unlocked and the chunk will lose (%2$s content)/9 flux, so a field management system must be designed accordingly.
lore.goggles.name=Modular Goggles
lore.goggles=While other eyeware is all well and good, the Modular Goggles provides utilities that aren't to be sniffed at. They are a headpiece that provides no armor, but does not break. On their own, they do nothing. Lenses can be added to the goggles in an anvil with either a Ruby, Emerald, Diamond, or piece of Pure Quartz and some experience. Multiple lenses can be added, but only one of each type. Looking at a block that can be read by an Omnimeter while wearing goggles with the quartz lens will cause information to be displayed (and updated every tick). A ruby lens allows shooting a beam of heat from your eye that sets blocks and mobs on fire wherever you look. It can be toggled on and off with the energy control key (in keybindings) with an empty hand. The emerald lens grants night vision, and can be toggled with the potential control key. The diamond lens allows opening up a detailed crafting window without needing a Detailed Crafter by pressing the stability control key with an empty hand. §r§l</n>luk thru darcnes.
lore.clock_stab.name=Clockwork Stabilizer
lore.clock_stab=The Clockwork Stabilizer is like a Quartz Stabilizer, except instead of being set to a constant output power of 6 or 15, the output power is based on how much magic it currently stores. There is no practical limit on how much magic a Clockwork Stabilizer can store, and the output power is always 25%% of how much magic it contains. This means all magic that enters will eventually leave and it will never overflow and waste magic. Placing one somewhere along a magic system lets it act as a sort of buffer in case magic production changes or pulses, and its ideal for large centralized magic supply systems.
lore.rotary_math_devices.name=Rotary Mathematics Devices
lore.rotary_math_devices=Prior to now, the rotary system has been used as little more than an energy type. In Technomancy, the rotary system is used in a far more advanced role: control. The exact speed, and in some cases the exact number of rotations performed (speed * time) will matter. For this reason, the following devices allow greater control over rotary systems. The following devices are different types of Master Axes, all of which can control a network made entirely of 0-mass gears. The Redstone Master Axis will cause the connected gear to spin with a speed equal to the strength of redstone signal received, and it can use values > 15 or with decimal points if Ratiators are used. All other connected gears have a speed based on Rotation Ratio and the speed of the first gear. In order to cause the attached gears to spin if they have non-zero mass, energy is required which can be provided by a gear on the back of the Redstone Master Axis. The Redstone Master Axis can point any direction. It is often convenient to use Redstone Master Axes in tandem with Redstone Keyboards. Any excess energy in the gear network is inserted into the energy providing gear, any required energy is drawn from it, and if there is not enough available energy then all controlled gears will stop spinning. If the gear network has 0-mass, no energy providing gear is required. The following Master Axes types set the speed of the attached gear based on the speed of other gears. Linking one of these Axes inputs to its output will destroy the Master Axes (dropping it as an item), as otherwise there would be an infinite loop. It is allowed to connect one of these Axes to its own power gear, though fairly pointless to do so. All of the following devices can only face horizontally and have an energy input on the bottom.</n>The Addition Master Axis has 2 inputs (marked by two blue rings on the model) and an output (the top). The controlled gears will have a speed equal to the sum of the speeds of the 2 input gears. If they were to spin in opposite directions, it would be subtraction. (For those who care, the model of the Addition Axis shows a real life device called a differential).</n>The Multiplication Master Axis has two inputs (back and top, marked by blue rings), and 1 output (the front, marked by an orange ring). The output speed is equal to the product of the two input speeds times. If shift-right-clicked with a wrench, the Multiplication Axis does division instead, with (output speed)=(back input speed)/(top input speed). (For those who care, the Multiplication Axis model shows a complicated device of springs and continuous transmissions which, if designed for a specific set of units, could in theory multiply the speeds. However, a real device like the one in the model would have a LOT of energy loss.).</n>The Square Root Axis has an output speed of the square root of the input speed (with an output speed of 0 for negative inputs).</n>The Sin and Cos Axes do the Sine and Cosine operations respectively in θ. There is no Tan Axis as tangent(θ) = sine(θ)/cosine(θ).</n>The ArcSin and ArcCos Axes do the ArcSine (inverse sine) and ArcCosine (inverse cosine) operations respectively.</n>The Equal Axis has two inputs (to the left and right of the output), and will output the input speed if, and only if, the two inputs have equal speed.</n>The Greater Than Axis has two inputs on the left and right, and has an output speed equal to the higher of the two input speeds.</n>The Less Than Axis is the same as the Greater Than Axis, except it outputs the lower of the two inputs.</n>Finally, there is a much cheaper recipe for the normal Master Axis as part of Technomancy. §r§l</n>wH33l round da poppy, p0kit ful a poze, sharkoal, charca0- oOh sPe@kin uv wHele! frE poWer! 1is73n REAL CL0S3 nOW! iRin sChtik, tImy-wimy oRaNGe nugit, mETE nuGgite wid da numbers 0f da sEkrit! Ya noe, hte seKrit of tings! tIngs 1ik lIfe, da maNyVerse an evEryTing! too nUmbers on da NuggEt tat are form dA Sekrit nUmber! Due all tis for frE pOweR! bObo OUT! WHOOPSE me Drop tIng! oH weLL!</n>§r§rHaving returned to the journal, it appears that once again 'Bobo' has interfered, but this time I cannot ignore it. This 'Bobo' has left behind what appears to be a jellyfish on a stick. After some experimentation with it, I have come to the conclusion that it is a sort of teleportation device which violates several laws of physics, and yet does not use Technomancy. From this, I have drawn an interesting conclusion. I have for months been working on a theory of time and space which states that there are infinite universes. While, for example, the Nether and End, may seem like other universes, they are actually part of this universe, and are different dimensions. According to my as yet unproved theory, each universe would have different laws of physics. I don't just mean different fundamental constants, but entirely different rules, so there may be worlds where gravity goes diagonally or there are blue and orange holes in space that link together, or maybe one where people can shoot lightning out of their hands and dragons are everywhere whose voices can do magic, or possibly a universe where everyone is made of red crystals and time only moves when some random guy does, or even a universe where breaking the bottom section of a tree makes the entire tree collapse. Many other whimsical, ridiculous, impossible things may, and most likely do, exist in some universe. According to my theory, if an object were to somehow move from one universe to another, it might bring certain laws or rules with it. So this object that looks like a jellyfish on a stick would normally not work in our universe, except this one came from a universe where these things do work, so it can work here as well. Now, of course I have investigated the possibility of travel between universes, but according to my theory it would require more energy than there is in our entire universe to do. Certain things can leak through just fine, like zombies getting brought to our universe by RIFT beams, but those are a special case as our universe, and the universe where zombies come from, are, according to my theory, entangled, which allows certain very specific things to move through quite easily (such as zombies and other mobs coming to our universe, but nothing else). Now, the only explanation for this object which violates our laws of physics, for some idiot getting past an incredibly advanced security system, for the contents of some of the messages they have left behind (which I have now examined more closely. 'smoogle it owt of deferent dementchion' indeed!), is that somehow, this idiot, this 'Bobo', has found a way to travel between universes at will, which my somewhat incomplete theory of time and space does not yet include. I must, and indeed I shall, capture this 'Bobo' and find out how they do it!
lore.redstone_registry.name=Redstone Registry
lore.redstone_registry=The Redstone Registry is similar to a Redstone Keyboard, except it has multiple preset outputs that it cycles between. It can store up to 64 values, and will emit (when measured by Ratiator or Comparator) the value it is currently at. Every time it receives a redstone signal, it emits the value that is set (rounded signal strength received) ahead of its current value, looping from the final value to the first value as necessary. If the signal it receives is equal to or greater than the number of values it has set, it resets to the first value in the list. The GUI is rather complex, and contains 5 buttons: #, +, -, ▲, ▼, as well as a bar for entering values (which are locked in by pressing enter) and an area where values are displayed. It can display up to 3 set values at a time in the GUI, and which ones are viewed is controlled with the ▲ & ▼ buttons. The top of the 3 values displayed (referred to as the focused value) is the one edited by the input bar. A new value can be added with the + button (inserted directly after the currently focused value), or the focused value can be removed from the sequence with the - button. The currently emitted value can be set to the value focused in the GUI with the # button. The currently emitted value is colored yellow in the GUI.  §r§lbDuh bDuh bddd U nEver gONnna gIv me uP, s0mETimEs m3 goNa let U down! §r§rI have spent the last 8 hours trying to decipher the message hidden in this intrusion, in the hopes that it will help me track down 'Bobo'. As of yet I have been unable to decipher this message, but I shall persevere! I am considering making some sort of mechanical computer to aid me in decoding these messages, but I can't see any pattern to them that a computer could use.
lore.workspace_dim.name=Personal Workspace Dimension
lore.workspace_dim=It is possible to build a portal to a personal empty dimension called a "Workspace Dimension". Although saying you are building a portal doesn't do what is actually happening justice. What is actually happening is the application of the technomancy concept that if time flows, then reality must exist, so if time is forced to flow in an empty void it will force reality to form a dimension around it. The first portal you build will use copshowium parts to forcibly start time in the void, creating the dimension. It has no weather, mob spawns, celestial bodies, sunlight, and starts out with only a single stone brick block over the void. Each player gets there own copy that can be built in. It is highly recommended to design field (later Technomancy mechanic) systems in a Workspace Dimension, as there are no flux effects in Workspace Dimensions at all. In order to construct a portal to a Workspace Dimension, create 3 Gateway Frames. Place a Gateway Frame pointing down; The portal will be a 3x3 below this. From the Gateway Frame, go 2 blocks down, and 2 blocks to one side. Place a Gateway Frame pointing inwards. Repeat for the opposite direction. Other blocks near or inside the portal do not interfere. To activate the portal, send a RIFT beam into the top of the upper Gateway Frame. The portal opens and closes instantly, and is only open while a RIFT beam is provided. The portal will link to [0, 33, 0] in the Workspace Dimension, and links to the dimension belonging to the player who placed the top middle block of the gateway (for this reason, fake players cannot place Gateway Frames). Exiting a Workspace dimension can be done either by dying or by using an identical gateway in the Workspace Dimension. A gateway in a Workspace Dimension will by default link to [0, 0, 0] in the Overworld, but the coordinates can be changed. Attaching gears to the ends of the two side Gateway Frames (the side opposite the middle) will allow controlling the X and Z coordinates with the speed of the attached gears (the gear in the north or west direction controls the X coordinate, the gear in the south or east direction controls the Z coordinate). For example, if a gear on the end of the south Gateway Frame has a speed of +3 radians/second, sets the target Z to 3. A gear attached to the top Gateway Frame on a side other than the top or bottom controls the Y coordinate. §r§nWould it be a problem if I were to push the button labeled DO NOT PUSH? §r§rDo you want to know what the inside of your ears tasted like when you were -5 years old? Because pressing that button is a great way to find out. §r§nI'm not sure if that was a threat, or if you've finally snapped. §r§rI mean, that button controls an experimental flux overcharger I've been working on, I mean you press that button and the entire Time-Space continuum collapses to occupy a negative volume, and even worse the dimensions of time and space rotate 90 degrees so length is width and width is depth and depth is time, and time is peppermint, and you really do not want to know what peppermint is, I mean that button is basically a universal self-destruct button. If you press it, there's no telling exactly what would happen. §r§nWHY WOULD YOU EVEN HAVE THAT JUST ON SOME RANDOM WALL? §r§rSome random wall? Oh, thaaat button labeled DO NOT PUSH. That one's just a decoy that captures who ever pushes it, to catch intruders. The end-of-time-and-space-as-we-know-it button is secure behind enough safeguards that no one, other than me, could ever get to it. §r§nSo the nut who can get past your other 'impenetrable' security system can't get to it? §r§rNote to self: remove that button. Now if you don't mind, I am busy. As I was saying: An Omnimeter/Modular Goggles with a quartz lens displays the dialed coordinates when viewing the top Gateway Frame.
lore.mech_arm.name=Mechanical Arm
lore.mech_arm=The Mechanical Arm is a block that can move entities, interact with inventories to move items, place blocks, and use items. It is controlled by 3 attached gears and a redstone signal. A gear on the bottom controls θz, a gear on the east controls θb, and a gear on the west controls θt. The angle θ will be set by the speed of the attached gear, ω. A redstone signal is accepted on the north side. What matters to this machine is the speed rotated by the gears, not the current angle, in order to make it easier to use. It starts out with θz = 0, θb = 17Π/36 radians, θt = Π/4 radians, with the gear speed being the offset from these values. The bounds for θb is [Π/6, 17Π/36], the bounds for θt is [Π/4, 3Π/4], and there are no bounds for θz. The Mechanical Arm has 2 segments of constant length, and the angle between them is controlled by the 3 θ values, as is shown by the following diagram. lower-length = 3, upper-length=5.
lore.mech_arm.post_image=From this information, the formulas for the position of the end point relative to the top center of the base are found to be: (lengthCross and θd exist to shorten the calculations) 
lore.mech_arm.post_calc_1=Or, if that is illegible: lengthCross= √(lengthBase² + lengthTop² - 2lengthTop*lengthBase*cos(θt)), θd= θb + θt + arcsin(sin(θt)*lengthBase/lengthCross), x= -cos(θd)lengthCross*cos(θz), y= -sin(θd)lengthCross, z= -cos(θd)lengthCross*sin(θz). </n>If the end position is known and you want to solve for the angles required to obtain that end position, then: 
lore.mech_arm.post_calc_2=Or, if that is illegible: lengthCross= √(x²+y²+z²), θt= arccos((lengthBase² + lengthTop² - lengthCross²)/(2*lengthBase*lengthTop)), θb= arcsin(y/lengthCross) + arcsin(sin(θt)lengthTop/lengthCross), θz= arctan(z/x). </n>It is recommended to make some sort of automatic calculation device if you need to do these operations a lot. In order to make the arm actually do anything other than move, a redstone signal must be applied. The exact strength matters, and values only reachable by Ratiator are required. All signal strengths are rounded to the nearest whole number. The arm has 7 different effects, activated by redstone signal, and each effect gets a direction based on the redstone signal (although many of the effects ignore the direction). A signal of 0 does nothing, and any other signal does an effect. The effects are referred to by index: 0: Pickup entity, 1: Pickup block, 2: Pickup from inventory, 3: Use, 4: Deposit into inventory, 5: Drop entity, 6: Throw entity, 7: Pickup one from inventory. The effect done with a redstone signal is the one where index=(redstone - 1)/6, capped at 7. The side passed to the effect is referred to by index as well: 0: down, 1: up, 2: north, 3: south, 4: west, 5: east. The side used is index=(redstone - 1)mod(6). (That is, (redstone - 1) modulus 6). The effects, in order: Pickup Entity which will cause an entity near the end of the arm to be grabbed by the arm, provided the arm has no passengers. Pickup Block will break the block at the end of the arm, and if the arm has no passengers or is carrying an item of the type dropped by the block, will pick up the block's drops. Pickup from inventory will attempt to pull out 1 stack from the inventory at the end of the arm and put it on the end of the arm (uses the direction). Use will try to right click with the held item, or if it is an ItemBlock place it in midair (uses the direction). Deposit into inventory will try to place a held stack into the inventory at the end of the arm (uses the direction). Drop Entity will cause the held entity to be dropped straight down. Throw will release the held entity, throwing it at high speed in the direction the endpoint is from the base of the arm. Pickup one from inventory is the same as Pickup from inventory, except instead of trying to take up to a full stack, it tries to take exactly 1 item. The arm can pass through blocks, carry item entities, players, or mobs, and interact with things requiring a right click.
lore.mech_beam_splitter.name=Mechanical Beam Splitter
lore.mech_beam_splitter=A more precise variant of the Beam Splitter is the Mechanical Beam Splitter. When placed, it can face any horizontal direction. The ratio used to split incoming beams between the top and bottom is controlled by the speed of the gear attached to the direction it is facing. Ratio=ω/15, capped at 1. It rounds magic normally for the down direction, and the remainder goes up.
lore.beam_cage_+_staff.name=Beam Cage & Staff
lore.beam_cage_+_staff=There are several handheld devices which require magic to run. In order to power them, there is the magical equivalent of a battery: the Beam Cage. It can store 1024 each of Energy, Potential, Stability, and Void. In order to charge it, a Cage Charger is required. Right click a Cage Charger with a Beam Cage to insert the cage into the charger. Right clicking it again will remove the cage. In order to charge the cage, send a beam into the charger from any direction other than down. The components of the beam will go into the cage, with any excess magic being lost. In order to use a Beam Cage with a device, there are 4 keybinds that need to be set: Energy Control key, Potential Control key, Stability Control key, and Void Control key (which, despite the name, have nothing to do with the ctrl key on the keyboard). Suggested default values are: 'R', 'G', 'B', & 'V' respectively. Devices powered by a Beam Cage can have there magic usage configured by holding the device, along with 1 of the elemental control keys, and right clicking to increase usage of that element by 1, or shift right clicking to decrease it by 1. The settings are capped at 8.</n>The first such device is the Beam Staff. Holding it in one hand and a Beam Cage in the other while using the Beam Staff will drain the configured usage from the cage every 5 ticks, and shoot a beam from the staff in the direction the player is looking made from the magic drawn from the Beam Cage. The beam travels farther than usual, 32 blocks, and can collide with blocks and entities. While it can do an effect at the end (which is the purpose of the staff), it cannot insert the beam into a device such as an Arcane Reflector.</n>§r§lae metil st1k 4 due-ing tings! m1cks wid 2 moor uf dem for anoter! thI3 stik, an'd da windy-windy-cranky won, an-dda da one that luke like a Y! Ya noe, da whatchamalit, start with a UU! d0 tHis 4 a beter Y-stik! bOB0 AWAY!
lore.prototyping.name=Prototyping
lore.prototyping.default=Using prototyping it is possible to compact large, complicated builds into a single block space and copy them quickly and cheaply. In order to produce a Prototype, you need a Prototyping Table. Place it down somewhere. It affects a 16x16x16 cube. It is suggested that the entire area it affects be confined to 1 chunk for reasons that will become apparent with fields later on. There is a button in the GUI to visualize the affected area, and it can be rotated with a wrench.</n>A Prototype (the compacted design) can have 6 inputs/outputs (one per side of the block), and only certain things can go in/out of the Prototype (selected during construction). Ratiator signals, magic beams, heat, and rotary connections are the only things that can go in or out. Inside the design area (the 16x16x16 cube) you can build a system that will be copied into the finished Prototype. When building the design, assume there are solids walls, a ceiling, and a floor. Inputs and outputs are designated with Prototype Ports. The interface for a Prototype Port allows you to select what can travel through it, and whether it is an input or output. Rotary connections (connecting gears inside and outside the Prototype) and heat go in both directions, while ratiator signals and beams can only go in OR out of 1 port. In refers to into the Prototype, out refers to outside the Prototype. In the port interface, select a side. This will be the side of the final Prototype that connects to this port, and the side of the port that connects to the Prototype. It should be noted that Ratiator signals do not pass through on there own in either direction, something must be connected. That is to say, for a Ratiator signal to go through, a Ratiator must be facing out of (reading) the output end. There can be a maximum of 6 ports, and only 1 port per side. Ports can be given a name in the GUI to help keep track of each one's purpose. To create the Prototype after building a design (complete with ports) in the design area, go into the Prototyping Table interface, supply it with 3 copshowium ingots, and press the "Prototype" button. This will copy the design (at only the cost of the ingots) and create a Prototype block. The Prototype can be copied by placing it in the slot in the right side of the interface, along with the number of copshowium ingots required to produce it, and pressing the Prototype button to produce a duplicate. The contents of Prototypes are chunkloaded while the Prototype block itself is. There are a finite number of Prototypes that can be created (500), after which the Prototyping Table will refuse to produce (or copy) any more. Slots can freed up by placing an unwanted Prototype in the slot in the Prototyping Table with a recycling icon to destroy the Prototype, free up a slot, and return the copshowium ingots required to make it. Destroying the item in any way other than the recycle slot will NOT free up a slot. The slots are shared between all members of a server. There are certain blocks which are blacklisted from being part of a Prototype: other Prototype blocks (no nesting), Large Gears (a multiblock), Portals, and a few others. Things can be added to/removed from this list in the config (DO NOT allow nesting Prototypes or inserting Large Gears though). It is recommended that server owners/pack makers blacklist any multiblocks or ways of teleporting items/players/fluids into or out of the Prototype.
lore.prototyping.consume=Using prototyping it is possible to compact large, complicated builds into a single block space. In order to produce a Prototype, you need a Prototyping Table. Place it down somewhere. It affects a 16x16x16 cube. It is suggested that the entire area it affects be confined to 1 chunk for reasons that will become apparent with fields later on. There is a button in the GUI to visualize the affected area, and it can be rotated with a wrench.</n>A Prototype (the compacted design) can have 6 inputs/outputs (one per side of the block), and only certain things can go in/out of the Prototype (selected during construction). Ratiator signals, magic beams, heat, and rotary connections are the only things that can go in or out. Inside the design area (the 16x16x16 cube) you can build a system that will be inserted into the finished Prototype. When building the design, assume there are solids walls, a ceiling, and a floor. Inputs and outputs are designated with Prototype Ports. The interface for a Prototype Port allows you to select what can travel through it, and whether it is an input or output. Rotary connections (connecting gears inside and outside the Prototype) and heat go in both directions, while ratiator signals and beams can only go in OR out of 1 port. In refers to into the Prototype, out refers to outside the Prototype. In the port interface, select a side. This will be the side of the final Prototype that connects to this port, and the side of the port that connects to the Prototype. It should be noted that Ratiator signals to not pass through on there own in either direction, something must be connected. That is to say, for a Ratiator signal to go through, a Ratiator must be facing out of (reading) the output end. There can be a maximum of 6 ports, and only 1 port per side. Ports can be given a name in the GUI to help keep track of each one's purpose. To create the Prototype after building a design (complete with ports) in the design area, go into the Prototyping Table interface, supply it with 3 copshowium ingots, and press the "Prototype" button. This will destroy the design (by default it copies it, and it is possible to clone a Prototype, but the configuration file has been changed) and create a Prototype block. The contents of Prototypes are chunkloaded while the Prototype block itself is. There are a finite number of Prototypes that can be created (500), after which the Prototyping Table will refuse to produce any more. Slots can freed up by placing an unwanted Prototype in the slot in the Prototyping Table with a recycling icon to destroy the Prototype, free up a slot, and return the copshowium ingots required to make it. Destroying the item in any way other than the recycle slot will NOT free up a slot. The slots are shared between all members of a server. There are certain blocks which are blacklisted from being part of a Prototype: other Prototype blocks (no nesting), Large Gears (a multiblock), Portals, and a few others. Things can be added to/removed from this list in the config (DO NOT allow nesting Prototypes or inserting Large Gears though). It is recommended that server owners/pack makers blacklist any multiblocks or ways of teleporting items/players/fluids into or out of the Prototype.
lore.prototyping.device=Using prototyping it is possible to compact large, complicated builds into a single block space for use in special Crossroads devices (by default they can be placed and used as parts of builds, but the configuration file has been changed). In order to produce a Prototype, you need a Prototyping Table. Place it down somewhere. It affects a 16x16x16 cube. It is suggested that the entire area it affects be confined to 1 chunk for reasons that will become apparent with fields later on. There is a button in the GUI to visualize the affected area, and it can be rotated with a wrench.</n>A Prototype (the compacted design) can have 6 inputs/outputs (one per side of the block), and only certain things can go in/out of the Prototype (selected during construction). Ratiator signals, magic beams, heat, and rotary connections are the only things that can go in or out. Inside the design area (the 16x16x16 cube) you can build a system that will be copied into the finished Prototype. When building the design, assume there are solids walls, a ceiling, and a floor. Inputs and outputs are designated with Prototype Ports. The interface for a Prototype Port allows you to select what can travel through it, and whether it is an input or output. Rotary connections (connecting gears inside and outside the Prototype) and heat go in both directions, while Ratiator signals and beams can only go in OR out of 1 port. In refers to into the Prototype, out refers to outside the Prototype. In the port interface, select a side. This will be the side of the port that connects to the device containing the Prototype. It should be noted that Ratiator signals to not pass through on there going into the Prototype, something must be connected. That is to say, for a Ratiator signal to go through, a Ratiator must be facing out of (reading) the output end. There can be a maximum of 6 ports, and only 1 port per side. Ports can be given a name in the GUI to help keep track of each one's purpose. To create the Prototype after building a design (complete with ports) in the design area, go into the Prototyping Table interface, supply it with 3 copshowium ingots, and press the "Prototype" button. This will copy the design (at only the cost of the ingots) and create a Prototype block. The Prototype can be copied by placing it in the slot in the right side of the interface, along with the number of copshowium ingots required to produce it, and pressing the Prototype button to produce a duplicate. The contents of Prototypes are chunkloaded while in use. There are a finite number of Prototypes that can be created (500), after which the Prototyping Table will refuse to produce (or copy) any more. Slots can freed up by placing an unwanted Prototype in the slot in the Prototyping Table with a recycling icon to destroy the Prototype, free up a slot, and return the copshowium ingots required to make it. Destroying the item in any way other than the recycle slot will NOT free up a slot. The slots are shared between all members of a server. There are certain blocks which are blacklisted from being part of a Prototype: other Prototype blocks (no nesting), Large Gears (a multiblock), Portals, and a few others. Things can be added to/removed from this list in the config (DO NOT allow nesting Prototypes or inserting Large Gears though). It is recommended that server owners/pack makers blacklist any multiblocks or ways of teleporting items/players/fluids into or out of the Prototype.
lore.prototyping.pistol=There are a few devices which can have a Prototype socketed into them and are controlled by it. For those devices, a Prototype is inserted by crafting it with the device, and removed (and returned) by placing the device alone in the crafting grid. The devices which use a Prototype can be configured to accept magic from a Beam Cage. The devices will have specific requirements for the contained Prototype (but will still accept a Prototype that violates a requirement, but just disable the feature that uses that requirement). There should be a Magic Input port on the East side, and if there is than the drained magic from a Beam Cage will be inserted into that port every 5 ticks. There should be a Magic Output port on the West side, and magic sent into it will return to a held Beam Cage. Other requirements vary based on the device. The contained Prototype will be chunkloaded while the device is held. The first such device is the Prototyped Pistol. It is a weapon that fires iron nuggets as bullets. It needs a Redstone Input port on the South side and a Rotary port on the Up side, which will connect to a single internal gear of I=10. When the pistol isn't fully loaded, shift-right click with it to load an iron nugget from your inventory. It has a magazine size of 6. It can only shoot if there is energy in the internal gear in the top rotary port. The projectile will have a speed and damage based on the speed in the gear. As there is no upper limit on speed, depending on design quality a bullet might do no damage or 1-shot the enderdragon. While the right-mouse is held, the South Redstone In port will have a signal strength of 2, or if the player is sneaking, 1, when read by Ratiator.
lore.fields.name=Temporal Fields
lore.fields=Using Temporal Fields (or just fields for short) it is possible to manipulate the rate at which time flows for entities in a certain area, or even stop time in an area entirely. However, a single mistake could have disastrous consequences. In order to start using fields within a chunk, the chunk has to be unlocked using a Chunk Unlocker. Place it anywhere inside the chunk, and give the top a redstone signal. The chunk will remain unlocked only while the Chunk Unlocker receives a redstone signal. One a chunk is re-locked, there is a cooldown before it can be unlocked again. Do not use multiple Chunk Unlockers in the same chunk, or they will interfere with each other. In order to work with fields, it is highly recommended to have Modular Goggles with a quartz lens, as it allows you to see the fields of the chunk you are in. Each chunk has a "flux" value, and it is shared throughout the entire chunk. Time is manipulated in entire columns of blocks at a time, from bedrock to sky height. Each column has a value called "Rate", which defaults to 8 and can range from 1 to 128. The rate at which time flows for entities in a column is (Rate)/8 speed, so the default Rate of 8 would give (8/8=1) times speed. The amount of Rate and Flux in a node can actually be seen by wearing the Goggles as mentioned earlier. Rate will be rendered in green, and Flux is rendered in red. Depending on the configuration settings, they will either appear are translucent lines connecting columns or as translucent quadrilaterals with each corner being a column. The height of the lines/corners shows the amount of Flux/Rate, with feet level being 0 and waist height being 8 (2 blocks high is 16, etc.). Both Rate and Flux can be manipulated with machines, and are recalculated in a cycle every 5 ticks. There are important rules governing Rate and Flux: Rate returns to 8 unless controlled externally, with each influencing device pushing it up or down away from the resting point of 8. Remove all devices changing it, and it will return to 8 next cycle. Flux does not return to 8 on its own, and if increased by 3 to 11 one cycle, and then next cycle 2 is added, it will go to 13 instead of 10. It also changes randomly when it isn't equal to 8: each cycle it changes by a random amount from 0 to (|current flux - 8|/8), with the upper bound rounded away from 0. If it were, for example, 18 then every cycle it has a chance to increase from 0 to 2. At exactly 8, it doesn't change randomly. Every time the Rate in a column changes, the flux in the chunk increases (even if rate decreased) by |ΔRate/2| (Δ means change in). If Flux reaches (or would exceed) 128, a flux disaster occurs in the chunk and the chunk will become locked again. There are several flux disasters, all of them extremely unpleasant and destructive (all of them can be disabled in the configuration file). They range from turning everything in the chunk to air, to a small explosion. It should be noted that every time a chunk is unlocked, the Rate and Flux in the contained nodes resets to 8. Normally, neither Flux nor Rate can reach 0, though under special conditions time can still be stopped. If the Rate in a column exceeds the Flux in the chunk, then the rules governing flux change. As long as any node in a chunk has a higher rate than the flux in the chunk, machines cannot affect the node's flux. Flux won't grow randomly, instead growing a constant 2 per cycle (8 per second). However, for entities, time is effectively stopped while in a column with a lower flux and rate. This means that while it is possible to stop time in an area, it can't be stopped permenently.</n>There are 3 machines involved in manipulating the Rate and Flux. First, the Rate Reader Axis: It acts identically to a Redstone Master Axis, except instead of setting a speed equal to the received signal strength, the speed equals the chunk's flux.</n>A machine called a Flux Manipulator changes the flux of the chunk its in each cycle by the angle rotated by a gear attached to the top in the last 5 ticks in radians. The Flux Force it applies is angle/5. The direction rotated controls whether the Flux Force is + or -.</n>Finally, the Rate Manipulator changes the rate of the column its in by the SPEED of a gear attached to the top (not the angle rotated). It can be configured with a wrench to make it affect multiple columns in the same chunk at once, with a maximum area being a square of radius 9. Be careful, as affecting multiple columns at once will mean the flux gained from changing rate will be higher (changing rate in 9 columns is 9 times the flux gain, for example).</n>Fields do not interact through Prototypes (field setups inside Prototypes do not affect the outside world, and vice-versa). If Flux hits 128 inside of a Workspace Dimension or Prototype, there is no Flux Disaster (though the chunk still gets re-locked). It is therefore recommended to test field setups in a Workspace Dimension.
lore.watch.name=Prototyped Watch
lore.watch=The Prototyped Watch is a multi-function item which, like the Prototyped Pistol, requires a socketed Prototype to function. In addition to the standard Magic ports, it should also have a Redstone-In port on the South side, and optionally a Rotary port on the Up side, Down side, and North side. Unlike all other things involving Prototypes, fields generated within the Watch's socketed Prototype will affect entities in the outside world while the Watch is held. The Watch's Prototype is confined to 1 chunk on the inside, so field setups inside should take that into account. If there is a field inside the Watch and a field outsid the Watch affecting the same entity, the two speed multipliers are multiplied. Neither of the fields themselves are effected. The columns within the Watch do not directly correspond to those outside, which is to say that the North-Eastern most column inside the Watch does not necessarily impact what would the be North-Eastern most column of the chunk the player is standing in. Instead, the Watch effects time around it as if the player was standing in the center of the Watch's chunk. While holding the Watch and the right-mouse button is held, the South Redstone In port will have a signal strength of 2, or if the player is sneaking, 1, when read by Ratiator. The Rotary Up, Down, and East ports each allow displaying the speed of the gear attached to the port. The 3 speeds are displayed in the top left while the watch is held. This can be used for everything from a countdown timer to making a basic calculator.
lore.flying_machine.name=Flying Machine
lore.flying_machine=I've had an idea for a Flying Machine. I don't know if it would actually work, and I don't have access to a crucial material for making one, but I think the idea has enough merit to record. The crux of the design is two large plates, both of an extremely dense material. But, and this is the tricky bit, one of the plates needs to have negative mass. I'm not sure if negative mass exists, if it's even possible, but this design demonstrates the potential if it did. By strapping together these two plates, the bundle would be propelled in the direction of positive-mass plate. Fast. Without drawing any form of power or fuel whatsoever. My idea is that. Adding some legs, a saddle, and a crank to turn this "wheel" of plates completes the design. Pressing 'w' or 's' would rotate this wheel forward or backward. The Flying Machine would move forwards in the direction its rider is looking, but it wouldn't be possible to hover. I imagine controlling it would have a bit of learning curve, but it would quickly become quite intuitive. Of course, I don't have access to extremely dense plates of positive and negative mass, so for now this idea is just an idea.

#Alchemy
lore.cat_alchemy.name=Alchemy
lore.alc_intro.name=Introduction to Alchemy
lore.alc_intro=§r§oErm... H-hello. At this p-point I t-take over, and d-do this c-category alone, as this is my sp-specialty. In order to make this a bit easier to read, I'm going to switch the machine recording what I say to record my speach in normal text, instead of italics. Which of these levers was it? Oh yes, the T-Technomancer left a note. Erm, third to the left, second row, ah--h§r§rere it is. Should the T-Technomancer speak during this section, their speech will be in italics instead of normal text. Or at least, I think that's how this works.</n>I shall explain the workings of Alchemy throughout this section of the Journal, both the practical and much of the theoretical, the two sides being, of course, complementary to a proper understanding. Alchemy only truly begins once you obtain something called a Philosopher's Stone. It is the Alkhest, or universal solvent. But of course, I shall save the theory of the Stone for that section. Until a Philosopher's Stone is obtained, Alchemy is little more than mundane chemistry. Of course, a practical understanding of mundane chemical works is requisite for success.</n>Most everything in Alchemical works needs a material that can't be produced via a normal Detailed Crafter. Most alchemical materials have to be made in various chemical aparatus which will be explained in greater detail in the following two entries. With care, and attention to detail, producing materials like Densus or Chlorine is quite easy. Every type of ingredient that can go into alchemical glassware is a reagent, an ingredient of sufficient purity for alchemical work.  Any reagent can be viewed in the Juxtaposed Educational Informer (or JEI for short) to see uses and recipes, as with any other item. Reagents in glassware can react with one another if all of the needed ingredients are present. Most reactions (alchemical recipes) require a certain temperature range in the glassware, and may require a catalyst (a reagent that has to be present for the reaction to procede, but which won't be consumed). For example, If redstone is heated above 360°C it will turn into 1 part quicksilver and 1 part sulfur dioxide for every 1 part of redstone heated. This reaction is endothermic, which means that doing the reaction will cool down the glassware it happens in. The opposite is exothermic, which heats the glassware. Isothermic is rarer, and means the temperature doesn't change. Some reactions have an additional requirement: they may require the glassware they are in to be charged (shown by lightning bolts in the JEI reaction view). This will be covered in the following sections as well.</n>Every reagent can exist in one of three phases: Solid, Liquid, or Gas. Heating a reagent above its boiling point (visible in JEI) will make it a gas, cooling it below its melting point makes it a solid, and making it in between makes it a liquid as you'd expect. The phases of matter can be used to separate out materials with different melting/boiling points. All three phases flow sideways in glassware, however only gases can flow upwards, while only liquids and solids can flow downwards. If a reagent is in the solid phase, you can remove it in item form by right-clicking on the glassware.</n>There are 3 major materials I would recommend stockpiling, as they will be heavily used: Sulfur, Quicksilver, and Alchemical Salt. It would be a good idea to mass produce these things. Sulfur can be obtained by putting gunpowder in glassware with water as a catalyst, turning gunpowder into sulfur in a 2:1 ratio. Caution is required however, as heating gunpowder may cause it to explode, bursting the chamber it is in (but nothing around it). Heating redstone makes Quicksilver, as mentioned earlier. Alchemical Salt is a bit harder to produce, and can be made as a byproduct with either Chlorine Gas or Muriatic Acid (more details in the following sections, or JEI).
lore.man_glass.name=Manual Laboratory Glassware
lore.man_glass=There are two sets of glassware: the manual and the automatic. Everything that can be crafted in one set can also be made in the other. The manual set is simple to use, cheaper, and ideal for making single batches of a reagent. The automatic set, however, can be automated, making it ideal for mass production.</n>Reagents can be stored in Glass Phials, which have a capacity of 25. Right clicking on the ground with a Glass Phial will pour out the contents, possibly performing an effect depending on the contents. A Glass Florence Flask is a larger form of a phial (capacity 500) that can't be poured out on the ground. A Glass Shell is like a phial, except right-clicking throws it, causing it to smash (and possibly do an effect) where it lands. All three can be filled/emptied by right clicking it on placed glassware.</n>A Glassware Stand can hold Phials and Florence Flasks (but not Shells). Glassware can be placed on an empty stand with a right-click, or removed by shift-right-clicking with an empty hand. Reactions can occur inside glassware placed on a stand. A heating cable can be attached to the bottom of a stand to heat/cool a contained Florence Flask. Phials cannot be heated/cooled this way. Florence Flasks are intended for reactions & heating/cooling, while Phials are meant for reagent transfer. Conduits can be attached to the top of the stand (See Automatic Laboratory Glassware), and providing the stand with a redstone signal will force the contents to flow up into a conduit, regardless of phase.</n>The Alembic is a specialized piece of glassware meant to help with early game quicksilver production. When heated from below, the contents are allowed to react. Anything gaseous leaves the Alembic. If the reagent would flow down at room temperature, it goes into the phial/flask on the stand under the Alembic's spigot. Otherwise, it is lost. Solid/liquid reagents stay in the Alembic until they boil. If, for example, redstone were put in a hot Alembic it would break down into Sulfur Dioxide and (would would be lost, as it's a gas at room temperature) and liquid quicksilver. Once the quicksilver boils it will leave the Alembic, cool to liquid, and be collected in the glassware under the spigot.</n>Item forms of a reagent can be inserted into glassware by right clicking with it on glassware. Items can be removed from glassware with a solid reagent by right clicking with an empty hand.</n>The Electrolyzer is a block that accepts Forge Energy, and consumes 10FE/tick whether it's running or not. Placing a Phial or Florence Flask inside while it has energy allows reactions to occur in an energized environment, which is a requirement for some reactions.
lore.man_glass_pic=From left to right: A Florence Flask, an Alembic on a Fuel Heater, and a Phial connected to the Alembic.
lore.aut_glass.name=Automatic Laboratory Glassware
lore.aut_glass=There are two sets of glassware: the manual and the automatic. Everything that can be crafted in one set can also be made in the other. The manual set is simple to use, cheaper, and ideal for making single batches of a reagent. The automatic set, however, can be automated, making it ideal for mass production.</n>Glass Conduits allow moving reagents between different pieces of glassware. Like Fluid Tubes, their connections can be wrenched between input only, output only, and disable connection. Unlike Fluid Tubes, they do not have a setting to average pressure. When using Glass Conduits, it should be noted the taking advantage of the fact that gases can't flow down, while liquids/solids can't flow up, is the main way to separate out a mixture of reagents.</n>There are also Redstone Glass Conduits, which only connect while given a redstone signal.</n>The Glass Reaction Vessel has conduit connections on all 6 sides, can connect to heat cables on all 6 sides, can interact with hoppers to move item forms of solid reagents in and out, and can hold Forge Energy (drained at 10FE/tick) to act as an energized environment for reactions.</n>The Glass Storage Vessel stores a large amount of reagents (Capacity 10,000), and can connect to conduits on all sides. Reactions can not occur inside Storage Vessels.</n>Glass Reagent Pumps can be oriented either up or down. They output reagents out the way they face, and accept reagents from all other directions. They force reagents to flow in the direction they point, regardless of phase.</n>The Chemical Vent vents any reagent inserted into it, acting as a chemical trash can that also does the effect of the reagent around it.</n>The Glass Cooling Coil makes any reagent that flows through it be at room temperature.</n>The Glass Thermal Conduit connects to a heating cable at the top or bottom, and sets any reagent that flows through it to the temperature of the cable.</n>The Fluid Injector allows converting fluids into reagents. Inserting liquids like distilled water or molten copper into the top will allow the reagent form to be conduit-ed out the bottom. Inserted a gas like steam into the bottom allows conduiting the gasous reagent out the top.</n>The Glass Limiter Conduit is a specialized conduit that stops inserting a reagent once there is too much of that reagent in the target it outputs to. The limit can be toggled between 0.25, 0.5, 1, 2, 4, 8, and 16 by shift-right-clicking on the Limiter Conduit with a wrench.
lore.aut_glass_pic=A setup to mimic an Alembic. From left to right: A Reaction Vessel, a Cooling Coil, a Chemical Vent, and a Storage Vessel.
lore.electric.name=Forge Energy
lore.electric=Forge Energy can be produced in a Dynamo, which has an axle connection on the back and a FE connection of the front. Rotary Energy is drained almost as fast as it is provided to produce Forge Energy. The more Rotary Energy it draws, the more Forge Energy is produced.</n>The Leyden Jar is a type of FE Battery. It can be placed inside Tesla Coils to manually move FE, and increase Tesla Coil capacity.</n>The Tesla Coil is the main way of transmitting FE. The base has 3 inputs and 1 output for FE (the output is orange). By right clicking the top with a wrench, then right clicking the top of a nearby Tesla Coil with the same wrench, the two Tesla Coils will be linked. The Tesla Coil you first clicked on will transfer FE to the second Tesla Coil you clicked on. Links are one way, and each Tesla Coil can have up to 3 links. Shift-right-clicking the top of a Tesla Coil with a wrench will clear all its links. Shift-right-clicking the base of the Tesla Coil will toggle on and off a sort of "Defense Mode". While in defense mode, the Tesla Coil will use stored FE to attack nearby entities, including players. Providing the base with a redstone signal will disable the Tesla Coil from attacking or transmitting FE.</n>The Atmospheric Attenuator is a way of transmitting FE wirelessly, even between dimensions. Inserting FE into the base will cause it to move the FE into a shared "Atmosphere" storage. All players in all dimensions share the same "Atmosphere" storage, which has a capacity of 1,000,000,000FE. Right clicking the base with a wrench switches it to "Draining mode", which extracts FE from the atmosphere and outputs it out the base instead of inserting FE into the atmosphere from the base. A Comparator/Ratiator can read how full the atmosphere is, with signal strength 15 meaning it is full. If the atmosphere charge level gets above 50%%, various negative global effects will occur that increase in severity as charge increases. The main, rather unfortunate, effect is more lightning strikes. Also, in extreme cases creepers may spontaneously become charged. Of course, these things are rather simple to prevent by not overcharging the atmosphere.
lore.tesla_ray.name=Tesla Ray
lore.tesla_ray=While the Tesla Coil can produce large shocks which can be used to strike nearby hostiles, it isn't quite as portable as one might hope. However, my attempts to make it more compact all fail due to a difficulty in causing a large enough charge buildup in a small device. While I am s-somewhat embarassed to admit it, I b-believe a material I'm not quite sure how to create might hold the answer. However, should you somehow come across this material, I am sure you would be able to assemble into a device I call a Tesla Ray quite easily. It would work by holding the Tesla Ray in the main hand, and a charged Leyden Jar in the offhand. The Tesla Ray would have a charging up period, just like an attack cooldown on a sword. Using it during its cooldown would be very ineffective. With every shot, it would fire out a large electrical bolt in front of you if there's a suitable target, and the bolt should be able to arc up to 3 times. Of course, if the Tesla Ray is still on cooldown I don't believe it would arc at all whatsoever. Every shot of the Ray would drain some charge from the Leyden Jar. Such a Ray would be quite effective at managing large crowds of enemies due to the ability to arc.
lore.heat_limiter.name=Heat Limiter
lore.heat_limiter=Using a Heat Limiter, the temperature of a machine or heat cable can be tightly controlled. It connects to a heat cable in the front and back. It only allows heat to flow when the temperature of the output, in degrees kelvin, is lower than the redstone (or Ratiator) signal strength received. This can be used as a temperature regulator of sorts, to keep the output heat cable at right around the temperature set via a Ratiator, provided abundent heat is provided into the input side.
lore.acids.name=Strong Acids
lore.acids=There are four strong acids, which are very useful. The first three of the four, Oil of Vitriol, Muriatic Acid, and Aqua Fortis all have the same effect. They damage mobs around them when released, as well as destroying metal blocks other than gold. Gold being a noble metal, it cannot be damaged by the simple acids. Higher amounts do more damage. The noble acid Aqua Regia, made by blending Muriatic Acid with Aqua Fortis, is unusual in that while it also damages mobs and breaks metal blocks, it is capable of dissolving gold blocks as well as other metals. The noble acid is much stronger than the ignoble acids, being more harmful if spilled upon something living. It is also able to dissolve bedrock, and extremely unusual property. When spilled directly upon bedrock, it destroys the bedrock and drops it as an item. This means that bedrock is now obtainable, and it is used as a reagent in later recipes. While Aqua Regia is not the ultimate solvent, a title held by the Philosopher's Stone, it is perhaps the penultimate solvent. For this reason, it is often used to catalyze rather unusual or difficult reactions. §r§lbE3p Be3PE L3T-US! iT es ME! bOBO! NO-eR 0F DA TINGS! mUcH HEAT und CULD U ned! tOp hOT! botTome CULDE! dA DEMON BOX! ROCK-0f-dA-sLEAPEE-fUrnItur! rEd bAR! aNd dA spezciel iNGredent! a blab uv phat! wId DA n\\_/mBur uf dA stAcKSiZe! mAKE lOAd5; mOst UsfulL!
lore.chlorine.name=Chlorine Gas
lore.chlorine=Chlorine, a green gas, is extremely dangerous to organic life. I would advise extreme caution in its use and handling. When released, it effects a large area (radius affected by amount released), and any entity in the radius will have many most serious health effects, including, but not limited to, Wither 4, Slowness 4, and Hunger 4. Most anything hit with Chlorine will shortly die without milk. Many would seek to use it as a chemical weapon thrown in Glass Shells. Of course, that is highly unethical, and a possibility I would have never even considered had not the Technomancer suggested it. The Technomancer and I often do trade various things in a rather beneficial manner, the Technomancer providing clever little devices for my work, and I providing whatever unusual material they need. I still haven't found out what the Technomancer actually does with all that Chlorine Gas... §r§lkEmiCAl Weepoons, mE kNOW a' kynd! bAng baNG poeder, rawe m33t, lIttle bOttle o' Forte Water! dOnt drop it, ecksept on yur enEmIES! BOBO AWAE!
lore.phil_stone.name=The Philosopher's Stone
lore.phil_stone=In order to truly begin Alchemy, a Philosopher's Stone is essential. As I have repeated previously, the Stone is the Alkhest, or universal solvent. A substance capable of separating reality into its composite parts, to a degree unattainable by normal means. It is here that I really must lecture upon theory. According to the Central Theory of Unified Alchemy, most everything, indeed truly everything, is composed of 3.. The correct word eludes me. Aspects? Flavors? Elements? I shall use elements, for now. Each of the three elements come in several forms. You know them in their magical form as Energy, Potential, and Stability. Alchemy is, in many ways, the study and usage of their material forms, which are: Phelostogen, Aether, and Adamant. All material things are a blend of these three, though it is often difficult to assemble these three materials into arbitrary substances. Void, of course, is not a substance nor element itself, but simply a space that is completely empty of the three elements, making it have no properties whatsoever and making it quite a fool's errand to study it.</n>Phelostogen takes the form of an eternal flame, an undying coruscating bundle of light. When contained, it is passive and produces no heat, allowing it to be heated and cooled as desired. When released, it rapidly expands, consuming near-everything in its path in a burning cloud until it is too spread out and rapidly disapates. An interesting trait of Phelostogen is that is has a slight negative density, but it is rarely in high enough concentration for blended material to share this trait. </n>Aether is a permeating substance, gaseous in nature. It is most difficult to contain, tending to fade away into the background of reality. It is capable of transmitting signals, giving redstone its interesting properties (redstone being rich in Aether).</n>Adamant is solid, and mostly inert. It is absolutely stable, and impossibly hard.</n>A Philosopher's Stone, being the Alkhest, is capable of breaking down certain materials particularly rich in one of the three fundamental elements and releasing it. It is always a catalyst, never consumed in a reaction. Few things are capable of containing it.</n>Which brings us to an important question: How is the Stone to be contained once it is produced. Making a Philosopher's Stone is quite easy, it's containing it that's the trick. It can destroy any glass container it is put in. The item itself will melt through the floor all the way to the void if dropped. In order to contain the Philosopher's Stone, you'll need a new material: Alchemical Crystal.</n>Every piece of glassware that was previously made of glass can also be made of Alchemical Crystal for a crystal version (it's still called glassware though). The Philosopher's Stone can safely contained in crystal. Many of the later materials will also require crystal glassware.</n>The Stone breaks down gunpowder into sulfur and Phelostogen. Bedrock breaks down into Alchemical Salt and Adamant, while redstone is broken down into Aether, Quicksilver, and Sulfur Dioxide.</n>The three most heavily used materials prior to obtaining the Stone (Sulfur, Quicksilver, and Alchemical Salt) are produced alongside the three most heavily used materials now that you've obtained the Stone, I'm sure you will have noticed.</n>I do feel this should conclude this rather long-winded explanat- Egad, What on Earth is that thing‽ §r§lhOi 1t's-- §r§rW-Whom or W-What a-are yo-you? §r§loOpsy woPsy mE n0 mene to kum wen U h3R! §r§rHow-how-how on Earth have you- Dd-do you even realize what you've just d-done‽ §r§lb0BO AWAYAYA!</n>§r§rOh. Oh d-d-dear. I-I-I m-m-m-must... I m-must record the thing I just saw. B-before I forget. Oh, I d-do regret that we d-didn't add some sort of imaging feature to the machine that records this book. I d-do b-believe that c-c-creature- I can sc-scarcely call it human- was that t-troublesome Bb-Bo-Bobo whose existance d-drove the T-T-Technomancer to hysterics. It certainly spoke like him. And I d-do say him, as it seems that c-creature was indeed a he. I-I-I- feel I m-m-must d-describe it. Just give m-me a moment to c-collect myself. Although, it occurs to me now, someone reading this as a book would have no perception of passed time. I could leave for an hour to collect myself, and indeed, the reader would be none the wiser. Of course, me saying this does reveal somewhat that I just did that. And of course, the Technomancer & I still haven't worked out a way to add an erase function to this contraption. Ahem. This Bobo was humanoid, though only vaguely so. He is short, coming to maybe a meter a height. His height is scarecly his strangest aspect. He seemed to lack that aspect that is most standard in organic life: Vertical symmetry. He had two eyes, but one was the size of- oh, I don't know, a large tennis ball, or a small potato. The other was scarely larger than a blueberry. It was certainly smaller than a large blueberry, though perhaps larger than a small blueberry. It was, I would say, equal in diameter to a blueberry of moderate size. The larger of the two eyes had a pupil and iris too small for me to determine its color, but the smaller eye was almost entirely taken up by an enourmous pupil, with a green iris. While normally I would assume his other iris was also green, his whole stature was so assymetrical as to make me doubt it. His hair was a curly dirty reddish-brown mess, perhaps simply unwashed, perhaps actually that color. One of his hands had 5 fingers, the other only had 3 (one of which was the thumb). He was not here long enough for me to determine if this was natural, or due to some sustained injury. His skin was pale, but heavily freckled. As I come to think of it, it is possible he was taller than a meter, but he stood heavily slouched, as if he had a hunch. I-I am not sure, however. Certainly, his stance was lopsided. He was clothed. I did not take notice of what in, exactly. However, I did notice one particularly unusual item: A black top hat. There was a slight gap between the brim and his head, as if he were storing something that did not quite fit under it. I do wish I had somehow gotten a picture of that thing to study more closely. If that thing is human, it is a severely warped one. I-I think it must be some as yet unknown species of creature, but I cannot be certain. I must consult the literature on the subject to be sure. Physical descriptions aside, yet more wonderous than his appearence was, indeed, his appearence in this room. He came through the wall, he simply walked through as if it were a hologram. It-it should be impossible, that wall is solid Adamant, layered with Alchemical Crystal and bedrock. The Technomancer had become so hysterical at their own inability to stop this Bobo's intrusions that in order to try and alleviate their sanity I fortified the walls of this room myself, going far beyond what should have been necessary with multiple different inpenatrable materials. Of course, when Bobo's messages didn't stop appearing, we all blamed the Technomancer's lock and door. But yet, that Thing has just been walking through the wall. It should not be possible, and yet I just witnessed it happen twice, once as he entered, once as he exited. This single act, or, indeed, duel act, is in violation of all my theories. Nothing can penetrate Adamant, nothing. It is the very essence of solidity, not even Aether can penetrate it, not even the strongest explosive nor the cleverest of the Technomancer's machines, yet this Thing has walked right through. I suppose it is theoretically possible to warp reality so that one is on the other side of an Adamant wall, but not to walk through it in a continuous fashion. What I have witnessed confirms the Technomancer in their hysteria, such a thing is inconcievable, and yet it is. I must check all of my theories, step by step, to find the error which falsely claimed Adamant's impenetrability.
lore.metal_trans.name=Metal Transmutation
lore.metal_trans=Using the Philosopher's Stone, it is possible to mass produce the basic metals: Copper, Tin, Iron, and Gold. All four of those metals break down into Quicksilver and one of the 4 strong acids when exposed to the Philosopher's Stone as a catalyst. Combining Quicksilver and one of the 4 strong acids using some Adamant as a catalyst will produce one of the 4 base metals, which can be cooled to solid and pulled out as nuggets, or extracted as molten metal with a Fluid Injector and run through a Fluid Cooling Chamber to produce ingots. Provided Quicksilver and the 4 strong acids have been automated at this point, this allows easily producing massive amounts of the 4 base metals.
lore.early_terra.name=Early Terraforming
lore.early_terra=Phelostogen's effect when released is very powerful, and very dangerous if mismanaged. When released, it expands into the aforementioned cloud of flame (that eventually disappears after reaching a radius based on amount of Phelostogen released, maximum radius ~5 blocks). Everything the flame cloud touches is destroyed, without dropping items. If Phelostogen is released alongside Alchemical Salt it still releases a cloud of flame, but is tempered, preventing it from damaging anything in any manner. If Phelostogen is released alongside Alchemical Salt and 1 or more other chemicals, it will perform the effects of the other chemicals at every point the cloud touches. For example, a mixture of Phelostogen, Alchemical Salt, and Aqua Regia would destroy, and drop as an item, all bedrock in an area around where it was released, alongside damaging mobs.</n>Aether has a transformative effect. When released onto a block, it changes that single block into another. It turns rock type materials into Stone, soil type materials into Dirt and Grass, crystal type materials into Glass, and liquids into Water. It also changes the biome to plains in that one spot. This also works in other dimensions. When released alongside Quicksilver, it instead places Grass.</n>If Aether and Phelostogen were to be released together (with some Alchemical Salt of course) it would apply Aether's transformative effect over a larger area, terraforming the area around where it was released. By adding Quicksilver to the mix, it would also fill empty spaces with Grass.
lore.densus.name=Gravity Plates
lore.densus=Two new materials, Densus and Anti-Densus have very interesting properties. They are both extremely dense, as the name would imply, but Anti-Densus has negative density, a trait inherited from its high Phelostogen content. Negative density is not a property ever found in mundane materials, and it has interesting theoretical ramifications. However, these theoretical ramifications become practical when it can be actually produced and formed into solid plates.</n>Both can be crafted into plates in a Detailed Crafter. Densus Plates are very strong gravity plates that attract any entity in front of them. They do not affect anything behind them. They have a range of 64 blocks, and work through other blocks. The effects of multiple plates stack. Holding shift prevents Density Plates from affecting you.</n>Anti-Density Plates are the same, except they are repulsive instead of attractive.</n>Densus can also be used as an insulator for (redstone) heat cables, and have zero heat loss due to its enourmous density. It also has a very high melting tolerance.
lore.prac_stone.name=The Practitioner's Stone
lore.prac_stone=By careful combination of the three elemental reagents, it is possible to produce a sort of anti-Philosopher's Stone, which I have taken to calling the Practitioner's Stone. A bit of a pun, if you will. While the Philosopher's Stone separates composite materials into the basic elements, the Practitioner's Stone combines the three fundamental reagents into new forms of elemental reagent. These other forms are derivative, and not truly fundamental.</n>The Practitioner's Stone is produced by cooling a mixture of equals parts gold, Aether, Phelostogen, and Adamant with some Aqua Regia as a catalyst. Unlike most reactions, where having the wrong ingredient ratio simply means that there will be some leftover unused reagent, getting the ratio wrong when making a Practitioner's Stone will destroy the glassware it's being made it. While the ratio doesn't have to be exactly right, it must be quite close.</n>Like the Philosopher's Stone, the Practitioner's Stone is strictly a catalyst.</n>The new elemental reagents that can only be produced through a Practitioner's Stone are produced in a special way. Their recipes are not in JEI. Instead, you will need an Alchemy Chart, which is similer to a Color Chart in many ways. If you look in an Alchemy Chart, you will see the three primary elemental reagents in the corners (Phelostogen, Aether, Adamant), connected by arrows to the various newly available elemental reagents. To produce a secondary elemental reagent (shown an octogon in the chart), you need to combine primaries in the right ratio, with a Practitioner's Stone catalyst in a charged environment. If you get the ratio wrong, no reaction will occur at all. You don't need to get the ratio exactly right, but you must be close. The farther away an element is displayed in the chart from a primary, the less of that primary is required. For example, Eldrine is opposite of Aether on the chart, equidistant from Adamant and Phelostogen. Therefore, it is equal parts Phelostogen and Adamant, with no Aether.</n>To produce a tertiary, shown as a diamond in the Alchemy Chart, you need to blend the primaries with one of the secondaries. The secondary you need is shown as connected to the tertiary by an arrow. If at any point you are confused as to which arrow came from where, note that the color of the arrow matches the color of what it came from. Once again, the distance between the tertiary and its ingredients in the chart reveals the ratio, and a Practitioner's stone must be present in a charged environment.</n>An interesting side note, according to my theories, which the recent Bobo incident has, admittedly, recently shaken my confidence in, the existence of the Practitioner's Stone precludes the possibility of multiple universes. The relevant concept being that if there were indeed multiple disparate universes, it would not be possible to force the three elemental reagents together into new varieties, as there would be too much... let's call it loose dimensional entropy... for the three primaries to fundamentally combine for any significant duration.
lore.voltus.name=Voltus
lore.voltus=Voltus, a tertiary elemental reagent, has a lightning effect that shoots damaging electric arcs, similar to those from a Tesla Coil, at any entities nearby where it was released. This can, like all other reagents, be combined with Phelostogen to spread the effect, which can make it act as effective crowd control when thrown. Of course, this would be unethical to use in any form other than defensively.</n>Inserting Voltus into the underside of a charging Atmospheric Attenuator will cause the Voltus to be converted to FE, with a lucrative exchange rate (%1$fFE per Voltus).
lore.gem_trans.name=Gem Transmutation
lore.gem_trans=Combining Fusas with one of the four base metals, along with a Practitioner's Stone catalyst, allows producing Rubies, Emeralds, Diamonds, and Nether Quartz. This could be used for mass production of valuable gemstones.
lore.late_terra.name=Later Terraforming
lore.late_terra.main=Each of the three secondary elemental reagents has a transmutative effect like Aether.</n>Eldrine sets the biome to Hell, turns rock into netherrack, turns soil into soul sand, turns crystalline materials into glowstone, and turns liquids to lava. Adding Quicksilver makes it produce glowstone.</n>Lumen sets the biome to Deep Ocean, turns rock to prismarine, soil to clay, liquid to Distilled Water, and crystals to sea lanterns. Adding Quicksilver makes it produce Distilled Water.</n>Stasisol sets the biome to Ice Plains, turns rock to packed ice, turns soil to snow, turns liquid to ice, and turns crystal to Blocks of Pure Quartz. Adding Quicksilver makes it produce snow.
lore.late_terra.infer=</n>Ignis Infernum has a similar effect as Phelostogen, the only difference being that the radius of Ignis Infernum's flame cloud is dramatically large, able to cover entire small mountains in one go. While this would allow for very large scale transformation of the natural world, great care should be exercised not to release any too close to anything... delicate.






#Technician's Manual

#The Basics
info.first_read=§r§rThere are TWO versions of this guide book. They both contain the same information, and either one should be sufficient. The two versions are the Mysterious Journal and the Technician's Manual. The Mysterious Journal contains lore, and multiple characters. The Technician's Manual is lore free, and only contains information. The two versions can be crafted into one another in the crafting grid. The Technician's Manual is recommended for people who simply want information, the Mysterious Journal is a more interesting (and often humorous) read that still provides information. It should be noted that there is some key information NOT MENTIONED in the Technician's Manual. Specifically, there are several secret features that are hinted at in the Mysterious Journal through one of the characters in the book. There is NO MENTION of these features in the Technician's Manual. The Technician's Manual will often give real life scientific context to concepts used in Crossroads (and note where Crossroads diverges from real life).
info.intro.pre_recipe=§r§rCrossroads is a tech & magic mod. The goal of Crossroads is two fold: to add challenges to automate (useful machines with difficult requirements) and tools to automate with (redstone integration, item routing/sorting, block breaking, etc.). A new copy of the Mysterious Journal can be made like so:
info.intro.post_recipe=§r§rEverything in this mod can be automated with only vanilla and Crossroads. Tech is for early and mid game, and the magic part of the mod is available in the later game. Later on you will be able to choose between three paths, Technomancy, Alchemy, and Witchcraft, at which point you will unlock new features and a new section to the journal. However, Witchcraft and Alchemy are NYI.
info.ores.native_copper=§r§rCrossroads adds 4 different ores. Native Copper is very common, but is only found between y=50 & y=70. When broken, it gives 3 copper nuggets.
info.ores.copper=§r§rNormal Copper ore is also very common, and is only found below y=30. However, you'll need infrastructure to make it into ingots, and until you have the infrastructure the ores are useless.
info.ores.tin=§r§rTin ore is about as rare as gold, and is only found below y=30. It can be smelted into a tin ingot. Mine any that you find.
info.ores.ruby=§r§rRuby ore is very rare, and is only found mixed in with quartz ore in the nether. It's only useful for magic.
info.ores.bronze=§r§rCopper and tin can be made into blocks and nuggets with the normal recipe, and rubies can be made into blocks when crafted in a 2x2. Also, copper and tin can be combined to make bronze.
info.ores.salt=§r§rSalt isn't found naturally, but it is created later on. It can be turned into blocks that fall like sand. The Salt Block kills plants nearby, turning grass into coarse dirt and plants into dead bushes. Creepers are considered a type of plant. Salt also shrivels up slimes into slimeballs, with the number of slimeballs being based on slime size.
info.energy.name=Overview of Energy
info.energy=§r§rBefore you can start using technology, you need to understand the power systems. There are three main ways to transmit energy: Heat, Rotary, and Steam. Energy can be converted between the three forms in certain machines. Heat can be turned to steam with a Boiler, and steam can be turned back to heat with a Radiator, or converted to rotary energy with a Turbine. As you can see, once energy is converted to rotary form, you cannot change it back to heat. How exactly the energy is converted will be covered in later entries. A quick overview of each form of energy is as follows:</n>Heat is simple, inefficient, and expensive to transfer, and is the main form of energy that you will generate.</n>Steam is simple, lossless, and quick to transfer (making it ideal for transferring energy).</n>Rotary is expensive, instant, and complicated to transfer, and depending on how well you design your system could be very lossy or nearly lossless. Rotary is also the main type of energy you will be using for machines.</n>An Omnimeter (om-nee-mee-ter) is a measurement device. Right clicking on a Crossroads device with an Omnimeter will display information about it. It is recommended that you make and use one.
info.heat.name=The Heat System
info.heat.start=§r§rThe most basic form of energy is heat. Note that in this mod, realism was traded away for playability. Heat is transmitted with heat cables. Heat cables average their temperature with that of things around them. There are several types of insulator that can be used for heat cables. 
info.heat.insulator=The insulator determines 3 things: the rate of heat loss, the melting temperature of the cable, and what the cable does when it melts. A loss of 0.2 means the cable temperature changes by 0.2°C towards the ambient temperature each tick. The insulators are Wool, which burns at 300°C, and has a loss of .25, Slime, which turns into a living slime at 500°C, and has a loss of .2, Ice which melts at 0°C, and is at -10°C when first placed, but has the smallest loss of .001. Finally, there is Obsidian, which melts at 2000°C, and has a loss of .015. 
info.heat.insulator_effect_disable=The insulator determines 2 things: the rate of heat loss & melting temperature of the cable. A loss of 0.2 means the cable temperature changes by 0.2°C towards the ambient temperature each tick. The insulators are Wool, which overheats at 300°C, and has a loss of .25, Slime, which overheats at 500°C, and has a loss of .2, Ice overheats at 0°C, and is at -10°C when first placed, but has the smallest loss off .001. Finally, there is Obsidian, which overheats at 2000°C, and has a loss of .015. When a cable overheats it turns to fire. 
info.heat.end=§r§rIt should be noted that ice cables are made with packed ice instead of normal ice. Right clicking any heat cable with an iron ingot, a piece of nether quartz, or a diamond will change the texture of the cable. This change is purely visual and does not consume the item. Right clicking it with a copper ingot changes the texture back.</n>Most machines which use heat will do so at a constant rate as long as they are above a certain temperature, whether they are doing work or not. Most devices which produce heat have constant heat production while running. There are many approaches to regulating temperature so as to not melt heat cable, but a simple early game approach is to design systems that would produce more heat than is being consumed were none of the machines hot enough to use heat, but producing less heat than would be consumed with the machines drawing heat. This would cause the temperature to rise until the system is hot enough for machines to run, at which point it will stay around the correct temperature, but this has some drawbacks that can be corrected with more advanced, later game, systems. 
info.steam.name=The Steam System
info.steam=§r§rSteam is best explained by covering fluids in general. Most machines that need fluid can't have it bucketed in directly, and need you to pipe it in. Fluids obviously flows through pipes. These tubes can handle any fluid, hot or cold, and average out the pressure between themselves and stuff around them. Pressure is the amount of liquid divided by the amount it can store. Most machines can only accept or output fluids though, so pipes will only insert or extract fluid instead of trying to average pressure. Wrenching the connectors on fluid tubes allows setting them to input only, output only, or disconnecting them. When reconnecting two tubes that were disconnected via wrench, use the wrench on the side of the tube originally disconnected facing towards the other tube.</n>There are also Fluid Tanks, which store 20 buckets, which can be bucketed in and out of directly. They average their pressure with tubes, and keep their contents when broken. A tank can be emptied by placing it in the crafting grid. Comparators can measure how full a tank is.</n>Steam is just another fluid, and it's only special because it's great for moving energy. Heat can be converted to steam with boilers (more on that later), and steam can be converted back to heat or rotary energy. Also, it flows pretty quickly with no loss, and the tubes don't melt or anything like that.</n>A Steam Boiler is a bit more complicated than it sounds. Heat goes in the bottom, steam comes out the top, and water goes in the side. The boiler turns water into steam once it hits 110°C. One bucket of steam uses %1$f°C and 1000mB of water to create , and 10 pieces of salt are created. Salt can be pulled out the bottom, and if the boiler gets full of salt it stops working. Because salt needs to be hoppered out the bottom and heat goes in the bottom, you can't automate the boiler YET. When you use steam to make rotary energy or heat, you get distilled water back instead of normal water. Distilled water can also be used to make steam, and if you use distilled water no salt is created, making the boiler automatable. Also, the boiler only has to be heated to 100°C, and only uses %2$f°C per bucket, which is how much heat you can get out of a bucket of steam.
info.rotary.name=The Rotary System
info.rotary=§r§rThe most complicated energy system in rotary. Rotary energy is carried by gears and axles. There are small gears which take up a single blockspace and large gears which take up a 3x3 area. 6 small gears can fit in one blockspace, one on each side. Small gears require something solid to attach to. They can connect around corners and to adjacent gears. They can also connect axially to what they are attached to. Large gears do not need a solid support, and only 1 can fit into a blockspace. They connect in the same way small gears do. Axles connect two things together axially, for example connecting a small gear on one end to a large gear, a machine, or another axle on the other end. Every system of rotary power needs 1 Master Axis. Make sure each system has at least one gear attached to the front of a Master Axis. Additional Master Axes have no effect. There are special Master Axis variants later on. Most (but not all) rotary machines have an internal gear that must be connected to axially.</n>Each part of a rotary network (except the Master Axis), has a value for "I". I is the rotary equivalent of mass. Larger or denser gears tend to have higher I values. The following formulas use radians (θ), a measure of angle like degrees. There are 2π radians in a circle. ω, the speed of a gear, is in radians per second. The energy of a gear, E, is E=Iω²/2. Each tick, all the energy in a network is redistributed. If you create a gear network where a gear would have 2 (or more) different R values at once (be it by a direction conflict or some bad design with axles) nothing can spin and all energy is instantly lost, as would be expected. There is also energy loss over time for all gear networks. (Note from the mod author: The Crossroads loss equations are nothing like real world loss, which are substantially more complicated.) Each tick, every gear loses a certain %% of its energy. The percentage lost increases with speed.</n>The Hand Crank allows you to add energy to a gear with a right click. Right clicking adds energy counter-clockwise, shift right clicking clockwise. Holding down the button is best. It is not very effective, so it is recommended to switch to automation as soon as possible.
info.copper=§r§rIn order that the instructions on processing copper properly are not spread thinly throughout various entries, in this entry I will explain the basics of copper processing. I will also include an example setup, which while certainly not the best, will work. Native copper ore is found commonly near the surface, and drops 3 copper nuggets when mined. Normal copper ore is also very common, and is only found deeper down. Because you will need a lot of copper, it is imperative that you learn to process normal copper ore. It cannot be smelted in a normal furnace. The ore must be melted down in a Heating Crucible into molten copper. Then, molten copper must be run through a Fluid Cooling Chamber to cool it into ingots. When all's said and done, one copper ore will be enough for one copper ingot. However, you can run copper ore through a Grindstone first to turn it into 2 copper dust (and a piece of sand). Each copper dust gives a full ingot worth of molten metal. An example setup would be to have a Steam Boiler heated by an Insulated Heat Exchanger (placed directly below it). The Steam Boiler produces steam, which powers a Steam Turbine making rotary energy. The Steam Turbine creates steam and distilled water, with the distilled water going back to the Steam Boiler and the excess steam being fed back into the Steam Turbine. The Insulated Heat Exchanger is heated via flowing lava underneath, which turns to cobblestone when heat is produced. The cobblestone is broken by a Rotary Drill powered by the Steam Turbine, making room for more lava to flow. The Steam Turbine also powers a Grindstone producing copper dust and sand, and Sorting Hoppers are used to separate out the sand. The copper dust goes into a Heating Crucible, which melts it down into molten copper. The Heating Crucible is heated by the Insulated Heat Exchanger mentioned earlier through obsidian 绝热热导管s, but so that the cables don't overheat, they also go past the Heating Crucible into a normal Heat Exchanger to dump heat. The molten copper goes into a Fluid Cooling Chamber, where it is turned into ingots. The Fluid Cooling Chamber dumps heat through a cable into a normal Heat Exchanger. Included is a picture of such a setup.
info.intro_path=Introduction to Paths
info.intro_path.start=§r§rBefore you read this section, you should have advanced well into magic. There are 3 directions you can go: Technomancy, Alchemy, and Witchcraft. (Witchcraft is NYI, so only 2 way you can go currently). In order to go down a path, you need to unlock it. This will unlock a new section to the journal, and the recipes for the new items.
info.intro_path.locked=However, the current configuration settings mean you can only go down one path, which will lock you out of the other two. 
info.intro_path.continue=In order to unlock a path and then craft the relevant items, you need to make a Detailed Crafter. It functions like a normal crafting table, except that it can unlock the paths and craft items from them. To unlock Technomancy, discover the TIME element. Then place a bronze gear in each of the 9 slots of any Detailed Crafter (consuming the gears). To unlock Alchemy, discover all elements other than TIME and VOID (which are optional). Then place an empty bottle in each of the 9 slots of any Detailed Crafter (consuming the bottles). A brief overview of each of the 3 paths is as follows: Technomancy is the hardest path, balanced around the ability to come up with convoluted designs. The simplest task in Technomancy is more complicated than some of the most complicated you have faced so far. However, it provides the tools and devices to make automation a lot easier, and will allow you to greatly improve previous setups. It is also the most powerful, themed around the manipulation of time. Alchemy is themed around the manipulation of reality. Alchemy allows the changing of the world in huge areas at a time, and the creation of materials with esoteric properties, allowing interesting effects such as anti-gravity. Witchcraft (NYI) will be themed around the manipulation of void. None of the three paths will have overlapping content, so while in theory Technomancy is the most powerful and Alchemy the second most powerful, each path will have unique things only that path can do. There is a cheaper recipe for the Detailed Crafter once any path has been unlocked.

#Heat Machines
info.fuel_heater=Fuel Heater
info.fuel_heater.text=§r§rThe simplest way to produce heat is with a Fuel Heater. It burns any furnace fuel with the same duration as a furnace would, producing 1°C/t while doing so. There is a heat connection on the top which can transport heat to something directly above it without a cable, or a heat cable can be connected to the top. 
info.heating_chamber=Heating Chamber
info.heating_chamber.text=§r§rThe Heating Chamber is a heat powered furnace, which is faster than a regular furnace. While above 200°C it consumes -2°C/t, and while work towards cooking an item. It takes 50 ticks of being above 200°C (which do not need to be consecutive) to cook one item. 
info.heat_exchanger=Heat Exchanger
info.heat_exchanger.text=§r§rThe Heat Exchanger serves 2 purposes: to act as a heat sync and to provide a way of generating heat (or decreasing temperature below ambient). The Heat Exchanger has a heat loss of 10°C/t. Also, a Heat Exchanger can perform certain "recipes" with blocks directly below it, with some conversions producing heat while the Heat Exchanger is below a certain temperature, and others consuming heat while the Heat Exchanger is above a certain temperature. The purpose of these "recipes" isn't the blocks created, but the temperature change. The temperature change is not immediate, but is applied over time at 25°C/t until the full temperature change has been applied. This means that a Heat Exchanged, kept supplied with certain blocks directly below it, is a constant 25°C/t source or cooler. The conversions are lava -> cobblestone producing 1000°C when below 3000°C (the lava does not need to be a source block); fire -> air producing 300°C when below 2000°C; magma block -> netherrack producing 500°C when below 2000°C; snow block -> water cooling by 50°C when above -20°C; ice -> water cooling by 70°C when above -50°C; packed ice -> water cooling by 140°C when above -100°C. There is also an Insulated Heat Exchanged, which functions indentically to a normal Heat Exchanger except it does not have a passive heat loss of 10°C/t (making it ideal for doing conversions but useless as a heat sync). 
info.heating_crucible=Heating Crucible
info.heating_crucible.text=§r§rA Heating Crucible can do two things. It can either heat cobblestone into lava or ground copper into molten copper when heated above 1000°C. Insert items through a hopper or other automated method into the top. Pipe the fluid out the sides. Heat it through the bottom. It consumes a constant 10°C/t while above 1000°C whether running or not. While it can run at any temperature above 1000°C, it is 5 times as fast at 1500°C and above. Every operation creates 200mB of lava or 144mB of molten copper.
info.fluid_cooling=Fluid Cooling Chamber
info.fluid_cooling.text=§r§rThe Fluid Cooling Chamber is the counterpart to the Heating Crucible in that it can cool liquids to produce items. Extract items out the bottom, put fluid in the side, and connect heat cables to the top. When the Fluid Cooling Chamber cools a liquid it creates heat, and if the machine gets above a certain temperature it stops working. It can turn a bucket of lava into obsidian when below 1000°C, adding 500°C per craft, it can turn 144mB of molten copper into a copper ingot when below 1000°C, adding 100°C per craft, it can turn water into ice when below -10°C, adding 1°C per craft, and it can turn distilled water into packed ice when below -20°C, adding 2°C per craft. 
info.redstone_cable=Redstone Heat Cable
info.redstone_cable.text=§r§rRedstone Heat Cables allow redstone interaction with heat. They are made by surrounding any heat cable with 8 redstone in the crafting grid. A Redstone Heat Cable functions like a normal heat cable, except it only connects to other heat cables or machines while it has a redstone signal. A comparator can also be used with a Redstone Heat Cable to measure the temperature. The equation for converting °C to redstone strength is as follows: redstone = 15 * (273 + °C) / (273 + insulator melting point). This equation rounds down. Therefore, this will never reach 15 because at that point the cable melts. 
info.salt_reactor=Salt Reactor
info.salt_reactor.text=§r§rA Salt Reactor decreases its temperature with salt and distilled water. With a piece of salt and 200mB of distilled water, the Salt Reactor decreases its temperature by 5°C and creates 200mB of normal water. It can cool by up to 5°C/t. Distilled water is inserted in the top, water comes out of side, and salt can be inserted any side. Such a device would work in real life to a lesser extent, as it would be far less effective at cooling, and would be unable to go below the freezing point of water.

#Rotary Machines
info.grindstone.pre_recipe=§r§rThe Grindstone is the first rotary powered machine you should create. Make one like so:
info.grindstone.post_recipe=§r§rThe Grindstone has an internal gear with I=1. It uses all energy from the internal gear each tick while running, so it runs faster at higher speeds (more energy in the gear each tick). Gears can be connected to it from the top. It uses 100 energy total to grind up an item. Items can be inserted into any side other than the bottom. Early on, a Hand Crank is sufficient to run a Grindstone, albeit slowly. The recipes that the Grindstone can do are as follows: Copper Ore -> 2 Copper Dust + 1 Sand, Gravel -> 1 Flint, Bone -> 5 Bone Meal, Coal Block -> 1 Gunpowder, Nether Wart Block -> 9 Netherwart, Wheat -> 3 Seeds, Pumpkin -> 8 Pumpkin Seeds, Melon (slice) -> 3 Melon Seeds, Redstone Block -> 9 Redstone Dust, Cobblestone -> 1 Sand, Stone -> 1 Gravel. Note that the only ore that the Grindstone works on is copper.
info.item_chute.pre_recipe=§r§rItem Chutes simplify transferring items vertically at the cost of rotary power. There are two parts to a chute: the Item Chute itself and the Item Ports. They are made like so:
info.item_chute.post_recipe=§r§rTo use Item Chutes, place down a Chute Port where you want to insert items into the chute automatically. Insert items into the large hole in the port. Put a column of normal Item Chutes from the bottom port up to one block below where you want to get the items out. Put a second Chute Port on top of the pillar of Item Chutes. Items will be dropped out of the large hole in the top Item Port. Provide the bottom Item Port energy with a gear attached to the small axle hole in the side. Only the bottom Item Port needs power. The Chute has an internal gear of I=8, and uses .5 energy per item transfered. If there is an inventory in the blockspace the top Item Chute Port points into, items will be inserted into the inventory instead, and will stop outputting items once it fills up. 
info.drill.pre_recipe=§r§rA Rotary Drill is a block that, when placed down and provided with rotary power, will break blocks and damage mobs in front of it. Make two like so:
info.drill.post_recipe=§r§rThe Rotary Drill draws .5 energy from an internal gear every tick, whether it is doing work or not. The internal gear has an I=50. The Rotary Drill doesn't use any extra power when doing work. For breaking blocks, it requires a speed of at least .1 times the hardness of the block. For example, cobblestone has a hardness of 3, so a speed of .3 is required. Obsidian on the other hand has a hardness of 50, so to break obsidian the drill has a minimum speed of 5. When damaging mobs, there is no minimum speed, but more speed means more damage. It deals (10 * speed) damage, so a speed of 5 deals 50 damage. It deals damage or breaks blocks every half-second. 
info.toggle_gear.pre_recipe=§r§rThe Toggle Gear allows you to connect and disconnect it from other gears with redstone. They are available for all gear materials, and are made like so:
info.toggle_gear.post_recipe=§r§rThey will only connect while they have a redstone signal, so they can be used to split a gear system into two parts (though for both parts to function, both sides need a Master Axis) or to disconnect a machine. Only one can be fit into a blockspace, and it can only be placed on the ground, not walls or ceilings. It doesn't need to be on a solid block, however. A comparator can also be used to measure the energy of a Toggle Gear. The equation for signal strength is (signal = 15 * speed^2 / 2) rounded down, and limited at 15. A Ratiator (part of the magic system) uses the formula (signal = |speed|/2). Even if a Toggle Gear does not have a redstone signal, it can still interact with Axles or an attached Master Axis.

#Fluid Machines
info.rotary_pump=§r§rThe Rotary Pump draws liquids from the world into pipes. It has an internal gear of I=8. Using 50 energy from the internal gear, it will draw a fluid source below it into itself, and the fluid can be piped out the sides. It can only run if it is spinning clockwise. Due to it only draining from source block directly under it, it is most likely only useful for water.
info.steam_turbine=§r§rInstead of using rotary energy to pump fluids, a Steam Turbine creates rotary energy when steam moves through it. When steam is inserted into the bottom, it is converted to distilled water and rotary energy. If the distilled water tank fills up, the Steam Turbine stops working. The distilled water comes out the sides. Rotary energy is output to a gear on top of the Steam Turbine. One bucket of steam, fully processed into rotary energy, produces %1$f units of energy.
info.radiator=§r§rA Radiator converts steam into heat. Insert steam through the bottom and it will be fully converted to distilled water and heat. One bucket of steam produces %1$f°C of heat. Distilled water comes out the top and heat cables can be connected to the sides.
info.liquid_fat=§r§rFood can be liquefied to increase convenience and efficiency. The first part is making food into liquid fat with a Fat Collector. When given heat from the bottom and food is inserted into the top, it produces liquid fat, which can be piped out the side. The conversion rate of food value (saturation + hunger) to liquid fat is 1 value = %1$dmB of liquid fat. However, the exact temperature of the Fat Collector matters. Below 100°C it does nothing, above 200°C it burns up all fat produced, between 140°C and 160°C is optimal, producing 1.2 times as much liquid fat from food as the normal conversion. From 100°C to 140°C and from 160°C to 200°C it is less efficient, producing .8 as much fat from food as the normal conversion. The Fat Collector uses .8°C per value of the food it converts to liquid fat. Once you get some of this liquid fat, there is another machine that turns it into food that has controllable saturation and hunger. The Fat Congealer uses rotary energy from a gear on top of it, and uses liquid fat piped in the side. The exact speed and energy of the gear matters for this machine, as they control the hunger and saturation of the food created. The value of the food created will be equal to (gear energy / 10). The saturation of the food will be equal to the (value * speed / 2). The hunger restored is of course (value - saturation). The hunger and saturation of the food produced is capped at 20. The machine uses 1 energy per food produced. The food produced is dropped as an item from the bottom of the machine. You can use a hopper to catch it. The Fat Congealer uses an amount of liquid fat based on the value of the food and the conversion ratio mentioned earlier. An example of the math on the Fat Congealer is that a gear on top of it with an energy of 80 and a speed of 1 would produce food with a hunger and saturation value of 4, and would use 800mb of liquid fat.
info.fat_feeder=§r§rThe Fat Feeder uses liquid fat to feed players within a certain range. In order to operate, there needs to be a gear (or Axle) on both the top and bottom of the Fat Feeder. Both gears need a non-zero speed. The radius of the Fat Feeder's operation is equal to ((top gear speed) / (bottom gear speed)), rounded down. The direction of the two gears does not matter. The Fat Feeder consumes liquid fat (inserted via the sides) to refill the hunger and saturation of players within range. As with other machines, %1$dmB of fat equals 1 value. For every value that the Fat Feeder feeds to nearby players, 1 energy will be moved from the top gear to the bottom gear, always in the direction to decrease the top gear's speed and increase the bottom gear's speed. While there are many ways to automate this machine, one decent way is to use Axles. Of course that is just a suggestion.
info.redstone_tube=§r§rThe Redstone Fluid Tube only allows fluid to flow through it when it has a redstone signal.
info.fluid_splitter.name=Fluid Splitter
info.fluid_splitter=§r§rThere are two variants of Fluid Splitter: The Basic Fluid Splitter and Redstone Fluid Splitter. Both accept fluid from the sides & output it to the top and bottom. The Basic Fluid Splitter will output 1/2 of the inserted fluids to the top and 1/2 to the bottom. The Redstone Fluid Splitter splits fluids based on a redstone signal. (Signal Strength)/15 of the fluid goes to the bottom, and the rest goes out the top. A rule of thumb to remember which way redstone redirects fluid is that if you were to place a lever on a Redstone Fluid Splitter, the fluid would exit in the direction the lever points. 
info.water_centrifuge=§r§rThe Water Centrifuge is an automatable way to produce salt and distilled water. It has 4 fluid ports, one on each side. The red ports output distilled water, and the orange ports accept water. Salt can be removed from the bottom. A gear needs to be on top of it. The Water Centrifuge itself takes no energy to run, however it still has requirements. The gear on top needs to reach .5 speed for the machine to produce one batch of salt and distilled water. For the next batch, the speed needs to be .5 in the opposite direction. Basically, the direction of the gear on top needs to keep reversing, and each time it needs to reach a speed of at least .5. One batch uses 100mB of water, and produces 100mB of distilled water and one unit of salt.

#Miscellanous
info.brazier.name=Brazier
info.brazier.normal=§r§rWith a Brazier, many different things can be done. An item can be added or removed with a right click, or automation. Adding some water with a bucket makes it safe to land on the Brazier from a high height, and makes it extinguish you if you stand on it. Adding lava instead makes it set things on it on fire, so it can be used as a trash can for items that won't set the area on fire. A coal block makes it burn, letting off light. It doesn't use up the coal. Similarly, a glowstone block also makes it glow at light level 15. More interesting than the other effects though is that if you put a block of salt in it, it prevents the spawning of witches in a large area. It has a radius of %1$f blocks.
info.brazier.no_witch=§r§rWith a Brazier, many different things can be done. An item can be added or removed with a right click, or automation. Adding some water with a bucket makes it safe to land on the Brazier from a high height, and makes it extinguish you if you stand on it. Adding lava instead makes it set things on it on fire, so it can be used as a trash can for items that won't set the area on fire. A coal block makes it burn, letting off light. It doesn't use up the coal. Similarly, a glowstone block also makes it glow at light level 15.
info.item_sorting.name=Sorting Devices
info.item_sorting=§r§rThis section will cover two devices: the Sorting Hopper and the Slotted Chest. On their own, neither of these things are so incredible, but when combined they are very convenient. The Sorting Hopper functions almost identically to a normal hopper but for a subtle difference that has huge ramifications. While a normal hopper processes extracting items after inserting them, the Sorting Hopper processes extracting items before inserting them. The reason this is important is that if you make a pillar of sorting hoppers, with them all facing sideways into inventories, then items go into the top inventory first, then the second inventory, and so on. This does not occur with normal hoppers. This means you can filter items. If the top inventory can only accept sand and the middle one accepts only dirt and the bottom one takes anything, then putting dirt, sand, and gravel into the top hopper will result in all the sand going into the top inventory, all the dirt going into the middle inventory, and all the gravel going into the bottom inventory.</n>The Slotted Chest is a chest the size of a double chest, and it has a very interesting quirk. When removing an item from a slot, it leaves a ghost item behind. You can shift click into the Slotted Chest, but only if the slot the items are going to already has the matching item. To clear a ghost item, shift click it with an empty cursor. Also, automation will respect the ghost items, will only be able to insert into a slot if it already has a match and when extracting items it always leaves a ghost item behind. This allows you to format your storage chests without fear of shift clicks or automation messing it up.
info.wrench.name=Wrench
info.wrench=Like many other tech mods, Crossroads supports using a wrench. Wrenches can be used to rotate many Crossroads blocks. This mod adds a wrench, but any standard wrench will work.
info.ob_cutting.name=Obsidian Cutting Kit
info.ob_cutting=§r§rObsidian Cutting Kits are a utility for collecting obsidian quickly. Simply right click one on some obsidian to insta-mine the obsidian and destroy the Obsidian Cutting Kit.
info.decorative.name=Candle Lilypad
info.decorative=§r§rA Candle Lilypad is a decorative block that functions as a lilypad while emitting the same amount of light as a torch (14).
info.fertile_soil.name=Fertile Soil
info.fertile_soil=§r§rFertile Soil is an aid to farming. It has 10 variants, for wheat, carrots, potatoes, beetroot, and the 6 saplings. Crops can be planted on Fertile Soil like it was farmland, and they grow as if on hydrated farm land even without water. They also cannot be trampled. The main feature of Fertile Soil is that at random intervals, if there is nothing growing on top of it, it plants the crop corresponding to its type on itself for free. Therefore, you no longer need to replant.
info.item_chute.name=Item Chute
info.item_chute.start=§r§rItem Chutes simplify transferring items vertically. There are two parts to a chute: the Item Chute itself and the Item Ports.
info.item_chute.default=§r§rIf there is an inventory in the blockspace the top Item Chute Port points into, items will be inserted into the inventory instead, and will stop outputting items once it fills up.
info.item_chute.cr=§r§rA rotary connection goes on the side of the lower Item Chute Port with a small axle-hole. The Item Chute Port requires a small amount of rotary energy for each item elevated. If there is an inventory in the blockspace the top Item Chute Port points into, items will be inserted into the inventory instead, and will stop outputting items once it fills up.
info.multi_piston=§r§rThe Multi-Piston works like a normal piston, but for a few differences. The biggest difference is that instead of extending 1 block, it extends the number of blocks equal to the strength of the redstone signal it is receiving (up to 15 blocks). It also can push up to 64 blocks at a time instead of 12, and it extends and retracts instantly. When pushing entities with slime blocks, pushing farther at once multiplies the effect. The Multi-Piston also doesn't have quasi-connectivity. To make up for this, the Multi-Piston can have redstone placed on top of it directly. The Multi-Piston has a normal and sticky variant. There is also a simpler recipe for normal pistons that is shapeless.
info.ratiator=§r§rThe Ratiator (pronounced ray-shee-ate-er) is a more advanced comparator. Note that it requires materials from the magic system. Instead of comparing two values or subtracting them, it multiplies and divides. Its two modes (changed with a right click) are multiplication and division. The symbol on the plate changes based on the mode. It multiplies (or divides) the value at the back by the largest input of its two sides. Notably, it can work with decimals or values greater than 15. The moment it outputs to redstone, however, it rounds down to an integer and caps it at 15. To take advantage of the ability to use other values, Ratiators can take input from another Ratiator directly, avoiding capping and rounding. It can measure things behind it like a comparator. Most comparator-readable things in Crossroads will be able to output decimals and numbers greater than 15 to a Ratiator, and some use different formulas for signal strength with Ratiators (In which case, the relevant entry will specify the other formula.). Shift right clicking a Ratiator with an Omnimeter displays the output.
info.port_extender.name=Port Extender
info.port_extender=A Port Extender enables attaching more item inputs/outputs to one block. By attaching it to a block such as a chest, and orientating the Port Extender so the gray square on the front is going into the block, anything attached to the Port Extender will act as if it is connected to the block itself. Devices going into a Port Extender mimic attaching to the same side of the original block as they face into on the Port Extender, so if a hopper points into the top of a Port Extender pointed into a furnace, the hopper can insert items into the top of the Furnace. Note that this connection is one-way, that Port Extenders cannot be chained, and that this only works for item transfer, not any other type of connection (such as fluid).
info.redstone_keyboard.name=Redstone Keyboard
info.redstone_keyboard=The Redstone Keyboard is a convenient way of having constant redstone signals of a specific strength. Right clicking one will open a GUI where a number can be set. There are various convenient buttons in the interface. The π button sets the value to pi, the e button sets the value to Euler's number, the C button clears the setting, the x button is for multiplication, and entering a value while it is pressed then unpressing x will multiply the original value by the new value. The / button does the same, but for division. When measured by Ratiator, it emits a signal of the strength set in the GUI. It can also be measured by Comparator, in which case it rounds the contained value and caps it at 15. It can not be set to negative numbers.
info.crafttweaker.name=CraftTweaker Integration
info.crafttweaker=There are currently 7 recipe types with CraftTweaker support: Arcane Extractor, Heat Exchangers, Fluid Cooling Chambers, Fusion Beams, Grindstones, the Detailed Crafter, and Heating Crucibles. All forms of integration will overwrite pre-existing recipes with the same input when using Add.</n>The Arcane Extractor integration is at "mods.crossroads.ArcaneExtractor". addRecipe takes an IItemStack and four integers, these being input followed by produced energy, potential, stability, and void in that order. removeRecipe only takes an IItemStack. Both ignore metadata, and cannot use oredict.</n>The Heat Exchanger is at "mods.crossroads.EnvHeatSource". addRecipe takes 2 IBlocks followed by 2 doubles, which are input, output, heat change, and temperature limit in that order. If heat change is negative, temperature limit is a lower bound instead of an upper bound. removeRecipe only takes an IBlock input. Both ignore block metadata and do not accept oredict. If either the input or output blocks do not have an item form (ex. most liquids, fire, etc.) then using IBlocks WILL NOT WORK! Instead, you need to use the methods at "mods.crossroads.AdvEnvHeatSource", which take IBlockStates instead of IBlocks. IBlockStates are specified like this: <block:minecraft:fire>, instead of <minecraft:fire>. Using IBlockStates requires that ContentTweaker (an official CraftTweaker addon) be installed.</n>The Fluid Cooling Chamber is at "mods.crossroads.FluidCoolingChamber". addRecipe takes IItemStack output, ILiquidStack input, double maxTemp, double heatAdded in that order. removeRecipe only takes an ILiquidStack input.</n>The Fusion Beam is at "mods.crossroads.FusionBeam". addRecipe takes IItemStack input, int minPower, IItemStack output, boolean voi. While the inputs and outputs are IItemStacks, they are interpreted as the equivelent blocks, with metadata equal to stack meta. voi controls whether it must be a VOID-FUSION beam. removeRecipe takes IItemStack input, boolean voi.  If either input block does not have an item form (ex. most liquids, fire, etc.) then using IItemStacks WILL NOT WORK! Instead, you need to use the methods at "mods.crossroads.AdvFusionBeam", which take IBlockStates instead of IItemStacks. IBlockStates are specified like this: <block:minecraft:fire>, instead of <minecraft:fire>. Note that when using the IBlockState form of addRecipe/removeRecipe, there is a boolean parameter after the input IBlockState for whether metadata is ignored. Using IBlockStates requires that ContentTweaker (an official CraftTweaker addon) be installed./n>The Grindstone is at "mods.crossroads.Grindstone". addRecipe takes IItemStack/IOreDictEntry input, IIngredient output1, @Optional IIngredient output2, @Optional IIngredient output3. removeRecipe takes IItemStack/IOreDict input. Be careful when removing/overwriting recipes to match whether the original recipe used an ItemStack or an OreDict.</n>The Heating Crucible is at "mods.crossroads.HeatingCrucible". All Heating Crucible recipes activate at 1000°C, which cannot be changed. addRecipe takes IItemStack/IOreDict input, ILiquidStack out, String texture. The texture String should map to a block texture which will be used to display on the crucible when filled with the input for this recipe. removeRecipe takes IItemStack/IOreDict input. Once again, be careful when removing/overwriting recipes to match oreDict/ItemStack with the original recipe.</n>The Detailed Crafter integration can currently only remove recipes, it can not add them. Adding recipes to the Detailed Crafter via Crafttweaker will not be added in MC1.12, but will be in MC1.13+. The Detailed Crafter integration is at mods.crossroads.DetailedCrafter. There are two methods: removeTechnoRecipe and removeAlcRecipe. Both take an IItemStack, and remove all Detailed Crafter recipes that make the passed IItemStack. removeTechnoRecipe only removes Technomancy recipes, while removeAlcRecipe only removes Alchemy recipes.

#Magic Machines
info.basic_magic=§r§rYou should have a decent amount of infrastructure before preceding. This section is just about the concepts, how magic is made and managed will be covered separately. In the magic system, there are 4 basic elements. Each of the elements is assigned to a different color: Energy is red, Potential is green, Stability is blue, and Void is black. Void is a more advanced topic that will be covered separately. Magic is measured in discrete units. Specifically 4 whole numbers, each number refering to a different element. The power of a beam is the sum of those 4 numbers. The interesting thing about elements is what happens when you mix them. A beam could be 3 parts energy and 3 parts potential, which would make a yellow beam. The entire RGB chart is possible. Beams are assigned an element based on the color. There are a lot of elements, and you will have to discover most of them yourself (See entry on Discovering Elements). Magic travels in beams, analogous to beams of light. The thickness of the beam is proportional to the square root of the power, but if the power is >=64, it is very thin (The thickness is just visual). If a beam collides with any block that isn't specially designed to handle magic (even glass or a torch), or it goes 16 blocks without hitting something, then it does an effect at the end of the beam. The effect done is based on the element. The effects of all discovered elements are in the entry called Magical Elements. Many effects, but not all, are made stronger the more total magic is in the beam, but stop becoming more powerful above power = 64. The main use for magic are the effects of different elements. Most of the magic related machines will need a crafting ingredient called Pure Quartz. The other crystals of interest are rubies, for interacting with energy, emeralds, for interacting with potential, and diamonds, for interacting with stability. Another crafting ingredient are Lens Arrays, which are very expensive and should be used sparingly. Most magical devices add a 5 tick delay to any beams passing through them before emitting the beams again. This includes things like Arcane Reflectors and Beam Splitters.
info.elements.name=Magical Elements
info.elements.preamble=Information about the various elements will be added to this entry as you discover them. To add an element to this entry, discover it then close and re-open this entry.
info.elements.charge=CHARGE: Turns any rock materials into redstone blocks. If power is >= to 8, creates lightning wherever it hits. In a Crystalline Master Axis it adds 10 energy/tick in the + direction.
info.elements.enchantment=ENCHANTMENT: Enchants nearby items on the ground randomly. Higher power beams increase enchanting level. Can create treasure enchants when power >= 32. 
info.elements.energy=ENERGY: Adds (power)°C/5 ticks to whatever heat devices it hits. In a Crystalline Master Axis it adds 10 energy/tick in the direction gears are currently spinning. 
info.elements.equalibrium=EQUALIBRIUM: Prevents any explosions around it while the beam is maintained, with higher powers increasing radius of effect. In a Crystalline Master Axis it reduces the change in energy each tick by 75%%.
info.elements.expansion=EXPANSION: Places items within a range of (power) as blocks. 
info.elements.fusion=FUSION: Turns Sand -> Pure Quartz Block when power >= 16, Water -> Ice, Snow -> Ice, Distilled Water -> Packed Ice when power >= 4, Netherrack -> Nether Brick when power >= 8, Gravel -> Prismarine when power >= 8, Prismarine -> Prismarine Bricks when power >= 12, Prismarine Bricks -> Dark Prismarine when power >= 16, Cobblestone -> Stone, Stone -> Stone Bricks. 
info.elements.light=LIGHT: Converts rock materials into glowstone, and glass materials into sea lanterns. 
info.elements.no_match=NO_MATCH: This element should not be obtainable. Report to mod author. 
info.elements.potential=POTENTIAL: Grows crops faster based on power. Heals mobs within a radius of √power by power/2.
info.elements.rift=RIFT: Spawns hostile mobs with a power/64 chance (Up to a mob limit of #of players * 3 * mob limit total). Converts purpur blocks to shulkers, skeleton skulls to wither skeleton skulls, and stone to silverfish stone. 
info.elements.stability=STABILITY: Does nothing on its own. In a Crystalline Master Axis it prevents power loss. 
info.elements.time=TIME: Speeds up tile entities and random block updates based on power. EXTREMELY DANGEROUS IF MIXED WITH VOID! (Don't say you weren't warned).
info.elements.time.dis=TIME: This has been disabled via config. EXTREMELY DANGEROUS IF MIXED WITH VOID! (Don't say you weren't warned).
info.elements.void=VOID: Destroys any block it touches. 
info.color_chart=§r§rThe main use for magic are the effects of the different elements. You will have to discover the color of the different elements yourself for the most part, but there are several things that can help you. First of all, using an Omnimeter on any block that emits beams will tell you the color and elemental makeup of the last beam that block fired. If the element is one you haven't scanned this way before, you will 'Discover' that element. That is useful for the Color Chart. The Color Chart has an informative GUI. The GUI is a color chart, and mousing over a point on the color chart tells you the RGB value of that point and the element of that point, IF you have already discovered that element with an Omnimeter. Any spots on the chart that are in black and white has an element you haven't discovered yet on it, so you should try to create a beam of that color and discover it.
info.arcane_extractor=§r§rThe Arcane Extractor is the crudest way to obtain magic. It has a front which can only be on the horizontal plane, and items can be inserted into any side with a hopper. The extractor destroys any item inserted almost instantly (1 item every 5 ticks), and produces a beam out the front side based on the item used. Most items don't make any beam, and just get consumed. The beam exists for 5 ticks, then vanishes. Feeding it items with a hopper would make a pulsating beam as the hopper cannot feed it fast enough. The items it can use are redstone dust to produce a beam with 24 energy and 36 potential, glowstone dust to produce a beam with 1 energy, 1 potential, and 1 stability, salt to produce a beam with 24 potential and 36 stability, and coal (OR charcoal) to produce a beam with 36 energy and 24 potential.
info.quartz_stabilizer=§r§rThe Quartz Stabilizer turns beam pulses into constant beams. There are two varieties, the small and the large. The Small Stabilizer needs a lens array, making it quite expensive. With Luminescent Quartz, which will be covered later, Stabilizers can be made much more cheaply. Quartz Stabilizers can face any direction when placed, and when it receives a beam from any direction other than the front it stores the magic of the beam. The Quartz Stabilizer will emit a constant beam out the front, draining the stored magic to do so. The Quartz Stabilizer has a capacity of 30 magic for the small version and 150 magic for the large one. Please note that is 30 units of magic (energy + potential + stability + void) not 30 beams. Any excess magic is lost. The emitted beam has 6 magic for the small version and 15 magic for the large version, and has the same color as the stored magic. The problem is that due to magic being measured in whole numbers and there is a limit on the output of the stabilizer, the outputted color might not exactly match the stored color. Therefore, the stabilizer is most reliable for beams that only contain one basic element, not a blended color. There is no way to make a Quartz Stabilizer hold onto its stored magic without emitting it, so it can't be used for long term magic storage on its own.
info.lens_holder=§r§rThe Lens Holder is an important tool for manipulating beams. The Lens Holder can hold certain gemstones that can be inserted/removed either with automation or a right click. The Lens Holder can hold either a diamond, ruby, emerald, or pure quartz. It can also hold a Void Crystal, but that is a more advanced topic (See the entry on Void). When a beam passes through a Lens Holder with a gem in it, the Lens Holder acts as a filter, with the magic that isn't allowed to pass through simply being lost. A diamond allows stability, a ruby energy, and an emerald potential. Pure quartz does not act as a filter, and allows any element to pass through. A word of warning, none of the gemstones can block void and if a beam passes through the Lens Holder with any void in it, the lens will be destroyed. If a beam of the LIGHT element passes through and the Lens Holder has pure quartz in it, the pure quartz turns into luminescent quartz, which is a crafting ingredient. The light element is the white color, and any color relatively close to white. The Lens Holder also interacts with comparators, emitting a signal based on the power of the beam it is outputting. The equation is redstone = (power / 3) rounded down.  A Ratiator (part of the magic system) uses the formula (signal = power). The Lens Holder is one of the few devices that does NOT add a 5 ticks delay to beams that pass through it.
info.arcane_reflector=§r§rAn Arcane Reflector is one of the basic tools for manipulating beams. It can face any direction, and when given a beam in a side that isn't the front it outputs the beam through the front. It can also blend beams by putting multiple beams into it at once. It does add a 5 tick delay, like most other magic machines.
info.beam_splitter=§r§rThe Beam Splitter takes any beam and splits it into 2 beams. Beams go in the sides, and come out the top and bottom. The two outward beams aren't the same size, but they are the same color as the input (with a margin of error, dividing whole numbers again, but no magic is lost in the end). There are two versions of the Beam Splitter, the Basic Beam Splitter and the Redstone Beam Splitter. With the Basic Beam Splitter, the two output beams are the same power. The distribution of magic between the top and bottom beams with a Redstone Beam Splitter depends on the incoming redstone signal strength. The bottom beam has (redstone strength) / 15 of the magic, and the top gets the rest.
info.crystalline_prism=§r§rThe Crystalline Prism has a front that can only be placed on the horizontal plane, and is another version of the Beam Splitter. Instead of making two beams of identical colors, it takes a beam in the back, top, and/or bottom and outputs up to three beams made from the input beam. A pure energy beam from the left of the front, a pure potential beam from the front, and a pure stability beam from the right of the front. Any void in the original beam is lost. Crystalline Prisms are expensive, so use them sparingly.
info.crystal_master_axis=§r§rThe Crystalline Master Axis is an alternative to a normal Master Axis. It functions identically, but for one key difference. It can accept magical beams and alter its behavior based on the element. It can only have the effect from one element active at a time. Every time it receives a beam (limit one beam/side/5 ticks), it acts differently based on the element for the next (beam power * 5) ticks. The timer does not get reset each time it receives a beam, but instead is increased. Each time it receives an element different from the previous one, it resets the timer and switches to the new element. Not all elements have an effect, but for example energy increases the total energy of the gear system by 10/tick if there is any energy to begin with, and equilibrium decreases the change in energy each tick by 75%%. An Omnimeter can measure the current element and duration in a Crystal Master Axis.
info.void=§r§rVoid is the fourth element, and very powerful. At this point, you should have gone to the End and killed the dragon. Void is pure black in color. To create void beams, fire a beam of RIFT through a Lens Holder containing a Void Crystal. This will emit a beam of pure void, of the same power as the Rift beam. On its own, the Void beam just destroys blocks it touches. It can destroy any block, even things normally indestructible. Mixing even a tiny bit of void with any other element will change the effect. Usually the new effect is the opposite of the original effect, though not always. You have to work out the exact effects on your own, but they are usually pretty easy to guess. For example, VOID-ENERGY cools things down instead of heating them up, while VOID-STABILITY makes explosions based on the power of the beam. A word of warning, if you have discovered the TIME element, DO NOT COMBINE IT WITH VOID. You have been warned. Also, the Crystalline Master Axis acts differently with beams containing Void than with beams free of Void.
info.beacon_harness=§r§rA much stronger source of magic than the Arcane Extractor is available in the form of the Beacon Harness. While running, it produces a constant beam of about power 512. The color of the beam is not constant, however, and changes over time. If you look at a Color Chart, the color of the beam produced follows the rim of the chart in a circle. It goes in a complete loop once every 30 seconds. While it can produce very powerful beams, it has a stringent set of requirements. It must be placed 2 blocks above a beacon with no obstruction in between (so beacon then airspace then harness). In the pattern the color follows, the beam emitted will always contain 2 or fewer basic elements. In order to keep it running, it needs to be supplied with the 1 basic element it isn't emitting (so if it's emitting a mixture of STABILITY and POTENTIAL, it requires pure ENERGY). Supplying it with an element it is emitting will cause it to shut down. It runs regardless of the inputted beam for the next 2 seconds after and while emitting a pure element, giving any system built to supply it a time margin for adjusting. The Beacon Harness starts in the shut down position. To turn it on, trigger it with redstone (it will keep running after the redstone turns off) and it will run after a 2 second cooldown.


#Technomancy
info.cat_technomancy.name=Technomancy
info.copshowium_chamber.name=Copshowium Creation Chamber
info.copshowium_chamber=The basic material for Technomancy is copshowium, an orange metal that can be made into blocks, nuggets, gears, and axles. Copshowium gears have 0 mass (and 0 moment of inertia), so they won't contain any energy while spinning, and have no loss. Their speed is determined by the Rotation Ratio and the speed of other gears. With a normal Master Axis, you can not create a gear network entirely of 0 moment of inertia gears, because there is nothing to set the speed. There are special Master Axes in Technomancy that do allow it, however (allowing for energy free networks). Copshowium is made by cooling Molten Copshowium in a Fluid Cooling Chamber. Molten Copshowium can be made in 2 ways. Both require a Copshowium Creation Chamber, and one of the ways requires progressing farther into Technomancy. A Copshowium Creation Chamber can store 1296mB of fluid. Liquid can be both inserted and extracted through the top & bottom (so Fluid Tubes use the pressure system if not made one way). The first way to make copshowium is to insert %1$s into the chamber and hit it with a time beam. This will turn the %1$s into molten copshowium, with each 5mB of copper into 9mB of copshowium. Overfilling the chamber (creating > 1296mB of molten copshowium) will break the chamber. Mixing metals in the chamber will destroy any contained copshowium. The second way to create copshowium is the same process, but uses %2$s instead of %1$s & requires using fields (later Technomancy concept). In order to turn %2$s into molten copshowium, when the time beam hits the chamber the chunk the chamber is in must be unlocked and the chunk will lose (%2$s content)/9 flux, so a field management system must be designed accordingly.
info.goggles.name=Modular Goggles
info.goggles=Modular Goggles are a headpiece that provides no armor, but does not break. On their own, they do nothing. Lenses can be added to the goggles in an anvil with either a Ruby, Emerald, Diamond, or piece of Pure Quartz and some experience. Multiple lenses can be added, but only one of each type. Looking at a block that can be read by an Omnimeter while wearing goggles with the quartz lens will cause information to be displayed (and updated every tick). A ruby lens allows shooting a beam of heat from your eye that sets blocks and mobs on fire wherever you look. It can be toggled on and off with the energy control key (in keybindings) with an empty hand. The emerald lens grants night vision, and can be toggled with the potential control key. The diamond lens allows opening up a detailed crafting window without needing a Detailed Crafter by pressing the stability control key with an empty hand.
info.clock_stab.name=Clockwork Stabilizer
info.clock_stab=The Clockwork Stabilizer is like a Quartz Stabilizer, except instead of being set to a constant output power of 6 or 15, the output power is based on how much magic it currently stores. There is no practical limit on how much magic a Clockwork Stabilizer can store, and the output power is always 25%% of how much magic it contains. This means all magic that enters will eventually leave and it will never overflow and waste magic. Placing one somewhere along a magic system lets it act as a sort of buffer in case magic production changes or pulses, and its ideal for large centralized magic supply systems.
info.rotary_math_devices.name=Rotary Mathematics Devices
info.rotary_math_devices=Prior to now, the rotary system has been used as little more than an energy type. In Technomancy, the rotary system is used in a far more advanced role: control. The exact speed, and in some cases the exact number of rotations performed (speed * time) will matter. For this reason, the following devices allow greater control over rotary systems. The following devices are different types of Master Axes, all of which can control a network made entirely of 0-mass gears. The Redstone Master Axis will cause the connected gear to spin with a speed equal to the strength of redstone signal received, and it can use values > 15 or with decimal points if Ratiators are used. All other connected gears have a speed based on Rotation Ratio and the speed of the first gear. In order to cause the attached gears to spin if they have non-zero mass, energy is required which can be provided by a gear on the back of the Redstone Master Axis. The Redstone Master Axis can point any direction. It is often convenient to use Redstone Master Axes in tandem with Redstone Keyboards. Any excess energy in the gear network is inserted into the energy providing gear, any required energy is drawn from it, and if there is not enough available energy then all controlled gears will stop spinning. If the gear network has 0-mass, no energy providing gear is required. The following Master Axes types set the speed of the attached gear based on the speed of other gears. Linking one of these Axes inputs to its output will destroy the Master Axes (dropping it as an item), as otherwise there would be an infinite loop. It is allowed to connect one of these Axes to its own power gear, though fairly pointless to do so. All of the following devices can only face horizontally and have an energy input on the bottom.</n>The Addition Master Axis has 2 inputs (marked by two blue rings on the model) and an output (the top). The controlled gears will have a speed equal to the sum of the speeds of the 2 input gears. If they were to spin in opposite directions, it would be subtraction. (For those who care, the model of the Addition Axis shows a real life device called a differential).</n>The Multiplication Master Axis has two inputs (back and top, marked by blue rings), and 1 output (the front, marked by an orange ring). The output speed is equal to the product of the two input speeds times. If shift-right-clicked with a wrench, the Multiplication Axis does division instead, with (output speed)=(back input speed)/(top input speed). (For those who care, the Multiplication Axis model shows a complicated device of springs and continuous transmissions which, if designed for a specific set of units, could in theory multiply the speeds. However, a real device like the one in the model would have a LOT of energy loss.).</n>The Square Root Axis has an output speed of the square root of the input speed (with an output speed of 0 for negative inputs).</n>The Sin and Cos Axes do the Sine and Cosine operations respectively in θ. There is no Tan Axis as tangent(θ) = sine(θ)/cosine(θ).</n>The ArcSin and ArcCos Axes do the ArcSine (inverse sine) and ArcCosine (inverse cosine) operations respectively.</n>The Equal Axis has two inputs (to the left and right of the output), and will output the input speed if, and only if, the two inputs have equal speed.</n>The Greater Than Axis has two inputs on the left and right, and has an output speed equal to the higher of the two input speeds.</n>The Less Than Axis is the same as the Greater Than Axis, except it outputs the lower of the two inputs.</n>Finally, there is a much cheaper recipe for the normal Master Axis as part of Technomancy.
info.redstone_registry.name=Redstone Registry
info.redstone_registry=The Redstone Registry is similar to a Redstone Keyboard, except it has multiple preset outputs that it cycles between. It can store up to 64 values, and will emit (when measured by Ratiator or Comparator) the value it is currently at. Every time it receives a redstone signal, it emits the value that is set (rounded signal strength received) ahead of its current value, looping from the final value to the first value as necessary. If the signal it receives is equal to or greater than the number of values it has set, it resets to the first value in the list. The GUI is rather complex, and contains 5 buttons: #, +, -, ▲, ▼, as well as a bar for entering values (which are locked in by pressing enter) and an area where values are displayed. It can display up to 3 set values at a time in the GUI, and which ones are viewed is controlled with the ▲ & ▼ buttons. The top of the 3 values displayed (referred to as the focused value) is the one edited by the input bar. A new value can be added with the + button (inserted directly after the currently focused value), or the focused value can be removed from the sequence with the - button. The currently emitted value can be set to the value focused in the GUI with the # button. The currently emitted value is colored yellow in the GUI.
info.workspace_dim.name=Personal Workspace Dimension
info.workspace_dim=It is possible to build a portal to a personal empty dimension called a "Workspace Dimension". Although saying you are building a portal doesn't do what is actually happening justice. What is actually happening is the application of the technomancy concept that if time flows, then reality must exist, so if time is forced to flow in an empty void it will force reality to form a dimension around it. The first portal you build will use copshowium parts to forcibly start time in the void, creating the dimension. It has no weather, mob spawns, celestial bodies, sunlight, and starts out with only a single stone brick block over the void. Each player gets there own copy that can be built in. It is highly recommended to design field (later Technomancy mechanic) systems in a Workspace Dimension, as there are no flux effects in Workspace Dimensions at all. In order to construct a portal to a Workspace Dimension, create 3 Gateway Frames. Place a Gateway Frame pointing down; The portal will be a 3x3 below this. From the Gateway Frame, go 2 blocks down, and 2 blocks to one side. Place a Gateway Frame pointing inwards. Repeat for the opposite direction. Other blocks near or inside the portal do not interfere. To activate the portal, send a RIFT beam into the top of the upper Gateway Frame. The portal opens and closes instantly, and is only open while a RIFT beam is provided. The portal will link to [0, 33, 0] in the Workspace Dimension, and links to the dimension belonging to the player who placed the top middle block of the gateway (for this reason, fake players cannot place Gateway Frames). Exiting a Workspace dimension can be done either by dying or by using an identical gateway in the Workspace Dimension. A gateway in a Workspace Dimension will by default link to [0, 0, 0] in the Overworld, but the coordinates can be changed. Attaching gears to the ends of the two side Gateway Frames (the side opposite the middle) will allow controlling the X and Z coordinates with the speed of the attached gears (the gear in the north or west direction controls the X coordinate, the gear in the south or east direction controls the Z coordinate). For example, if a gear on the end of the south Gateway Frame has a speed of +3 radians/second, sets the target Z to 3. A gear attached to the top Gateway Frame on a side other than the top or bottom controls the Y coordinate. §r§nWould it be a problem if I were to push the button labeled DO NOT PUSH? §r§rDo you want to know what the inside of your ears tasted like when you were -5 years old? Because pressing that button is a great way to find out. §r§nI'm not sure if that was a threat, or if you've finally snapped. §r§rI mean, that button controls an experimental flux overcharger I've been working on, I mean you press that button and the entire Time-Space continuum collapses to occupy a negative volume, and even worse the dimensions of time and space rotate 90 degrees so length is width and width is depth and depth is time, and time is peppermint, and you really do not want to know what peppermint is, I mean that button is basically a universal self-destruct button. If you press it, there's no telling exactly what would happen. §r§nWHY WOULD YOU EVEN HAVE THAT JUST ON SOME RANDOM WALL? §r§rSome random wall? Oh, thaaat button labeled DO NOT PUSH. That one's just a decoy that captures who ever pushes it, to catch intruders. The end-of-time-and-space-as-we-know-it button is secure behind enough safeguards that no one, other than me, could ever get to it. §r§nSo the nut who can get past your other 'impenetrable' security system can't get to it? §r§rNote to self: remove that button. Now if you don't mind, I am busy. As I was saying: An Omnimeter/Modular Goggles with a quartz lens displays the dialed coordinates when viewing the top Gateway Frame.
info.mech_arm.name=Mechanical Arm
info.mech_arm=The Mechanical Arm is a block that can move entities, interact with inventories to move items, place blocks, and use items. It is controlled by 3 attached gears and a redstone signal. A gear on the bottom controls θz, a gear on the east controls θb, and a gear on the west controls θt. The angle θ will be set by the speed of the attached gear, ω. A redstone signal is accepted on the north side. What matters to this machine is the speed rotated by the gears, not the current angle, in order to make it easier to use. It starts out with θz = 0, θb = 17Π/36 radians, θt = Π/4 radians, with the gear speed being the offset from these values. The bounds for θb is [Π/6, 17Π/36], the bounds for θt is [Π/4, 3Π/4], and there are no bounds for θz. The Mechanical Arm has 2 segments of constant length, and the angle between them is controlled by the 3 θ values, as is shown by the following diagram. lower-length = 3, upper-length=5.
info.mech_arm.post_image=From this information, the formulas for the position of the end point relative to the top center of the base are found to be: (lengthCross and θd exist to shorten the calculations) 
info.mech_arm.post_calc_1=Or, if that is illegible: lengthCross= √(lengthBase² + lengthTop² - 2lengthTop*lengthBase*cos(θt)), θd= θb + θt + arcsin(sin(θt)*lengthBase/lengthCross), x= -cos(θd)lengthCross*cos(θz), y= -sin(θd)lengthCross, z= -cos(θd)lengthCross*sin(θz). </n>If the end position is known and you want to solve for the angles required to obtain that end position, then: 
info.mech_arm.post_calc_2=Or, if that is illegible: lengthCross= √(x²+y²+z²), θt= arccos((lengthBase² + lengthTop² - lengthCross²)/(2*lengthBase*lengthTop)), θb= arcsin(y/lengthCross) + arcsin(sin(θt)lengthTop/lengthCross), θz= arctan(z/x). </n>It is recommended to make some sort of automatic calculation device if you need to do these operations a lot. In order to make the arm actually do anything other than move, a redstone signal must be applied. The exact strength matters, and values only reachable by Ratiator are required. All signal strengths are rounded to the nearest whole number. The arm has 7 different effects, activated by redstone signal, and each effect gets a direction based on the redstone signal (although many of the effects ignore the direction). A signal of 0 does nothing, and any other signal does an effect. The effects are referred to by index: 0: Pickup entity, 1: Pickup block, 2: Pickup from inventory, 3: Use, 4: Deposit into inventory, 5: Drop entity, 6: Throw entity, 7: Pickup one from inventory. The effect done with a redstone signal is the one where index=(redstone - 1)/6, capped at 7. The side passed to the effect is referred to by index as well: 0: down, 1: up, 2: north, 3: south, 4: west, 5: east. The side used is index=(redstone - 1)mod(6). (That is, (redstone - 1) modulus 6). The effects, in order: Pickup Entity which will cause an entity near the end of the arm to be grabbed by the arm, provided the arm has no passengers. Pickup Block will break the block at the end of the arm, and if the arm has no passengers or is carrying an item of the type dropped by the block, will pick up the block's drops. Pickup from inventory will attempt to pull out 1 stack from the inventory at the end of the arm and put it on the end of the arm (uses the direction). Use will try to right click with the held item, or if it is an ItemBlock place it in midair (uses the direction). Deposit into inventory will try to place a held stack into the inventory at the end of the arm (uses the direction). Drop Entity will cause the held entity to be dropped straight down. Throw will release the held entity, throwing it at high speed in the direction the endpoint is from the base of the arm. Pickup one from inventory is the same as Pickup from inventory, except instead of trying to take up to a full stack, it tries to take exactly 1 item. The arm can pass through blocks, carry item entities, players, or mobs, and interact with things requiring a right click.
info.mech_beam_splitter.name=Mechanical Beam Splitter
info.mech_beam_splitter=A more precise variant of the Beam Splitter is the Mechanical Beam Splitter. When placed, it can face any horizontal direction. The ratio used to split incoming beams between the top and bottom is controlled by the speed of the gear attached to the direction it is facing. Ratio=ω/15, capped at 1. It rounds magic normally for the down direction, and the remainder goes up.
info.beam_cage_+_staff.name=Beam Cage & Staff
info.beam_cage_+_staff=There are several handheld devices which require magic to run. In order to power them, there is the magical equivalent of a battery: the Beam Cage. It can store 1024 each of Energy, Potential, Stability, and Void. In order to charge it, a Cage Charger is required. Right click a Cage Charger with a Beam Cage to insert the cage into the charger. Right clicking it again will remove the cage. In order to charge the cage, send a beam into the charger from any direction other than down. The components of the beam will go into the cage, with any excess magic being lost. In order to use a Beam Cage with a device, there are 4 keybinds that need to be set: Energy Control key, Potential Control key, Stability Control key, and Void Control key (which, despite the name, have nothing to do with the ctrl key on the keyboard). Suggested default values are: 'R', 'G', 'B', & 'V' respectively. Devices powered by a Beam Cage can have there magic usage configured by holding the device, along with 1 of the elemental control keys, and right clicking to increase usage of that element by 1, or shift right clicking to decrease it by 1. The settings are capped at 8.</n>The first such device is the Beam Staff. Holding it in one hand and a Beam Cage in the other while using the Beam Staff will drain the configured usage from the cage every 5 ticks, and shoot a beam from the staff in the direction the player is looking made from the magic drawn from the Beam Cage. The beam travels farther than usual, 32 blocks, and can collide with blocks and entities. While it can do an effect at the end (which is the purpose of the staff), it cannot insert the beam into a device such as an Arcane Reflector.</n>§r§lae metil st1k 4 due-ing tings! m1cks wid 2 moor uf dem for anoter! thI3 stik, an'd da windy-windy-cranky won, an-dda da one that luke like a Y! Ya noe, da whatchamalit, start with a UU! d0 tHis 4 a beter Y-stik! bOB0 AWAY!
info.prototyping.name=Prototyping
info.prototyping.default=Using prototyping it is possible to compact large, complicated builds into a single block space and copy them quickly and cheaply. In order to produce a Prototype, you need a Prototyping Table. Place it down somewhere. It affects a 16x16x16 cube. It is suggested that the entire area it affects be confined to 1 chunk for reasons that will become apparent with fields later on. There is a button in the GUI to visualize the affected area, and it can be rotated with a wrench.</n>A Prototype (the compacted design) can have 6 inputs/outputs (one per side of the block), and only certain things can go in/out of the Prototype (selected during construction). Ratiator signals, magic beams, heat, and rotary connections are the only things that can go in or out. Inside the design area (the 16x16x16 cube) you can build a system that will be copied into the finished Prototype. When building the design, assume there are solids walls, a ceiling, and a floor. Inputs and outputs are designated with Prototype Ports. The interface for a Prototype Port allows you to select what can travel through it, and whether it is an input or output. Rotary connections (connecting gears inside and outside the Prototype) and heat go in both directions, while ratiator signals and beams can only go in OR out of 1 port. In refers to into the Prototype, out refers to outside the Prototype. In the port interface, select a side. This will be the side of the final Prototype that connects to this port, and the side of the port that connects to the Prototype. It should be noted that Ratiator signals do not pass through on there own in either direction, something must be connected. That is to say, for a Ratiator signal to go through, a Ratiator must be facing out of (reading) the output end. There can be a maximum of 6 ports, and only 1 port per side. Ports can be given a name in the GUI to help keep track of each one's purpose. To create the Prototype after building a design (complete with ports) in the design area, go into the Prototyping Table interface, supply it with 3 copshowium ingots, and press the "Prototype" button. This will copy the design (at only the cost of the ingots) and create a Prototype block. The Prototype can be copied by placing it in the slot in the right side of the interface, along with the number of copshowium ingots required to produce it, and pressing the Prototype button to produce a duplicate. The contents of Prototypes are chunkloaded while the Prototype block itself is. There are a finite number of Prototypes that can be created (500), after which the Prototyping Table will refuse to produce (or copy) any more. Slots can freed up by placing an unwanted Prototype in the slot in the Prototyping Table with a recycling icon to destroy the Prototype, free up a slot, and return the copshowium ingots required to make it. Destroying the item in any way other than the recycle slot will NOT free up a slot. The slots are shared between all members of a server. There are certain blocks which are blacklisted from being part of a Prototype: other Prototype blocks (no nesting), Large Gears (a multiblock), Portals, and a few others. Things can be added to/removed from this list in the config (DO NOT allow nesting Prototypes or inserting Large Gears though). It is recommended that server owners/pack makers blacklist any multiblocks or ways of teleporting items/players/fluids into or out of the Prototype.
info.prototyping.consume=Using prototyping it is possible to compact large, complicated builds into a single block space. In order to produce a Prototype, you need a Prototyping Table. Place it down somewhere. It affects a 16x16x16 cube. It is suggested that the entire area it affects be confined to 1 chunk for reasons that will become apparent with fields later on. There is a button in the GUI to visualize the affected area, and it can be rotated with a wrench.</n>A Prototype (the compacted design) can have 6 inputs/outputs (one per side of the block), and only certain things can go in/out of the Prototype (selected during construction). Ratiator signals, magic beams, heat, and rotary connections are the only things that can go in or out. Inside the design area (the 16x16x16 cube) you can build a system that will be inserted into the finished Prototype. When building the design, assume there are solids walls, a ceiling, and a floor. Inputs and outputs are designated with Prototype Ports. The interface for a Prototype Port allows you to select what can travel through it, and whether it is an input or output. Rotary connections (connecting gears inside and outside the Prototype) and heat go in both directions, while ratiator signals and beams can only go in OR out of 1 port. In refers to into the Prototype, out refers to outside the Prototype. In the port interface, select a side. This will be the side of the final Prototype that connects to this port, and the side of the port that connects to the Prototype. It should be noted that Ratiator signals to not pass through on there own in either direction, something must be connected. That is to say, for a Ratiator signal to go through, a Ratiator must be facing out of (reading) the output end. There can be a maximum of 6 ports, and only 1 port per side. Ports can be given a name in the GUI to help keep track of each one's purpose. To create the Prototype after building a design (complete with ports) in the design area, go into the Prototyping Table interface, supply it with 3 copshowium ingots, and press the "Prototype" button. This will destroy the design (by default it copies it, and it is possible to clone a Prototype, but the configuration file has been changed) and create a Prototype block. The contents of Prototypes are chunkloaded while the Prototype block itself is. There are a finite number of Prototypes that can be created (500), after which the Prototyping Table will refuse to produce any more. Slots can freed up by placing an unwanted Prototype in the slot in the Prototyping Table with a recycling icon to destroy the Prototype, free up a slot, and return the copshowium ingots required to make it. Destroying the item in any way other than the recycle slot will NOT free up a slot. The slots are shared between all members of a server. There are certain blocks which are blacklisted from being part of a Prototype: other Prototype blocks (no nesting), Large Gears (a multiblock), Portals, and a few others. Things can be added to/removed from this list in the config (DO NOT allow nesting Prototypes or inserting Large Gears though). It is recommended that server owners/pack makers blacklist any multiblocks or ways of teleporting items/players/fluids into or out of the Prototype.
info.prototyping.device=Using prototyping it is possible to compact large, complicated builds into a single block space for use in special Crossroads devices (by default they can be placed and used as parts of builds, but the configuration file has been changed). In order to produce a Prototype, you need a Prototyping Table. Place it down somewhere. It affects a 16x16x16 cube. It is suggested that the entire area it affects be confined to 1 chunk for reasons that will become apparent with fields later on. There is a button in the GUI to visualize the affected area, and it can be rotated with a wrench.</n>A Prototype (the compacted design) can have 6 inputs/outputs (one per side of the block), and only certain things can go in/out of the Prototype (selected during construction). Ratiator signals, magic beams, heat, and rotary connections are the only things that can go in or out. Inside the design area (the 16x16x16 cube) you can build a system that will be copied into the finished Prototype. When building the design, assume there are solids walls, a ceiling, and a floor. Inputs and outputs are designated with Prototype Ports. The interface for a Prototype Port allows you to select what can travel through it, and whether it is an input or output. Rotary connections (connecting gears inside and outside the Prototype) and heat go in both directions, while Ratiator signals and beams can only go in OR out of 1 port. In refers to into the Prototype, out refers to outside the Prototype. In the port interface, select a side. This will be the side of the port that connects to the device containing the Prototype. It should be noted that Ratiator signals to not pass through on there going into the Prototype, something must be connected. That is to say, for a Ratiator signal to go through, a Ratiator must be facing out of (reading) the output end. There can be a maximum of 6 ports, and only 1 port per side. Ports can be given a name in the GUI to help keep track of each one's purpose. To create the Prototype after building a design (complete with ports) in the design area, go into the Prototyping Table interface, supply it with 3 copshowium ingots, and press the "Prototype" button. This will copy the design (at only the cost of the ingots) and create a Prototype block. The Prototype can be copied by placing it in the slot in the right side of the interface, along with the number of copshowium ingots required to produce it, and pressing the Prototype button to produce a duplicate. The contents of Prototypes are chunkloaded while in use. There are a finite number of Prototypes that can be created (500), after which the Prototyping Table will refuse to produce (or copy) any more. Slots can freed up by placing an unwanted Prototype in the slot in the Prototyping Table with a recycling icon to destroy the Prototype, free up a slot, and return the copshowium ingots required to make it. Destroying the item in any way other than the recycle slot will NOT free up a slot. The slots are shared between all members of a server. There are certain blocks which are blacklisted from being part of a Prototype: other Prototype blocks (no nesting), Large Gears (a multiblock), Portals, and a few others. Things can be added to/removed from this list in the config (DO NOT allow nesting Prototypes or inserting Large Gears though). It is recommended that server owners/pack makers blacklist any multiblocks or ways of teleporting items/players/fluids into or out of the Prototype.
info.prototyping.pistol=There are a few devices which can have a Prototype socketed into them and are controlled by it. For those devices, a Prototype is inserted by crafting it with the device, and removed (and returned) by placing the device alone in the crafting grid. The devices which use a Prototype can be configured to accept magic from a Beam Cage. The devices will have specific requirements for the contained Prototype (but will still accept a Prototype that violates a requirement, but just disable the feature that uses that requirement). There should be a Magic Input port on the East side, and if there is than the drained magic from a Beam Cage will be inserted into that port every 5 ticks. There should be a Magic Output port on the West side, and magic sent into it will return to a held Beam Cage. Other requirements vary based on the device. The contained Prototype will be chunkloaded while the device is held. The first such device is the Prototyped Pistol. It is a weapon that fires iron nuggets as bullets. It needs a Redstone Input port on the South side and a Rotary port on the Up side, which will connect to a single internal gear of I=10. When the pistol isn't fully loaded, shift-right click with it to load an iron nugget from your inventory. It has a magazine size of 6. It can only shoot if there is energy in the internal gear in the top rotary port. The projectile will have a speed and damage based on the speed in the gear. As there is no upper limit on speed, depending on design quality a bullet might do no damage or 1-shot the enderdragon. While the right-mouse is held, the South Redstone In port will have a signal strength of 2, or if the player is sneaking, 1, when read by Ratiator.
info.fields.name=Temporal Fields
info.fields=Using Temporal Fields (or just fields for short) it is possible to manipulate the rate at which time flows for entities in a certain area, or even stop time in an area entirely. However, a single mistake could have disastrous consequences. In order to start using fields within a chunk, the chunk has to be unlocked using a Chunk Unlocker. Place it anywhere inside the chunk, and give the top a redstone signal. The chunk will remain unlocked only while the Chunk Unlocker receives a redstone signal. One a chunk is re-locked, there is a cooldown before it can be unlocked again. Do not use multiple Chunk Unlockers in the same chunk, or they will interfere with each other. In order to work with fields, it is highly recommended to have Modular Goggles with a quartz lens, as it allows you to see the fields of the chunk you are in. Each chunk has a "flux" value, and it is shared throughout the entire chunk. Time is manipulated in entire columns of blocks at a time, from bedrock to sky height. Each column has a value called "Rate", which defaults to 8 and can range from 1 to 128. The rate at which time flows for entities in a column is (Rate)/8 speed, so the default Rate of 8 would give (8/8=1) times speed. The amount of Rate and Flux in a node can actually be seen by wearing the Goggles as mentioned earlier. Rate will be rendered in green, and Flux is rendered in red. Depending on the configuration settings, they will either appear are translucent lines connecting columns or as translucent quadrilaterals with each corner being a column. The height of the lines/corners shows the amount of Flux/Rate, with feet level being 0 and waist height being 8 (2 blocks high is 16, etc.). Both Rate and Flux can be manipulated with machines, and are recalculated in a cycle every 5 ticks. There are important rules governing Rate and Flux: Rate returns to 8 unless controlled externally, with each influencing device pushing it up or down away from the resting point of 8. Remove all devices changing it, and it will return to 8 next cycle. Flux does not return to 8 on its own, and if increased by 3 to 11 one cycle, and then next cycle 2 is added, it will go to 13 instead of 10. It also changes randomly when it isn't equal to 8: each cycle it changes by a random amount from 0 to (|current flux - 8|/8), with the upper bound rounded away from 0. If it were, for example, 18 then every cycle it has a chance to increase from 0 to 2. At exactly 8, it doesn't change randomly. Every time the Rate in a column changes, the flux in the chunk increases (even if rate decreased) by |ΔRate/2| (Δ means change in). If Flux reaches (or would exceed) 128, a flux disaster occurs in the chunk and the chunk will become locked again. There are several flux disasters, all of them extremely unpleasant and destructive (all of them can be disabled in the configuration file). They range from turning everything in the chunk to air, to a small explosion. It should be noted that every time a chunk is unlocked, the Rate and Flux in the contained nodes resets to 8. Normally, neither Flux nor Rate can reach 0, though under special conditions time can still be stopped. If the Rate in a column exceeds the Flux in the chunk, then the rules governing flux change. As long as any node in a chunk has a higher rate than the flux in the chunk, machines cannot affect the node's flux. Flux won't grow randomly, instead growing a constant 2 per cycle (8 per second). However, for entities, time is effectively stopped while in a column with a lower flux and rate. This means that while it is possible to stop time in an area, it can't be stopped permenently.</n>There are 3 machines involved in manipulating the Rate and Flux. First, the Rate Reader Axis: It acts identically to a Redstone Master Axis, except instead of setting a speed equal to the received signal strength, the speed equals the chunk's flux.</n>A machine called a Flux Manipulator changes the flux of the chunk its in each cycle by the angle rotated by a gear attached to the top in the last 5 ticks in radians. The Flux Force it applies is angle/5. The direction rotated controls whether the Flux Force is + or -.</n>Finally, the Rate Manipulator changes the rate of the column its in by the SPEED of a gear attached to the top (not the angle rotated). It can be configured with a wrench to make it affect multiple columns in the same chunk at once, with a maximum area being a square of radius 9. Be careful, as affecting multiple columns at once will mean the flux gained from changing rate will be higher (changing rate in 9 columns is 9 times the flux gain, for example).</n>Fields do not interact through Prototypes (field setups inside Prototypes do not affect the outside world, and vice-versa). If Flux hits 128 inside of a Workspace Dimension or Prototype, there is no Flux Disaster (though the chunk still gets re-locked). It is therefore recommended to test field setups in a Workspace Dimension.
info.watch.name=Prototyped Watch
info.watch=The Prototyped Watch is a multi-function item which, like the Prototyped Pistol, requires a socketed Prototype to function. In addition to the standard Magic ports, it should also have a Redstone-In port on the South side, and optionally a Rotary port on the Up side, Down side, and North side. Unlike all other things involving Prototypes, fields generated within the Watch's socketed Prototype will affect entities in the outside world while the Watch is held. The Watch's Prototype is confined to 1 chunk on the inside, so field setups inside should take that into account. If there is a field inside the Watch and a field outsid the Watch affecting the same entity, the two speed multipliers are multiplied. Neither of the fields themselves are effected. The columns within the Watch do not directly correspond to those outside, which is to say that the North-Eastern most column inside the Watch does not necessarily impact what would the be North-Eastern most column of the chunk the player is standing in. Instead, the Watch effects time around it as if the player was standing in the center of the Watch's chunk. While holding the Watch and the right-mouse button is held, the South Redstone In port will have a signal strength of 2, or if the player is sneaking, 1, when read by Ratiator. The Rotary Up, Down, and East ports each allow displaying the speed of the gear attached to the port. The 3 speeds are displayed in the top left while the watch is held. This can be used for everything from a countdown timer to making a basic calculator.
info.flying_machine.name=Flying Machine
info.flying_machine=The Flying Machine is a flying mount which requires materials from both Technomancy and Alchemy to craft. While riding, it has a large blue and orange horizontally mounted "wheel". Pressing 'w' or 's' rotates this wheel forward or backward. The Flying Machine is propelled in the direction of the blue side of the wheel as far as up and down is concerned, while moving forwards in the direction its rider is looking. The Flying Machine cannot hover.

#Alchemy
info.cat_alchemy.name=Alchemy
info.alc_intro.name=Introduction to Alchemy
info.alc_intro=Alchemy is divided into three tiers, or stages: Early Alchemy, Philosopher's Stone, and Practitioner's Stone. This entry is mainly about Early Alchemy. </n>Most everything in Alchemy needs a material that can't be produced in a normal Detailed Crafter. Most alchemical materials have to be made in various chemical aparatus which will be explained in greater detail in the following two entries. With care, and attention to detail, producing materials like Densus or Chlorine is quite easy. Every type of ingredient that can go into alchemical glassware is a reagent. Any reagent can be viewed in JEI to see uses and recipes, as with any other item. Reagents in glassware can react with one another if all the needed ingredients are present. Most reactions (alchemical recipes) require a certain temperature range in the glassware, and may require a catalyst (a reagent that has to be present for the reaction to procede, but which won't be consumed). For example, If redstone is heated above 360°C it will turn into 1 part quicksilver and 1 part sulfur dioxide for every 1 part of redstone heated. This reaction is endothermic, which means that doing the reaction will cool down the glassware it happens in. The opposite is exothermic, which heats the glassware. Isothermic is rarer, and means the temperature doesn't change. Some reactions have an additional requirement: they may require the glassware they are in to be charged (shown by lightning bolts in the JEI reaction view). This will be covered in the following sections as well.</n>Every reagent can exist in one of three phases: Solid, Liquid, or Gas. Heating a reagent above its boiling point (visible in JEI) will make it a gas, cooling it below its melting point makes it a solid, and making it in between makes it a liquid as you'd expect. The phases of matter can be used to separate out materials with different melting/boiling points. All three phases flow sideways in glassware, however only gasses can flow upwards, while only liquids and solids can flow downwards. If a reagent is in the solid phase, you can remove it in item form by right-clicking on the glassware.</n>During the Early Alchemy stage, there are 3 main materials: Sulfur, Quicksilver, and Alchemical Salt. It would be a good idea to mass produce these things. Sulfur can be obtained by putting gunpowder in glassware with water as a catalyst, turning gunpowder into sulfur in a 2:1 ratio. Caution is required, as heating gunpowder too much makes it explode, destroying the chamber it is in (but nothing around it). Heating redstone makes Quicksilver, as mentioned earlier. Alchemical Salt is a bit harder to produce, and can be made as a byproduct with either chlorine gas or muriatic acid (more details in the following sections, or JEI).
info.man_glass.name=Manual Laboratory Glassware
info.man_glass=There are two sets of glassware: the manual and the automatic. Everything that can be crafted in one set can also be made in the other. The manual set is simple to use, cheaper, and good for making single batches of a reagent. The automatic set, however, can be automated, making it good for mass production.</n>Reagents can be stored in Glass Phials, which have a capacity of 25. Right clicking on the ground with a Glass Phial will pour out the contents, possibly performing an effect depending on the contents. A Glass Florence Flask is a larger form of a phial (capacity 500) that can't be poured out on the ground. A Glass Shell is like a phial, except right-clicking throws it, causing it to smash (and possibly do an effect) where it lands. All three can be filled/emptied by right clicking it on placed glassware.</n>A Glassware Stand can hold Phials and Florence Flasks (but not Shells). Glassware can be placed on an empty stand with a right-click, or removed by shift-right-clicking with an empty hand. Reactions can occur inside glassware placed on a stand. A heating cable can be attached to the bottom of a stand to heat/cool a contained Florence Flask. Phials cannot be heated/cooled this way. Florence Flasks are intended for reactions & heating/cooling, while Phials are meant for reagent transfer. Conduits can be attached to the top of the stand (See Automatic Laboratory Glassware), and providing the stand with a redstone signal will force the contents to flow up into a conduit, regardless of phase.</n>The Alembic is a specialized piece of glassware meant to help with early game quicksilver production. When heated from below, the contents are allowed to react. Anything gaseous leaves the Alembic. If the reagent would flow down at room temperature, it goes into the phial/flask on the stand under the Alembic's spigot. Otherwise, it is lost. Solid/liquid reagents stay in the Alembic until they boil. If, for example, redstone were put in a hot Alembic it would break down into Sulfur Dioxide and (would would be lost, as it's a gas at room temperature) and liquid quicksilver. Once the quicksilver boils it will leave the Alembic, cool to liquid, and be collected in the glassware under the spigot.</n>Item forms of a reagent can be inserted into glassware by right clicking with it on glassware. Items can be removed from glassware with a solid reagent by right clicking with an empty hand.</n>The Electrolyzer is a block that accepts Forge Energy, and consumes 10FE/tick whether it's running or not. Placing a Phial or Florence Flask inside while it has energy allows reactions to occur in an energized environment, which is a requirement for some reactions.
info.man_glass_pic=From left to right: A Florence Flask, an Alembic on a Fuel Heater, and a Phial connected to the Alembic.
info.aut_glass.name=Automatic Laboratory Glassware
info.aut_glass=There are two sets of glassware: the manual and the automatic. Everything that can be crafted in one set can also be made in the other. The manual set is simple to use, cheaper, and good for making single batches of a reagent. The automatic set, however, can be automated, making it good for mass production.</n>Glass Conduits allow moving reagents between different pieces of glassware. Like Fluid Tubes, their connections can be wrenched between input only, output only, and disable connection. Unlike Fluid Tubes, they do not have a setting to average pressure. When using Glass Conduits, it should be noted the taking advantage of the fact that gases can't flow down, while liquids/solids can't flow up, is the main way to separate out a mixture of reagents.</n>There are also Redstone Glass Conduits, which only connect while given a redstone signal.</n>The Glass Reaction Vessel has conduit connections on all 6 sides, can connect to heat cables on all 6 sides, can interact with hoppers to move item forms of solid reagents in and out, and can hold Forge Energy (drained at 10FE/tick) to act as an energized environment for reactions.</n>The Glass Storage Vessel stores a large amount of reagents (Capacity 10,000), and can connect to conduits on all sides. Reactions can not occur inside Storage Vessels.</n>Glass Reagent Pumps can be oriented either up or down. They output reagents out the way they face, and accept reagents from all other directions. They force reagents to flow in the direction they point, regardless of phase.</n>The Chemical Vent vents any reagent inserted into it, acting as a chemical trash can that also does the effect of the reagent around it.</n>The Glass Cooling Coil makes any reagent that flows through it be at room temperature.</n>The Glass Thermal Conduit connects to a heating cable at the top or bottom, and sets any reagent that flows through it to the temperature of the cable.</n>The Fluid Injector allows converting fluids into reagents. Inserting liquids like distilled water or molten copper into the top will allow the reagent form to be conduit-ed out the bottom. Inserted a gas like steam into the bottom allows conduiting the gasous reagent out the top.</n>The Glass Limiter Conduit is a specialized conduit that stops inserting a reagent once there is too much of that reagent in the target it outputs to. The limit can be toggled between 0.25, 0.5, 1, 2, 4, 8, and 16 by shift-right-clicking on the Limiter Conduit with a wrench.
info.aut_glass_pic=A setup to mimic an Alembic. From left to right: A Reaction Vessel, a Cooling Coil, a Chemical Vent, and a Storage Vessel.
info.electric.name=Forge Energy
info.electric=Forge Energy can be produced in a Dynamo, which has an axle connection on the back and a FE connection of the front. Rotary Energy is drained almost as fast as it is provided to produce Forge Energy. The more Rotary Energy it draws, the more Forge Energy is produced.</n>The Leyden Jar is a type of FE Battery. It can be placed inside Tesla Coils to manually move FE, and increase Tesla Coil capacity.</n>The Tesla Coil is the main way of transmitting FE. The base has 3 inputs and 1 output for FE (the output is orange). By right clicking the top with a wrench, then right clicking the top of a nearby Tesla Coil with the same wrench, the two Tesla Coils will be linked. The Tesla Coil you first clicked on will transfer FE to the second Tesla Coil you clicked on. Links are one way, and each Tesla Coil can have up to 3 links. Shift-right-clicking the top of a Tesla Coil with a wrench will clear all its links. Shift-right-clicking the base of the Tesla Coil will toggle on and off "Attack Mode". While in attack mode, the Tesla Coil will use stored FE to attack nearby entities, including players. Providing the base with a redstone signal will disable the Tesla Coil from attacking or transmitting FE.</n>The Atmospheric Attentuator is a way of transmitting FE wirelessly, even between dimensions. Inserting FE into the base will cause it to move the FE into a shared "Atmosphere" storage. All players in all dimensions share the same "Atmosphere" storage, which has a capacity of 1,000,000,000FE. Right clicking the base with a wrench switches it to "Draining mode", which extracts FE from the atmosphere and outputs it out the base instead of inserting FE into the atmosphere from the base. A Comparator/Ratiator can read how full the atmosphere is, with signal strength 15 meaning its full. If the atmosphere charge level gets above 50%%, various negative global effects will occur that increase in severity as charge increases. The effects can be disabled in the config. The main effect is more lightning strikes.
info.tesla_ray.name=Tesla Ray
info.tesla_ray=The Tesla Ray is an electrical weapon, well suited for crowd control. Using it requires holding the Tesla Ray in the main hand, and a charged Leyden Jar in the offhand. The Tesla Ray has a cooldown period, just like the attack cooldown on a sword. Using it during its cooldown is very ineffective. With every shot, it fires out a large electrical bolt in front of you if there's a suitable target, and the bolt can arc up to 3 times. It oly arcs at all if fired when not on cooldown, and it won't fire unless there's an enemy to hit. Every shot of the Ray drains some charge from the Leyden Jar. Producing the Tesla Ray requires a material from Technomancy (Copshowium).
info.heat_limiter.name=Heat Limiter
info.heat_limiter=Using a Heat Limiter, the temperature of a machine or heat cable can be tightly controlled. It connects to a heat cable in the front and back. It only allows heat to flow when the temperature of the output, in degrees kelvin, is lower than the redstone (or Ratiator) signal strength received. This can be used as a temperature regulator of sorts, to keep the output heat cable at right around the temperature set via a Ratiator, provided abundent heat is provided into the input side.
info.acids.name=Strong Acids
info.acids=There are 4 basic acids that are used heavily in crafting. The first 3, Oil of Vitriol, Muriatic Acid, and Aqua Fortis all have the same effect. They damage mobs around them when released, as well as destroying metal blocks other than gold. Higher amounts do more damage. Aqua Regia, made by blending Muriatic Acid with Aqua Fortis, is unusual in that while it also damages mobs and breaks metal blocks, it a) does more damage than the other acids, b) can break gold blocks, and most importantly c) when used on bedrock breaks the bedrock and drops it as an item. This means that bedrock is now obtainable, and it is used as an ingredient in later recipes.
info.chlorine.name=Chlorine Gas
info.chlorine=Chlorine, a green gas, is an extremely potent weapon. When released, it effects a large area (radius affected by amount released), and any entity in the radius will have many serious status effects, including, but not limited to, Wither 4, Slowness 4, and Hunger 4. Most anything hit with chlorine will shortly die without milk, making it very effective as a weapon when thrown in Glass Shells. Of course, it also works when released through a Chemical Vent...
info.phil_stone.name=The Philosopher's Stone
info.phil_stone=The next tier of Alchemy is gated behind getting at least 1 Philosopher's Stone. While crafting the Stone itself isn't that difficult, there is another difficulty: containing it. The Philosopher's Stone is the Alkhest, or universal solvent. It can destroy any glass container it's put in. The item itself will melt through the floor all the way to the void if dropped. In order to contain the Philosopher's stone, you'll need a new material: Alchemical Crystal.</n>Every piece of glassware that was previously made of glass can also be made of Alchemical Crystal for a crystal version (it's still called glassware though). The Philosopher's Stone can safely contained in crystal. Many of the later materials will also require crystal glassware.</n>The Philosopher's Stone is always a catalyst, never an ingredient. It breaks down gunpowder into sulfur and a new material (Phelostogen), which is so important it has its own entry in the guide. Bedrock breaks down into Alchemical Salt and Adamant, while redstone is broken down into Aether, Quicksilver, and Sulfur Dioxide. While Sulfur, Quicksilver, and Alchemical Salt were the main ingredients in Early Alchemy, Phelostogen, Aether, and Adamant are the many materials of the Philosopher tier. You'll note they're produced alongside their Early Alchemy version.
info.metal_trans.name=Metal Transmutation
info.metal_trans=Using the Philosopher's Stone, it is possible to mass produce the basic metals: Copper, Tin, Iron, and Gold. All four of those metals break down into Quicksilver and one of the 4 strong acids when exposed to the Philosopher's Stone as a catalyst. Combining Quicksilver and one of the 4 strong acids using some Adamant as a catalyst will produce one of the 4 base metals, which can be cooled to solid and pulled out as nuggets, or extracted as molten metal with a Fluid Injector and run through a Fluid Cooling Chamber to produce ingots. Provided Quicksilver and the 4 strong acids have been automated at this point, this allows easily producing massive amounts of the 4 base metals.
info.early_terra.name=Early Terraforming
info.early_terra=Phelostogen's effect when released is very powerful, and very dangerous if mismanaged. When released, it expands in a cloud of flame (that eventually disappears after reaching a radius based on amount of Phelostogen released, maximum radius ~5 blocks). Everything the flame cloud touches is destroyed, without dropping items. If Phelostogen is released alongside Alchemical Salt it still releases a cloud of flame, but it does not damage anything in any way. If Phelostogen is released alongside Alchemical Salt and 1 or more other chemicals, it will perform the effects of the other chemicals at every point the cloud touches. For example, a mixture of Phelostogen, Alchemical Salt, and Aqua Regia would destroy, and drop as an item, all bedrock in an area around where it was released, alongside damaging mobs.</n>Aether has a transformative effect. When released onto a block, it changes that single block into another. It turns rock type materials into Stone, soil type materials into Dirt and Grass, crystal type materials into Glass, and liquids into Water. It also changes the biome to plains in that one spot. This also works in other dimensions. When released alongside Quicksilver, it instead places Grass.</n>If Aether and Phelostogen were to be released together (with some Alchemical Salt of course) it would apply Aether's transformative effect over a larger area, terraforming the area around where it was released. By adding Quicksilver to the mix, it would also fill empty spaces with Grass.
info.densus.name=Gravity Plates
info.densus=Two new materials, Densus and Anti-Densus have very interesting properties. They are both extremely dense, but Anti-Densus has negative density. Both can be crafted into plates in a Detailed Crafter.</n>Densus plates are very strong gravity plates that attract any entity in front of them. They do not affect anything behind them. They have a range of 64 blocks, and work through other blocks. The effects of multiple plates stack. Holding shift prevents Density Plates from affecting you.</n>Anti-Density Plates are the same, except they are repulsive instead of attractive.</n>Densus can also be used as an insulator for (redstone) heat cables, and have zero heat loss due to its enourmous density. It also has a very high melting tolerance.
info.prac_stone.name=The Practitioner's Stone
info.prac_stone=The third and final tier of Alchemy is the Practitioner tier, which is gated behind obtaining a Practitioner's Stone.</n>The Practitioner's Stone is produced by cooling a mixture of equals parts gold, Aether, Phelostogen, and Adamant with an Aqua Regia catalyst. Unlike most reactions, where having the wrong ingredient ratio simply means there will be some leftover unused reagent, getting the ratio wrong when making a Practitioner's Stone will destroy the glassware it's being made it. While the ratio doesn't have to be exactly right, it must be close.</n>Like the Philosopher's Stone, the Practitioner's Stone is strictly a catalyst.</n>There are several new elemental reagents that can only be produced through a Practitioner's Stone. Their recipes are not in JEI. Instead, you will need an Alchemy Chart, which is similer to a Color Chart in many ways. If you look in an Alchemy Chart, you will see the three primary elemental reagents in the corners (Phelostogen, Aether, Adamant), connected by arrows to the various newly available elemental reagents. To produce a secondary elemental reagent (shown an octogon in the chart), you need to combine primaries in the right ratio, with a practitioner's stone catalyst in a charged environment. If you get the ratio wrong, no reaction will occor at all. You don't need to get the ratio exactly right, but you must be close. The farther away an element is displayed in the chart from a primary, the less of that primary is required. For example, Eldrine is opposite of Aether on the chart, equidistant from Adamant and Phelostogen. Therefore, it is equal parts Phelostogen and Adamant, with no Aether.</n>To produce a tertiary, shown as a diamond in the Alchemy Chart, you need to blend the primaries with one of the secondaries. The secondary you need is shown as connected to the tertiary by an arrow. If at any point you are confused as to which arrow came from where, note that the color of the arrow matches the color of what it came from. Once again, the distance between the tertiary and its ingredients in the chart reveals the ratio, and a Practitioner's stone must be present in a charged environment.
info.voltus.name=Voltus
info.voltus=Voltus, a tertiary elemental reagent, has a lightning effect that shoots damaging electric arcs, similar to those from a Tesla Coil, at any entities nearby where it was released. This can, like all other reagents, be combined with Phelostogen to spread the effect, which can make it act as effective crowd control when thrown.</n>Inserting Voltus into the underside of a charging Atmospheric Attenuator will cause the Voltus to be converted to FE, with a lucrative exchange rate (%1$fFE per Voltus).
info.gem_trans.name=Gem Transmutation
info.gem_trans=Combining Fusas with one of the four base metals, along with a Practitioner's Stone catalyst, allows producing Rubies, Emeralds, Diamonds, and Nether Quartz.
info.late_terra.name=Later Terraforming
info.late_terra.main=Each of the three secondary elemental reagents has a transmutative effect like Aether.</n>Eldrine sets the biome to Hell, turns rock into netherrack, turns soil into soul sand, turns crystalline materials into glowstone, and turns liquids to lava. Adding Quicksilver makes it produce glowstone.</n>Lumen sets the biome to Deep Ocean, turns rock to prismarine, soil to clay, liquid to Distilled Water, and crystals to sea lanterns. Adding Quicksilver makes it produce Distilled Water.</n>Stasisol sets the biome to Ice Plains, turns rock to packed ice, turns soil to snow, turns liquid to ice, and turns crystal to Blocks of Pure Quartz. Adding Quicksilver makes it produce snow.
info.late_terra.infer=</n>Ignis Infernum has a similar effect as Phelostogen, the only difference being that the radius of Ignis Infernum's flame cloud is dramatically large, able to cover entire small mountains in one go.
